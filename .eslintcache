[{"D:\\Project\\bkc-frontend\\src\\index.js":"1","D:\\Project\\bkc-frontend\\src\\reportWebVitals.js":"2","D:\\Project\\bkc-frontend\\src\\i18n.js":"3","D:\\Project\\bkc-frontend\\src\\store.js":"4","D:\\Project\\bkc-frontend\\src\\App.js":"5","D:\\Project\\bkc-frontend\\src\\Pages\\BookingApproval.js":"6","D:\\Project\\bkc-frontend\\src\\Pages\\BookingRequest.js":"7","D:\\Project\\bkc-frontend\\src\\Pages\\BookingHistory.js":"8","D:\\Project\\bkc-frontend\\src\\Components\\Commons\\ErrorBoundary.js":"9","D:\\Project\\bkc-frontend\\src\\Pages\\CarManagement.js":"10","D:\\Project\\bkc-frontend\\src\\ActionCreators\\appActionCreator.js":"11","D:\\Project\\bkc-frontend\\src\\Pages\\DriverManagement.js":"12","D:\\Project\\bkc-frontend\\src\\Components\\Commons\\NavBar.js":"13","D:\\Project\\bkc-frontend\\src\\Reducers\\index.js":"14","D:\\Project\\bkc-frontend\\src\\ActionCreators\\bookingHistoryActionCreator.js":"15","D:\\Project\\bkc-frontend\\src\\ActionCreators\\adminActionCreator.js":"16","D:\\Project\\bkc-frontend\\src\\Components\\Admin\\TicketRequestContainer.js":"17","D:\\Project\\bkc-frontend\\src\\Components\\BookingHistory\\BookingHistoryContainer.js":"18","D:\\Project\\bkc-frontend\\src\\Constants\\AppConstants.js":"19","D:\\Project\\bkc-frontend\\src\\Helpers\\callApi.js":"20","D:\\Project\\bkc-frontend\\src\\ActionCreators\\carManagementActionCreator.js":"21","D:\\Project\\bkc-frontend\\src\\ActionCreators\\driverManagementActionCreator.js":"22","D:\\Project\\bkc-frontend\\src\\Components\\BookingApproval\\BookingApprovalContainer.js":"23","D:\\Project\\bkc-frontend\\src\\Components\\BookingRequest\\TicketContainer.js":"24","D:\\Project\\bkc-frontend\\src\\Components\\DriverManagement\\DriverManagementContainer.js":"25","D:\\Project\\bkc-frontend\\src\\Components\\CarManagement\\CarManagementContainer.js":"26","D:\\Project\\bkc-frontend\\src\\Reducers\\appReducer.js":"27","D:\\Project\\bkc-frontend\\src\\Reducers\\adminReducer.js":"28","D:\\Project\\bkc-frontend\\src\\Reducers\\ticketReducer.js":"29","D:\\Project\\bkc-frontend\\src\\Reducers\\bookingHistoryReducer.js":"30","D:\\Project\\bkc-frontend\\src\\Reducers\\carManagementReducer.js":"31","D:\\Project\\bkc-frontend\\src\\Reducers\\bookingApprovalReducer.js":"32","D:\\Project\\bkc-frontend\\src\\Reducers\\driverManagementReducer.js":"33","D:\\Project\\bkc-frontend\\src\\Constants\\AdminConstants.js":"34","D:\\Project\\bkc-frontend\\src\\Helpers\\notification.js":"35","D:\\Project\\bkc-frontend\\src\\Constants\\bookingHistoryConstants.js":"36","D:\\Project\\bkc-frontend\\src\\Components\\BookingApproval\\TicketInformationReadOnly.js":"37","D:\\Project\\bkc-frontend\\src\\Components\\BookingApproval\\DriverTable.js":"38","D:\\Project\\bkc-frontend\\src\\Components\\BookingApproval\\LocationTableReadOnly.js":"39","D:\\Project\\bkc-frontend\\src\\Components\\BookingApproval\\BookingApprovalButton.js":"40","D:\\Project\\bkc-frontend\\src\\Components\\BookingApproval\\TicketDetailReadOnly.js":"41","D:\\Project\\bkc-frontend\\src\\Components\\BookingRequest\\Location.js":"42","D:\\Project\\bkc-frontend\\src\\Components\\BookingRequest\\TicketInformation.js":"43","D:\\Project\\bkc-frontend\\src\\Components\\BookingRequest\\TicketContainerButton.js":"44","D:\\Project\\bkc-frontend\\src\\ActionCreators\\ticketActionCreator.js":"45","D:\\Project\\bkc-frontend\\src\\Components\\BookingHistory\\BookingHistoryTable.js":"46","D:\\Project\\bkc-frontend\\src\\Components\\Admin\\TicketRequestTable.js":"47","D:\\Project\\bkc-frontend\\src\\Constants\\CarManagementConstants.js":"48","D:\\Project\\bkc-frontend\\src\\Constants\\DriverManagementConstants.js":"49","D:\\Project\\bkc-frontend\\src\\Components\\BookingRequest\\TicketDetail.js":"50","D:\\Project\\bkc-frontend\\src\\Components\\DriverManagement\\DriverAdd.js":"51","D:\\Project\\bkc-frontend\\src\\Components\\CarManagement\\CarAdd.js":"52","D:\\Project\\bkc-frontend\\src\\Components\\CarManagement\\CarTable.js":"53","D:\\Project\\bkc-frontend\\src\\Components\\DriverManagement\\DriverTable.js":"54","D:\\Project\\bkc-frontend\\src\\Constants\\TicketConstants.js":"55","D:\\Project\\bkc-frontend\\src\\Constants\\bookingApprovalConstants.js":"56","D:\\Project\\bkc-frontend\\src\\Components\\BookingApproval\\LocationItemReadOnly.js":"57","D:\\Project\\bkc-frontend\\src\\Components\\BookingRequest\\LocationButton.js":"58","D:\\Project\\bkc-frontend\\src\\Components\\BookingApproval\\DriverItem.js":"59","D:\\Project\\bkc-frontend\\src\\Components\\BookingRequest\\LocationTable.js":"60","D:\\Project\\bkc-frontend\\src\\Helpers\\validation.js":"61","D:\\Project\\bkc-frontend\\src\\Components\\Commons\\Tooltip.js":"62","D:\\Project\\bkc-frontend\\src\\Components\\BookingHistory\\BookingHistoryItem.js":"63","D:\\Project\\bkc-frontend\\src\\Components\\Admin\\TicketRequestItem.js":"64","D:\\Project\\bkc-frontend\\src\\Components\\Commons\\MultipleSelect.js":"65","D:\\Project\\bkc-frontend\\src\\Components\\Commons\\AutoComplete1.js":"66","D:\\Project\\bkc-frontend\\src\\Components\\CarManagement\\CarItem.js":"67","D:\\Project\\bkc-frontend\\src\\Components\\DriverManagement\\DriverItem.js":"68","D:\\Project\\bkc-frontend\\src\\Components\\BookingRequest\\LocationItem.js":"69","D:\\Project\\bkc-frontend\\src\\ActionCreators\\bookingApprovalActionCreator.js":"70","D:\\Project\\bkc-frontend\\src\\Components\\BookingRequest\\ModalAddLocation.js":"71","D:\\Project\\bkc-frontend\\src\\Constants\\CommonsConstants.js":"72","D:\\Project\\bkc-frontend\\src\\Pages\\TicketManagement.js":"73","D:\\Project\\bkc-frontend\\src\\Helpers\\formatPhoneNumber.js":"74","D:\\Project\\bkc-frontend\\src\\Helpers\\login.js":"75"},{"size":655,"mtime":1609928535464,"results":"76","hashOfConfig":"77"},{"size":375,"mtime":1609722993026,"results":"78","hashOfConfig":"77"},{"size":6244,"mtime":1611808705826,"results":"79","hashOfConfig":"77"},{"size":544,"mtime":1611720715424,"results":"80","hashOfConfig":"77"},{"size":3950,"mtime":1611807622029,"results":"81","hashOfConfig":"77"},{"size":760,"mtime":1611904858827,"results":"82","hashOfConfig":"77"},{"size":527,"mtime":1611815706027,"results":"83","hashOfConfig":"77"},{"size":783,"mtime":1611815797660,"results":"84","hashOfConfig":"77"},{"size":745,"mtime":1609722993011,"results":"85","hashOfConfig":"77"},{"size":654,"mtime":1611816158604,"results":"86","hashOfConfig":"77"},{"size":1116,"mtime":1611823533465,"results":"87","hashOfConfig":"77"},{"size":692,"mtime":1611816177664,"results":"88","hashOfConfig":"77"},{"size":7425,"mtime":1611825530097,"results":"89","hashOfConfig":"77"},{"size":664,"mtime":1611535722761,"results":"90","hashOfConfig":"77"},{"size":1254,"mtime":1611297915734,"results":"91","hashOfConfig":"77"},{"size":1343,"mtime":1611900316244,"results":"92","hashOfConfig":"77"},{"size":433,"mtime":1611800857652,"results":"93","hashOfConfig":"77"},{"size":445,"mtime":1611800868851,"results":"94","hashOfConfig":"77"},{"size":143,"mtime":1611815625504,"results":"95","hashOfConfig":"77"},{"size":589,"mtime":1609750737793,"results":"96","hashOfConfig":"77"},{"size":2042,"mtime":1611535722739,"results":"97","hashOfConfig":"77"},{"size":2197,"mtime":1611535722739,"results":"98","hashOfConfig":"77"},{"size":5519,"mtime":1611912895509,"results":"99","hashOfConfig":"77"},{"size":11050,"mtime":1611911663770,"results":"100","hashOfConfig":"77"},{"size":550,"mtime":1611727258951,"results":"101","hashOfConfig":"77"},{"size":529,"mtime":1611727223315,"results":"102","hashOfConfig":"77"},{"size":812,"mtime":1611815626800,"results":"103","hashOfConfig":"77"},{"size":659,"mtime":1611900356311,"results":"104","hashOfConfig":"77"},{"size":1142,"mtime":1611280198945,"results":"105","hashOfConfig":"77"},{"size":744,"mtime":1611295575644,"results":"106","hashOfConfig":"77"},{"size":1410,"mtime":1611535722761,"results":"107","hashOfConfig":"77"},{"size":1384,"mtime":1611907904885,"results":"108","hashOfConfig":"77"},{"size":1263,"mtime":1611535722761,"results":"109","hashOfConfig":"77"},{"size":202,"mtime":1611571512016,"results":"110","hashOfConfig":"77"},{"size":730,"mtime":1609722993019,"results":"111","hashOfConfig":"77"},{"size":100,"mtime":1611295416873,"results":"112","hashOfConfig":"77"},{"size":2281,"mtime":1611806202750,"results":"113","hashOfConfig":"77"},{"size":2679,"mtime":1611916541364,"results":"114","hashOfConfig":"77"},{"size":2288,"mtime":1611806215714,"results":"115","hashOfConfig":"77"},{"size":4259,"mtime":1611913168509,"results":"116","hashOfConfig":"77"},{"size":2379,"mtime":1611806208110,"results":"117","hashOfConfig":"77"},{"size":890,"mtime":1611799338271,"results":"118","hashOfConfig":"77"},{"size":2823,"mtime":1611808825920,"results":"119","hashOfConfig":"77"},{"size":2585,"mtime":1611800663604,"results":"120","hashOfConfig":"77"},{"size":1692,"mtime":1611725260885,"results":"121","hashOfConfig":"77"},{"size":2237,"mtime":1611800818450,"results":"122","hashOfConfig":"77"},{"size":2353,"mtime":1611801473264,"results":"123","hashOfConfig":"77"},{"size":152,"mtime":1611535722761,"results":"124","hashOfConfig":"77"},{"size":176,"mtime":1611535722761,"results":"125","hashOfConfig":"77"},{"size":19252,"mtime":1611799126517,"results":"126","hashOfConfig":"77"},{"size":8417,"mtime":1611808925158,"results":"127","hashOfConfig":"77"},{"size":7946,"mtime":1611824335757,"results":"128","hashOfConfig":"77"},{"size":2062,"mtime":1611809124903,"results":"129","hashOfConfig":"77"},{"size":2000,"mtime":1611809115725,"results":"130","hashOfConfig":"77"},{"size":234,"mtime":1611196858176,"results":"131","hashOfConfig":"77"},{"size":202,"mtime":1611904788704,"results":"132","hashOfConfig":"77"},{"size":901,"mtime":1611802673758,"results":"133","hashOfConfig":"77"},{"size":1347,"mtime":1611299588857,"results":"134","hashOfConfig":"77"},{"size":3129,"mtime":1611916028112,"results":"135","hashOfConfig":"77"},{"size":3992,"mtime":1611800074940,"results":"136","hashOfConfig":"77"},{"size":726,"mtime":1611556999177,"results":"137","hashOfConfig":"77"},{"size":950,"mtime":1611191258778,"results":"138","hashOfConfig":"77"},{"size":3966,"mtime":1611795753448,"results":"139","hashOfConfig":"77"},{"size":5229,"mtime":1611912953752,"results":"140","hashOfConfig":"77"},{"size":8098,"mtime":1611796940064,"results":"141","hashOfConfig":"77"},{"size":2151,"mtime":1611797198666,"results":"142","hashOfConfig":"77"},{"size":5919,"mtime":1611804843139,"results":"143","hashOfConfig":"77"},{"size":7442,"mtime":1611805521196,"results":"144","hashOfConfig":"77"},{"size":12304,"mtime":1611800341653,"results":"145","hashOfConfig":"77"},{"size":1584,"mtime":1611907675743,"results":"146","hashOfConfig":"77"},{"size":15156,"mtime":1611800533555,"results":"147","hashOfConfig":"77"},{"size":1282,"mtime":1611826497969,"results":"148","hashOfConfig":"77"},{"size":826,"mtime":1611815901763,"results":"149","hashOfConfig":"77"},{"size":346,"mtime":1611796535826,"results":"150","hashOfConfig":"77"},{"size":3860,"mtime":1611825422314,"results":"151","hashOfConfig":"77"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"1hs6kaj",{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"154"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"154"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"154"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"154"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"154"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"154"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"154"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"154"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"154"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"154"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"154"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"292","messages":"293","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"154"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"154"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"154"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"154"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"154"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"154"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"154"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"D:\\Project\\bkc-frontend\\src\\index.js",[],["321","322"],"D:\\Project\\bkc-frontend\\src\\reportWebVitals.js",[],"D:\\Project\\bkc-frontend\\src\\i18n.js",[],"D:\\Project\\bkc-frontend\\src\\store.js",["323"],"import { applyMiddleware, createStore } from 'redux';\r\nimport ThunkMiddleware from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { rootReducer } from './Reducers';\r\nconst middleware = [ThunkMiddleware];\r\nconst middlewareEnhancer = applyMiddleware(...middleware);\r\nconst enhancers = [middlewareEnhancer];\r\nconst composedEnhancers = composeWithDevTools({trace: true});\r\nconst store = createStore(rootReducer, undefined, composedEnhancers(\r\n    applyMiddleware(ThunkMiddleware)\r\n));\r\nexport default store;","D:\\Project\\bkc-frontend\\src\\App.js",["324","325"],"import ErrorBoundary from \"./Components/Commons/ErrorBoundary\";\r\nimport './App.scss'\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\n// import { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\r\nimport { Router, Switch, Route, Redirect } from 'react-router-dom'\r\nimport { NavBar } from \"./Components/Commons/NavBar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NotificationContainer } from 'react-notifications';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { BookingRequest } from \"./Pages/BookingRequest\";\r\nimport { useEffect } from \"react\";\r\nimport { BookingHistory } from \"./Pages/BookingHistory\";\r\nimport { TicketManagement } from \"./Pages/TicketManagement\";\r\nimport { BookingApproval } from \"./Pages/BookingApproval\";\r\nimport { CarManagement } from \"./Pages/CarManagement\";\r\nimport { DriverManagement } from \"./Pages/DriverManagement\";\r\nimport { ROLE } from \"./Constants/CommonsConstants\";\r\nexport const history = require(\"history\").createBrowserHistory();\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ErrorBoundary>\r\n        <NotificationContainer />\r\n        <ToastContainer\r\n          position=\"top-right\"\r\n          autoClose={4000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n        <Router history={history}>\r\n          {/* <div className=\"mt-5\"></div> */}\r\n          <NavBar />\r\n          <div className=\"mt-1 mb-1\"></div>\r\n          <Switch>\r\n            <PrivateRoute path=\"/ticket-request/:action?/:ticketId?\" roles={[ROLE.SUPER_ADMIN, ROLE.ADMIN, ROLE.MEMBER]}>\r\n              <BookingRequest />\r\n            </PrivateRoute>\r\n\r\n            <PrivateRoute path=\"/ticket-history\" roles={[ROLE.SUPER_ADMIN, ROLE.ADMIN, ROLE.MEMBER]}>\r\n              <BookingHistory />\r\n            </PrivateRoute>\r\n\r\n            <PrivateRoute path=\"/ticket-management\" roles={[ROLE.SUPER_ADMIN, ROLE.ADMIN]}>\r\n              <TicketManagement />\r\n            </PrivateRoute>\r\n\r\n            <PrivateRoute path=\"/booking-approval/:ticketId\" roles={[ROLE.SUPER_ADMIN, ROLE.ADMIN]}>\r\n              <BookingApproval />\r\n            </PrivateRoute>\r\n\r\n            <PrivateRoute path=\"/car-management\" roles={[ROLE.SUPER_ADMIN, ROLE.ADMIN]}>\r\n              <CarManagement />\r\n            </PrivateRoute>\r\n\r\n            <PrivateRoute path=\"/driver-management\" roles={[ROLE.SUPER_ADMIN, ROLE.ADMIN]}>\r\n              <DriverManagement />\r\n            </PrivateRoute>\r\n\r\n            {/* <PrivateRoute path=\"/history-booking\" roles={[ROLE.SUPER_ADMIN, ROLE.ADMIN, ROLE.MEMBER]}>\r\n\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/request-booking/:action?\" roles={[ROLE.SUPER_ADMIN, ROLE.ADMIN, ROLE.MEMBER]}>\r\n\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/admin\" roles={[ROLE.SUPER_ADMIN, ROLE.ADMIN]}>\r\n\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/:action/:bookingInforId\" roles={[ROLE.SUPER_ADMIN, ROLE.ADMIN]}>\r\n\r\n            </PrivateRoute> */}\r\n          </Switch>\r\n        </Router>\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n\r\nfunction PrivateRoute({ children, ...rest }) {\r\n  const employee = useSelector(state => state.appReducer.employee);\r\n  const { roles, path } = rest;\r\n  let isAuth = null;\r\n  if (!roles.length) {\r\n    isAuth = false;\r\n  }\r\n  else {\r\n    for (let r of roles) {\r\n      if (r === employee.role) {\r\n        isAuth = true;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  if (!isAuth) console.log(\"Not have permission\");\r\n  return (\r\n    <Route\r\n      path={path}\r\n      render={() => {\r\n        return isAuth ? (children) : (<Redirect to=\"/\" />)\r\n      }}\r\n    />\r\n  );\r\n}\r\n","D:\\Project\\bkc-frontend\\src\\Pages\\BookingApproval.js",["326"],"D:\\Project\\bkc-frontend\\src\\Pages\\BookingRequest.js",[],"D:\\Project\\bkc-frontend\\src\\Pages\\BookingHistory.js",[],"D:\\Project\\bkc-frontend\\src\\Components\\Commons\\ErrorBoundary.js",[],"D:\\Project\\bkc-frontend\\src\\Pages\\CarManagement.js",[],"D:\\Project\\bkc-frontend\\src\\ActionCreators\\appActionCreator.js",[],"D:\\Project\\bkc-frontend\\src\\Pages\\DriverManagement.js",[],"D:\\Project\\bkc-frontend\\src\\Components\\Commons\\NavBar.js",["327","328","329","330","331","332"],"import { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport './NavBar.scss';\r\nimport { ROLE } from '../../Constants/CommonsConstants';\r\nimport { requestAuthenticated, setEmployee, setIsAuth } from '../../ActionCreators/appActionCreator';\r\nimport { login, logout } from '../../Helpers/login';\r\nimport { notification, NOTIFICATION_TYPE } from '../../Helpers/notification';\r\nimport vnFlag from './../../Assets/Bootstrap-icon/vnFlag.jpg';\r\nimport usaFlag from './../../Assets/Bootstrap-icon/usaFlag.jpg';\r\nexport const NavBar = () => {\r\n    const { t, i18n } = useTranslation();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const isAuth = useSelector(state => state.appReducer.isAuth);\r\n    const pageName = useSelector(state => state.appReducer.pageName);\r\n    const employee = useSelector(state => state.appReducer.employee);\r\n    const isShowNavBar = Object.keys(employee).length !== 0 ? true : false;\r\n    const isShowAdmin = employee && (employee.role === ROLE.SUPER_ADMIN || employee.role === ROLE.ADMIN);\r\n    const isShowTicketManagement = (employee.role === ROLE.SUPER_ADMIN || employee.role === ROLE.ADMIN) ? true : false;\r\n    async function handleClick(e) {\r\n        if (e === \"logout\") {\r\n            logout();\r\n            dispatch(setEmployee({}));\r\n            dispatch(setIsAuth(false));\r\n            history.push(\"/\");\r\n            return;\r\n        }\r\n        if (e === \"login\") {\r\n            // const u = await login();\r\n            // if (u) {\r\n            //     dispatch(requestAuthenticated(u.mail));\r\n            // } else {\r\n            //     notification(NOTIFICATION_TYPE.ERROR, \"Login Fail, Please Try Again\")\r\n            // }\r\n\r\n            // dispatch(requestAuthenticate(\"hoe.ph@greenfeed.com.vn\"));\r\n            // dispatch(requestAuthenticate(\"khiem.nt@greenfeed.com.vn\"));\r\n            dispatch(requestAuthenticated(\"huy.ndinh@greenfeed.com.vn\"));\r\n\r\n        }\r\n    }\r\n    function handleChangeLanguage(lang) {\r\n        i18n.changeLanguage(lang);\r\n    }\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row d-flex justify-content-center\">\r\n                <div className=\"col-12 col-xl-12\">\r\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-success shift\">\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo03\" aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <Link to=\"/\" className=\"navbar-brand\"><i className=\"fas fa-home\"></i></Link>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\r\n                            <ul style={{ display: isShowNavBar ? \"\" : \"none\" }} className=\"navbar-nav mr-auto\">\r\n                                <li className={pageName === \"TicketRequest\" ? \"nav-item active-page\" : \"nav-item\"}>\r\n                                    <Link className=\"nav-link\" to=\"/ticket-request\">\r\n                                        <i className=\"fas fa-car mr-1\"></i>\r\n                                        {t(\"yeucaudatxe\")}\r\n                                    </Link>\r\n                                </li>\r\n                                <li className={pageName === \"TicketHistory\" ? \"nav-item active-page\" : \"nav-item\"}>\r\n                                    <Link className=\"nav-link\" to=\"/ticket-history\">\r\n                                        <i className=\"fas fa-history mr-1\"></i>\r\n                                        {t(\"lichsudatxe\")}\r\n                                    </Link>\r\n                                </li>\r\n                                <li\r\n                                    className={pageName === \"TicketManagement\" ? \"nav-item active-page\" : \"nav-item\"}\r\n                                    style={{ display: isShowTicketManagement ? \"\" : \"none\" }}\r\n                                >\r\n                                    <Link className=\"nav-link\" to=\"/ticket-management\">\r\n                                        <i className=\"fas fa-user-cog mr-1\"></i>\r\n                                        {t(\"xulidatxe\")}\r\n                                    </Link>\r\n                                </li>\r\n                                <li\r\n                                    style={{ display: isShowAdmin ? \"\" : \"none\" }}\r\n                                    className={pageName === \"CarManagement\" || pageName === \"DriverManagement\" ? \"nav-item dropdown active-page\" : \"nav-item dropdown\"}\r\n                                >\r\n                                    <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                        <i className=\"fas fa-user-cog mr-1\"></i>\r\n                                        {t(\"admin\")}\r\n                                    </a>\r\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                                        <Link to=\"/car-management\" className=\"dropdown-item\" href=\"#\">{t(\"quanlixe\")}</Link>\r\n                                        <Link to=\"/driver-management\" className=\"dropdown-item\" href=\"#\">{t(\"quanlitaixe\")}</Link>\r\n                                        {/* <a className=\"dropdown-item\" href=\"#\">Quản Lí Tài Khoản</a> */}\r\n                                    </div>\r\n                                </li>\r\n                                <li className=\"nav-item d-flex align-items-center ml-2\">\r\n                                    {/* <button onClick={() => handleChangeLanguage(\"en\")} className=\"btn btn-sm btn-primary\" type=\"button\">\r\n                                        {t(\"tienganh\")}\r\n                                    </button>\r\n                                    <button onClick={() => handleChangeLanguage(\"vn\")} className=\"btn btn-sm btn-primary\" type=\"button\">\r\n                                        {t(\"tiengviet\")}\r\n                                    </button> */}\r\n                                    <img onClick={() => handleChangeLanguage(\"vn\")} className=\"mr-2\" style={{ height: \"26px\", cursor: \"pointer\" }} src={vnFlag} />\r\n                                    <img onClick={() => handleChangeLanguage(\"en\")} style={{ height: \"25px\", cursor: \"pointer\" }} src={usaFlag} />\r\n                                </li>\r\n                            </ul>\r\n\r\n                        </div>\r\n                        <div className=\"btn__login\">\r\n                            <button\r\n                                onClick={() => handleClick(!isAuth ? \"login\" : \"logout\")}\r\n                                className=\"btn btn-light btn-sm my-2 my-sm-0\"\r\n                            >\r\n                                <i className={!isAuth ? \"fas fa-arrow-alt-circle-right mr-1\" : \"fas fa-arrow-alt-circle-left mr-1\"}></i>\r\n                                {!isAuth ? t(\"dangnhap\") : t(\"dangxuat\")}\r\n                            </button>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","D:\\Project\\bkc-frontend\\src\\Reducers\\index.js",[],"D:\\Project\\bkc-frontend\\src\\ActionCreators\\bookingHistoryActionCreator.js",[],"D:\\Project\\bkc-frontend\\src\\ActionCreators\\adminActionCreator.js",["333","334"],"import { SET_DRIVERS, SET_TICKET_REQUESTS, SET_TRIPS, UPDATE_TICKET_REQUEST } from \"../Constants/AdminConstants\";\r\nimport { END_POINT, HTTP_METHOD } from \"../Constants/CommonsConstants\"\r\nimport { callApi } from \"../Helpers/callApi\"\r\nimport { notification, NOTIFICATION_TYPE } from \"../Helpers/notification\";\r\nexport const setTicketRequests = (ticketRequests) => {\r\n    return {\r\n        type: SET_TICKET_REQUESTS,\r\n        ticketRequests\r\n    }\r\n}\r\nexport const setDrivers = (drivers) => {\r\n    return {\r\n        type: SET_DRIVERS,\r\n        drivers\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const fetchTicketsByBuId = (buId) => {\r\n    return async dispatch => {\r\n        const res = await callApi(`${END_POINT}/tickets/?selector=BU&id=${buId}`, HTTP_METHOD.GET, null);\r\n        if(res.status !== 200){\r\n            notification(NOTIFICATION_TYPE.ERROR, \"Failed\");\r\n            return;\r\n        }\r\n        const ticketRequests = res.data;\r\n        dispatch(setTicketRequests(ticketRequests));\r\n    }\r\n}\r\n\r\nexport const fetchDriversByBuId = buId => {\r\n    return async dispatch => {\r\n        const res = await callApi(`${END_POINT}/drivers/${buId}`, HTTP_METHOD.GET, null);\r\n        if(res.status !== 200) return notification(NOTIFICATION_TYPE.ERROR, \"Loading Driver Fail\");\r\n        const drivers = res.data;\r\n        dispatch(setDrivers(drivers));\r\n    }\r\n}\r\n","D:\\Project\\bkc-frontend\\src\\Components\\Admin\\TicketRequestContainer.js",[],"D:\\Project\\bkc-frontend\\src\\Components\\BookingHistory\\BookingHistoryContainer.js",[],"D:\\Project\\bkc-frontend\\src\\Constants\\AppConstants.js",[],"D:\\Project\\bkc-frontend\\src\\Helpers\\callApi.js",[],"D:\\Project\\bkc-frontend\\src\\ActionCreators\\carManagementActionCreator.js",[],"D:\\Project\\bkc-frontend\\src\\ActionCreators\\driverManagementActionCreator.js",[],"D:\\Project\\bkc-frontend\\src\\Components\\BookingApproval\\BookingApprovalContainer.js",["335","336","337","338"],"D:\\Project\\bkc-frontend\\src\\Components\\BookingRequest\\TicketContainer.js",["339","340","341"],"D:\\Project\\bkc-frontend\\src\\Components\\DriverManagement\\DriverManagementContainer.js",[],"D:\\Project\\bkc-frontend\\src\\Components\\CarManagement\\CarManagementContainer.js",[],"D:\\Project\\bkc-frontend\\src\\Reducers\\appReducer.js",[],"D:\\Project\\bkc-frontend\\src\\Reducers\\adminReducer.js",[],"D:\\Project\\bkc-frontend\\src\\Reducers\\ticketReducer.js",[],"D:\\Project\\bkc-frontend\\src\\Reducers\\bookingHistoryReducer.js",[],"D:\\Project\\bkc-frontend\\src\\Reducers\\carManagementReducer.js",[],"D:\\Project\\bkc-frontend\\src\\Reducers\\bookingApprovalReducer.js",["342"],"import { remove } from \"lodash\";\r\nimport {\r\n    SET_NOTE_FOR_DRIVER, \r\n    SET_SELECTED_CAR, \r\n    SET_TICKET,\r\n    SET_TICKET_CARS\r\n\r\n} from \"../Constants/bookingApprovalConstants\";\r\n\r\nconst initialState = {\r\n    noteForDriver: \"\",\r\n    selectedCars: [],\r\n    ticket: {},\r\n    ticketCars: []\r\n}\r\nexport const bookingApprovalReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TICKET: {\r\n            return {\r\n                ...state,\r\n                ticket: action.ticket\r\n            }\r\n        }\r\n        case SET_TICKET_CARS: {\r\n            return {\r\n                ...state,\r\n                ticketCars: action.ticketCars\r\n            }\r\n        }\r\n        case SET_SELECTED_CAR: {\r\n            const cloneSelectedCars = [...state.selectedCars];\r\n            if(action.selectedCar.type === \"moveCar\"){\r\n                cloneSelectedCars[0] = action.selectedCar\r\n            }else{\r\n                cloneSelectedCars[1] = action.selectedCar\r\n            }\r\n            return {\r\n                ...state,\r\n                selectedCars: cloneSelectedCars\r\n            }\r\n        }\r\n        case SET_NOTE_FOR_DRIVER: {\r\n            return {\r\n                ...state,\r\n                noteForDriver: action.noteForDriver\r\n            }\r\n        }\r\n\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}","D:\\Project\\bkc-frontend\\src\\Reducers\\driverManagementReducer.js",[],"D:\\Project\\bkc-frontend\\src\\Constants\\AdminConstants.js",[],"D:\\Project\\bkc-frontend\\src\\Helpers\\notification.js",[],"D:\\Project\\bkc-frontend\\src\\Constants\\bookingHistoryConstants.js",[],"D:\\Project\\bkc-frontend\\src\\Components\\BookingApproval\\TicketInformationReadOnly.js",[],"D:\\Project\\bkc-frontend\\src\\Components\\BookingApproval\\DriverTable.js",[],"D:\\Project\\bkc-frontend\\src\\Components\\BookingApproval\\LocationTableReadOnly.js",[],"D:\\Project\\bkc-frontend\\src\\Components\\BookingApproval\\BookingApprovalButton.js",["343"],"D:\\Project\\bkc-frontend\\src\\Components\\BookingApproval\\TicketDetailReadOnly.js",[],"D:\\Project\\bkc-frontend\\src\\Components\\BookingRequest\\Location.js",[],"D:\\Project\\bkc-frontend\\src\\Components\\BookingRequest\\TicketInformation.js",["344","345"],"import { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setTicketInformation } from \"../../ActionCreators/ticketActionCreator\";\r\nimport formatPhoneNumber from \"../../Helpers/formatPhoneNumber\";\r\n\r\nexport const TicketInformation = (props) => {\r\n    const dispatch = useDispatch();\r\n    const employee = useSelector(state => state.appReducer.employee);\r\n    const { name, phone, buName, lineManagerName, department } = employee;\r\n    const { t } = useTranslation();\r\n    useEffect(() => {\r\n        const ticketInformation = {\r\n            employeeId: employee.id,\r\n            employeeName: employee.name,\r\n            employeeLineManagerId: employee.lineManagerId,\r\n            employeeLineManagerName: employee.lineManagerName,\r\n            employeePhone: employee.phone,\r\n            employeeBuId: employee.buId,\r\n            employeeBuName: employee.buName,\r\n            employeeDepartment: employee.department,\r\n        }\r\n        dispatch(setTicketInformation(ticketInformation));\r\n    }, [employee]);\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-12 col-xl-12\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-xl-3\">\r\n                                <h5>{t(\"thongtinnguoidat\")}</h5>\r\n                            </div>\r\n                            <div className=\"w-100\"></div>\r\n                            \r\n                            <div className=\"col-6 col-xl-3\">\r\n                                <label><strong>{t(\"hovaten\")}: </strong> {name}</label>\r\n                            </div>\r\n                            <div className=\"col-6 col-xl-6\">\r\n                                <label><strong>{t(\"sodienthoai\")}: </strong> {formatPhoneNumber(phone)}</label>\r\n                            </div>\r\n                            <div className=\"w-100\"></div>\r\n                            <div className=\"col-6 col-xl-3\">\r\n                                <label><strong>{t(\"tenbu\")}: </strong> {buName}</label>\r\n                            </div>\r\n                            <div className=\"col-6 col-xl-6\">\r\n                                <label><strong>{t(\"phongban\")}: </strong> {department}</label>\r\n                            </div>\r\n                            <div className=\"w-100\"></div>\r\n                            <div className=\"col-6 col-xl-6\">\r\n                                <label><strong>{t(\"nguoiquanli\")}: </strong> {lineManagerName}</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","D:\\Project\\bkc-frontend\\src\\Components\\BookingRequest\\TicketContainerButton.js",[],"D:\\Project\\bkc-frontend\\src\\ActionCreators\\ticketActionCreator.js",[],"D:\\Project\\bkc-frontend\\src\\Components\\BookingHistory\\BookingHistoryTable.js",[],"D:\\Project\\bkc-frontend\\src\\Components\\Admin\\TicketRequestTable.js",[],"D:\\Project\\bkc-frontend\\src\\Constants\\CarManagementConstants.js",[],"D:\\Project\\bkc-frontend\\src\\Constants\\DriverManagementConstants.js",[],"D:\\Project\\bkc-frontend\\src\\Components\\BookingRequest\\TicketDetail.js",["346","347","348"],"import moment from 'moment';\r\nimport Datetime from 'react-datetime';\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport pickupTimeIcon from './../../Assets/Bootstrap-icon/calendar2-check.svg'\r\nimport locationIcon from './../../Assets/Bootstrap-icon/geo-alt.svg'\r\nimport destinationIcon from './../../Assets/Bootstrap-icon/geo-alt-fill.svg'\r\nimport totalPersonIcon from './../../Assets/Bootstrap-icon/people.svg'\r\nimport emailIcon from './../../Assets/Bootstrap-icon/people.svg';\r\nimport { Tooltip } from \"../Commons/Tooltip\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { remove, omit, isEmpty } from 'lodash';\r\nimport { NOT_EMPTY, ONLY_NUMBER, validation } from '../../Helpers/validation';\r\nimport { callApi } from '../../Helpers/callApi';\r\nimport { useEffect, useState } from 'react';\r\nimport { MultipleSelect } from '../Commons/MultipleSelect';\r\nimport { BOOKING_DETAIL_DEFAULT, END_POINT, HTTP_METHOD } from '../../Constants/CommonsConstants';\r\nimport { setTicketDetail } from '../../ActionCreators/ticketActionCreator';\r\nimport { useParams } from 'react-router-dom';\r\nfunction inputDtp(props) {\r\n    return (\r\n        <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n                <img alt=\"\" className=\"input-group-text\" src={pickupTimeIcon} />\r\n            </div>\r\n            <input\r\n                className=\"form-control form-control-sm\"\r\n                autoComplete=\"off\"\r\n                {...props}\r\n            />\r\n        </div>\r\n    );\r\n}\r\nexport const TicketDetail = () => {\r\n    const { t } = useTranslation();\r\n    const { ticketId, action } = useParams();\r\n    const dispatch = useDispatch();\r\n    const tickets = useSelector(state => state.bookingHistoryReducer.tickets)\r\n    const [ticketDetailLocal, setTicketDetailLocal] = useState({ ...BOOKING_DETAIL_DEFAULT });\r\n    console.log(\"ticketDetailLocal\", ticketDetailLocal);\r\n\r\n    const [suggestionsEmail, setSuggestionsEmail] = useState([]);\r\n    const [errors, setErrors] = useState({\r\n        startDate: \"\",\r\n        fromLocation: \"\",\r\n        toLocation: \"\",\r\n        totalParticipant: \"\"\r\n    });\r\n    console.log(\"errors\", errors);\r\n    async function handleChange(e) {\r\n        let validateResult = null;\r\n        switch (e.target.name) {\r\n            case \"employeeName\": {\r\n                const employeeName = e.target.value;\r\n                if (employeeName.length >= 3) {\r\n                    const res = await callApi(`${END_POINT}/employees/${employeeName}`, HTTP_METHOD.GET, null);\r\n                    if (res.status !== 200) return;\r\n                    const employees = res.data\r\n                    const suggestionsEmail = [];\r\n                    for (let i = 0; i < employees.length; i++) {\r\n                        suggestionsEmail.push({\r\n                            id: employees[i].id,\r\n                            label: employees[i].name + \" \" + employees[i].email,\r\n                            content: employees[i].email\r\n                        });\r\n                    }\r\n                    setSuggestionsEmail(suggestionsEmail);\r\n                }\r\n                return;\r\n            }\r\n            case \"startDate\": {\r\n                validateResult = validation(e.target.value, [NOT_EMPTY]);\r\n                break;\r\n            }\r\n            case \"fromLocation\": {\r\n                validateResult = validation(e.target.value, [NOT_EMPTY]);\r\n                break;\r\n            }\r\n            case \"toLocation\": {\r\n                validateResult = validation(e.target.value, [NOT_EMPTY]);\r\n                break;\r\n            }\r\n            case \"totalParticipant\": {\r\n                validateResult = validation(e.target.value, [NOT_EMPTY, ONLY_NUMBER]);\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n        if (!validateResult) {\r\n            let { [e.target.name]: a, ...rest } = errors;\r\n            setErrors(rest);\r\n        }\r\n        else {\r\n            setErrors({\r\n                ...errors,\r\n                [e.target.name]: validateResult\r\n            })\r\n        }\r\n        setTicketDetailLocal({\r\n            ...ticketDetailLocal,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    function handleChangePickup(momentObject) {\r\n        let startDate = null;\r\n        if (typeof momentObject === \"string\" || momentObject instanceof String) {\r\n            startDate = moment(momentObject, [\"DD/MM/YYYY\", \"DD-MM-YYYY\", \"D/M/YYYY\", \"D-M-YYYY\"], true);\r\n            if (startDate.isValid()) {\r\n                let { startDate: x, ...rest } = errors;\r\n                setErrors(rest);\r\n                setTicketDetailLocal({\r\n                    ...ticketDetailLocal,\r\n                    startDate: startDate.format(\"DD/MM/YYYY\")\r\n                });\r\n            } else {\r\n                setErrors({\r\n                    ...errors,\r\n                    startDate: \"Ngày Không Hợp Lệ\"\r\n                })\r\n                setTicketDetailLocal({\r\n                    ...ticketDetailLocal,\r\n                    startDate: momentObject\r\n                });\r\n            }\r\n\r\n        } else {\r\n            let { startDate: x, ...rest } = errors;\r\n            setErrors(rest);\r\n            setTicketDetailLocal({\r\n                ...ticketDetailLocal,\r\n                startDate: momentObject.format(\"DD/MM/YYYY\")\r\n            });\r\n        }\r\n\r\n    }\r\n    function handleChangeReturnTime(momentObject) {\r\n        let endDate = null;\r\n        if (typeof momentObject === \"string\" || momentObject instanceof String) {\r\n            if (momentObject.length === 0) {\r\n                setErrors(omit(errors, \"endDate\"));\r\n                setTicketDetailLocal({\r\n                    ...ticketDetailLocal,\r\n                    endDate: \"\"\r\n                })\r\n                return;\r\n            }\r\n            endDate = moment(momentObject, [\"DD/MM/YYYY\", \"DD-MM-YYYY\", \"D/M/YYYY\", \"D-M-YYYY\"], true);\r\n            if (endDate.isValid()) {\r\n                let { endDate: x, ...rest } = errors;\r\n                setErrors(rest);\r\n                setTicketDetailLocal({\r\n                    ...ticketDetailLocal,\r\n                    endDate: endDate.format(\"DD/MM/YYYY\")\r\n                });\r\n            } else {\r\n                setErrors({\r\n                    ...errors,\r\n                    endDate: \"Ngày Không Hợp Lệ\"\r\n                })\r\n                setTicketDetailLocal({\r\n                    ...ticketDetailLocal,\r\n                    endDate: momentObject\r\n                });\r\n            }\r\n        } else {\r\n            let { endDate: x, ...rest } = errors;\r\n            setErrors(rest);\r\n            setTicketDetailLocal({\r\n                ...ticketDetailLocal,\r\n                endDate: momentObject.format(\"DD/MM/YYYY\")\r\n            });\r\n        }\r\n    }\r\n    function handleSelectedEmployee(item) {\r\n        const objEmail = {\r\n            employeeId: item.id,\r\n            employeeEmail: item.content\r\n        }\r\n        const newRelatePersons = [...ticketDetailLocal.relatedPeoples, objEmail];\r\n        setTicketDetailLocal({\r\n            ...ticketDetailLocal,\r\n            relatedPeoples: newRelatePersons\r\n        })\r\n    }\r\n    function handleDeleteEmployee(itemId) {\r\n        const cloneRelatePersons = [...ticketDetailLocal.relatedPeoples];\r\n        if (cloneRelatePersons.length === 1) {\r\n\r\n        }\r\n        remove(cloneRelatePersons, (item) => {\r\n            return item.employeeId === itemId;\r\n        });\r\n        setTicketDetailLocal({\r\n            ...ticketDetailLocal,\r\n            relatedPeoples: cloneRelatePersons\r\n        })\r\n\r\n    }\r\n    useEffect(() => {\r\n        if (!isEmpty(errors)) return dispatch(setTicketDetail({}));\r\n\r\n        dispatch(setTicketDetail(ticketDetailLocal));\r\n    }, [ticketDetailLocal, errors])\r\n    useEffect(() => {\r\n        const ticket = tickets.find(item => {\r\n            return item.id === +ticketId;\r\n        });\r\n        if (ticket) {\r\n            const ticketDetail = {\r\n                startDate: ticket.startDate,\r\n                endDate: ticket.endDate,\r\n                fromLocation: ticket.fromLocation,\r\n                toLocation: ticket.toLocation,\r\n                totalParticipant: ticket.totalParticipant,\r\n                relatedPeoples: ticket.relatedPeoples ? ticket.relatedPeoples : [],\r\n                reasonBooking: ticket.reasonBooking\r\n            }\r\n            setTicketDetailLocal(ticketDetail);\r\n            setErrors({});\r\n        } else {\r\n            setTicketDetailLocal({ ...BOOKING_DETAIL_DEFAULT });\r\n            setErrors({\r\n                startDate: \"\",\r\n                fromLocation: \"\",\r\n                toLocation: \"\",\r\n                totalParticipant: \"\"\r\n            })\r\n        }\r\n    }, [tickets]);\r\n    return (\r\n        <div className=\"row bkc_form\">\r\n            <div className=\"col-12 col-xl-12\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-xl-4\">\r\n                                <h5>{t(\"thongtinnoidon\")}</h5>\r\n                            </div>\r\n                            <div className=\"w-100\"></div>\r\n                            <div className=\"col-6 col-xl-4\">\r\n                                <label className=\"d-flex align-items-center\">\r\n                                    <strong>{t(\"ngaydi\")}</strong>\r\n                                    <i className=\"fas fa-asterisk fa-xs mr-1 asterisk ml-1\" />\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"col-6 col-xl-4\">\r\n                                <label className=\"d-flex align-items-center\">\r\n                                    <strong>{t(\"ngayve\")}</strong>\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"w-100\"></div>\r\n                            <div className=\"col-6 col-xl-4\">\r\n                                <Tooltip active={errors.startDate ? true : false} content={errors.startDate} direction=\"top\">\r\n                                    <Datetime\r\n                                        renderInput={inputDtp}\r\n                                        dateFormat=\"DD/MM/YYYY\"\r\n                                        timeFormat={false}\r\n                                        closeOnSelect={true}\r\n                                        inputProps={{ className: \"form-control form-control-sm\", name: \"startDate\", placeholder: \"dd/mm/yyyy\", value: ticketDetailLocal.startDate }}\r\n                                        onChange={handleChangePickup}\r\n                                    />\r\n\r\n                                </Tooltip>\r\n                            </div>\r\n                            <div className=\"col-6 col-xl-4\">\r\n                                <Tooltip active={errors.endDate ? true : false} content={errors.endDate} direction=\"top\">\r\n                                    <Datetime\r\n                                        renderInput={inputDtp}\r\n                                        dateFormat=\"DD/MM/YYYY\"\r\n                                        timeFormat={false}\r\n                                        closeOnSelect={true}\r\n                                        inputProps={{ className: \"form-control form-control-sm\", name: \"endDate\", placeholder: \"dd/mm/yyyy\", value: ticketDetailLocal.endDate }}\r\n                                        onChange={handleChangeReturnTime}\r\n                                    />\r\n                                </Tooltip>\r\n                            </div>\r\n                            <div className=\"w-100\"></div>\r\n                            <div className=\"col-6 col-xl-4\">\r\n                                <label className=\"d-flex align-items-center\">\r\n                                    <strong>{t(\"diadiemden\")}</strong>\r\n                                    <i className=\"fas fa-asterisk fa-xs mr-1 asterisk ml-1\" />\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"col-6 col-xl-4\">\r\n                                <label className=\"d-flex align-items-center\">\r\n                                    <strong>{t(\"diadiemdon\")}</strong>\r\n                                    <i className=\"fas fa-asterisk fa-xs mr-1 asterisk ml-1\" />\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"w-100\"></div>\r\n                            <div className=\"col-6 col-xl-4\">\r\n                                <Tooltip active={errors.fromLocation ? true : false} content={errors.fromLocation} direction=\"top\">\r\n                                    <div className=\"input-group\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <img alt=\"\" className=\"input-group-text\" src={locationIcon} />\r\n                                        </div>\r\n                                        <input\r\n                                            onChange={handleChange}\r\n                                            className=\"form-control form-control-sm\"\r\n                                            name=\"fromLocation\"\r\n                                            value={ticketDetailLocal.fromLocation}\r\n                                            autoComplete=\"off\"\r\n                                        />\r\n                                    </div>\r\n                                </Tooltip>\r\n                            </div>\r\n                            <div className=\"col-6 col-xl-4\">\r\n                                <Tooltip active={errors.toLocation ? true : false} content={errors.toLocation} direction=\"top\">\r\n                                    <div className=\"input-group\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <img alt=\"\" className=\"input-group-text\" src={destinationIcon} />\r\n                                        </div>\r\n                                        <input onChange={handleChange}\r\n                                            className=\"form-control form-control-sm\"\r\n                                            name=\"toLocation\"\r\n                                            value={ticketDetailLocal.toLocation}\r\n                                            autoComplete=\"off\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                </Tooltip>\r\n                            </div>\r\n                            <div className=\"w-100\"></div>\r\n                            <div className=\"col-6 col-xl-4\">\r\n                                <label className=\"d-flex align-items-center\">\r\n                                    <strong>{t(\"songuoidi\")}</strong>\r\n                                    <i className=\"fas fa-asterisk fa-xs mr-1 asterisk ml-1\" />\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"col-6 col-xl-4\">\r\n                                <label><strong>{t(\"maildennguoilienquan\")}</strong></label>\r\n                            </div>\r\n                            <div className=\"w-100\"></div>\r\n                            <div className=\"col-6 col-xl-4\">\r\n                                <Tooltip active={errors.totalParticipant ? true : false} content={errors.totalParticipant} direction=\"top\">\r\n                                    <div className=\"input-group\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <img alt=\"\" className=\"input-group-text\" src={totalPersonIcon} />\r\n                                        </div>\r\n                                        <input\r\n                                            onChange={handleChange}\r\n                                            className=\"form-control form-control-sm\"\r\n                                            name=\"totalParticipant\"\r\n                                            value={ticketDetailLocal.totalParticipant}\r\n                                            autoComplete=\"off\"\r\n                                        />\r\n                                    </div>\r\n                                </Tooltip>\r\n                            </div>\r\n\r\n                            <div className=\"col-6 col-xl-4\">\r\n                                <MultipleSelect\r\n                                    suggestions={suggestionsEmail}\r\n                                    onChange={handleChange}\r\n                                    className=\"form-control form-control-sm\"\r\n                                    name=\"employeeName\"\r\n                                    onSelectedItem={handleSelectedEmployee}\r\n                                    onDeleteItem={handleDeleteEmployee}\r\n                                    icon={emailIcon}\r\n                                    isMultipleSelected={true}\r\n                                    initialValue={\r\n                                        ticketDetailLocal && ticketDetailLocal.relatedPeoples.map((item) => {\r\n                                            return {\r\n                                                id: item.employeeId,\r\n                                                content: item.employeeEmail\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"w-100\"></div>\r\n                            <div className=\"col-6 col-xl-4\">\r\n                                <label><strong>{t(\"lydodatxe\")}</strong></label>\r\n                            </div>\r\n                            <div className=\"w-100\"></div>\r\n                            <div className=\"col-6 col-xl-4\">\r\n                                <Tooltip active={errors.reasonBooking ? true : false} content={errors.reasonBooking} direction=\"top\">\r\n                                    <div className=\"input-group\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <i className=\"bi bi-question-circle input-group-text\"></i>\r\n                                        </div>\r\n                                        <input\r\n                                            onChange={handleChange}\r\n                                            className=\"form-control form-control-sm\"\r\n                                            name=\"reasonBooking\"\r\n                                            value={ticketDetailLocal.reasonBooking}\r\n                                            autoComplete=\"off\"\r\n                                        />\r\n                                    </div>\r\n                                </Tooltip>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","D:\\Project\\bkc-frontend\\src\\Components\\DriverManagement\\DriverAdd.js",["349"],"import 'react-responsive-modal/styles.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport { useEffect, useState } from 'react';\r\nimport { AutoComplete1 } from '../Commons/AutoComplete1';\r\nimport { callApi } from '../../Helpers/callApi';\r\nimport { DRIVER_ADD_DEFAULT, END_POINT, HTTP_METHOD } from '../../Constants/CommonsConstants';\r\nimport { notification, NOTIFICATION_TYPE } from '../../Helpers/notification';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addDriverRequest } from './../../ActionCreators/driverManagementActionCreator'\r\nimport { useTranslation } from 'react-i18next';\r\nexport const DriverAdd = props => {\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const [isOpenModal, setIsOpenModal] = useState(false);\r\n    const [suggestionDriverNames, setSuggestionDriverNames] = useState([]);\r\n    const [cars, setCars] = useState([]);\r\n    const [driverAdd, setDriverAdd] = useState({ ...DRIVER_ADD_DEFAULT })\r\n    const [employees, setEmployees] = useState([]);\r\n    console.log(\"driverAdd\", driverAdd);\r\n    // console.log(\"cars\", cars);\r\n    function handleClickAddDriver() {\r\n        setIsOpenModal(true);\r\n    }\r\n    function handleCloseModal() {\r\n        setIsOpenModal(false);\r\n        setDriverAdd({ ...DRIVER_ADD_DEFAULT })\r\n        setSuggestionDriverNames([])\r\n    }\r\n    function handleClick(suggestion) {\r\n        const employee = employees.find(e => {\r\n            return +e.id === +suggestion.id\r\n        });\r\n        setDriverAdd({\r\n            ...driverAdd,\r\n            employeeName: employee.name,\r\n            employeeId: employee.id,\r\n            employeePhone: employee.phone,\r\n            employeeBuName: employee.buName,\r\n            employeeBuId: employee.buId,\r\n            employeeEmail: employee.email\r\n        })\r\n    }\r\n    async function handleChange(e) {\r\n        switch (e.target.name) {\r\n            case \"employeeName\": {\r\n                const name = e.target.value\r\n                const res = await callApi(`${END_POINT}/employees/${name}`, HTTP_METHOD.GET, null);\r\n                const employees = res.data;\r\n                const suggestionDriverNames = employees && employees.map(e => {\r\n                    return {\r\n                        id: e.id,\r\n                        content: e.name\r\n                    }\r\n                });\r\n                setEmployees(employees);\r\n                setSuggestionDriverNames(suggestionDriverNames);\r\n\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n        setDriverAdd({\r\n            ...driverAdd,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    function handleClickAccepted() {\r\n        dispatch(addDriverRequest(driverAdd));\r\n        setDriverAdd({ ...DRIVER_ADD_DEFAULT })\r\n        setSuggestionDriverNames([])\r\n        setIsOpenModal(false);\r\n    }\r\n    function handleClickCancel() {\r\n        setDriverAdd({ ...DRIVER_ADD_DEFAULT })\r\n        setSuggestionDriverNames([])\r\n        setIsOpenModal(false);\r\n    }\r\n    function handleCarChange(e) {\r\n        const car = cars.find(car => {\r\n            return +car.id === +e.target.value\r\n        });\r\n        setDriverAdd({\r\n            ...driverAdd,\r\n            carId: e.target.value,\r\n            car: car\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        async function fetchCars() {\r\n            const res = await callApi(`${END_POINT}/cars`, HTTP_METHOD.GET, null);\r\n            if (res.status !== 200) return notification(NOTIFICATION_TYPE.ERROR, \"Load car fail\");\r\n            const cars = res.data;\r\n            setCars(cars);\r\n        }\r\n        fetchCars();\r\n    }, []);\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-12 col-xl-12\">\r\n                <button\r\n                    onClick={handleClickAddDriver}\r\n                    className=\"btn btn-outline-primary btn-sm\"\r\n                >\r\n                    <i className=\"fas fa-plus mr-1\"></i>\r\n                    {t(\"themtaixe\")}\r\n                </button>\r\n                <Modal\r\n                    open={isOpenModal}\r\n                    onClose={handleCloseModal}\r\n                    center\r\n                >\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <label className=\"d-flex align-items-center\">\r\n                                <strong>{t(\"tentaixe\")}</strong>\r\n                                <i className=\"fas fa-asterisk fa-xs mr-1 asterisk ml-1\" />\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <label className=\"d-flex align-items-center\">\r\n                                <strong>{t(\"sodienthoaitaixe\")}</strong>\r\n                                <i className=\"fas fa-asterisk fa-xs mr-1 asterisk ml-1\" />\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"w-100\"></div>\r\n                        <div className=\"col-6\">\r\n                            <AutoComplete1\r\n                                suggestions={suggestionDriverNames}\r\n                                onChange={handleChange}\r\n                                className=\"form-control form-control-sm\"\r\n                                onClick={handleClick}\r\n                                name=\"employeeName\"\r\n                                initialValue=\"\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <input autoComplete=\"off\" value={driverAdd.employeePhone} name=\"employeePhone\" className=\"form-control form-control-sm\" onChange={handleChange} />\r\n                        </div>\r\n                        <div className=\"w-100\"></div>\r\n                        <div className=\"col-6\">\r\n                            <label className=\"d-flex align-items-center\">\r\n                                <strong>{t(\"tenbu\")}</strong>\r\n                                <i className=\"fas fa-asterisk fa-xs mr-1 asterisk ml-1\" />\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <label className=\"d-flex align-items-center\">\r\n                                <strong>{t(\"chonxe\")}</strong>\r\n                                <i className=\"fas fa-asterisk fa-xs mr-1 asterisk ml-1\" />\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"w-100\"></div>\r\n                        <div className=\"col-6\">\r\n                            <input autoComplete=\"off\" value={driverAdd.employeeBuName} name=\"employeeBuName\" className=\"form-control form-control-sm\" onChange={handleChange} />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <select onChange={handleCarChange} value={driverAdd.carId} className=\"custom-select custom-select-sm\">\r\n                                <option value=\"\">\r\n                                    ---{t(\"chonxe\")}---\r\n                                </option>\r\n                                {\r\n                                    cars && cars.map((car, index) => {\r\n                                        return <option key={index} value={car.id}>{car.number}</option>\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"w-100\"></div>\r\n\r\n                        <div className=\"col-12 mt-2\">\r\n                            <div className=\"btn-group\">\r\n                                <button onClick={handleClickAccepted} className=\"btn btn-outline-primary btn-sm mr-1\">\r\n                                    <i className=\"fas fa-check-circle mr-1\"></i>\r\n                                    {t(\"xacnhan\")}\r\n                                </button>\r\n                                <button onClick={handleClickCancel} className=\"btn btn-outline-info btn-sm\">\r\n                                    <i className=\"fas fa-backspace mr-1\"></i>\r\n                                    {t(\"quaylai\")}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\Project\\bkc-frontend\\src\\Components\\CarManagement\\CarAdd.js",["350","351","352","353"],"import 'react-responsive-modal/styles.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport { END_POINT, HTTP_METHOD } from './../../Constants/CommonsConstants';\r\nimport { useState } from 'react';\r\nimport { CAR_ADD_DEFAULT } from '../../Constants/CommonsConstants';\r\nimport { callApi } from '../../Helpers/callApi';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addCarRequest } from '../../ActionCreators/carManagementActionCreator';\r\nimport { AutoComplete1 } from '../Commons/AutoComplete1';\r\nimport { useEffect } from 'react';\r\nimport { notification, NOTIFICATION_TYPE } from '../../Helpers/notification';\r\nimport { useTranslation } from 'react-i18next';\r\nexport const CarAdd = props => {\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const [isOpenModal, setIsOpenModal] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [carAdd, setCarAdd] = useState({ ...CAR_ADD_DEFAULT });\r\n    const [bus, setBus] = useState([]);\r\n    console.log(\"carAdd\", carAdd);\r\n    function handleCloseModal() {\r\n        setIsOpenModal(false);\r\n        setCarAdd(CAR_ADD_DEFAULT)\r\n    }\r\n\r\n    function handleClickAddCar() {\r\n        setIsOpenModal(true);\r\n    }\r\n    function handleChange(e) {\r\n        setCarAdd({\r\n            ...carAdd,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    function handleBuNameChange(e) {\r\n        const selectedBu = bus.find(bu => {\r\n            return bu.id == e.target.value\r\n        });\r\n        if (selectedBu === undefined) return;\r\n\r\n        setCarAdd({\r\n            ...carAdd,\r\n            buId: selectedBu.id,\r\n            buName: selectedBu.name\r\n        })\r\n    }\r\n    function handleClickAccepted() {\r\n        dispatch(addCarRequest(carAdd));\r\n        setIsOpenModal(false);\r\n        setCarAdd(CAR_ADD_DEFAULT)\r\n    }\r\n    function handleClickCancel() {\r\n        setIsOpenModal(false);\r\n        setCarAdd(CAR_ADD_DEFAULT)\r\n    }\r\n    useEffect(() => {\r\n        async function fetchBus() {\r\n            const res = await callApi(`${END_POINT}/business-units`, HTTP_METHOD.GET, null);\r\n            if (res.status !== 200) return notification(NOTIFICATION_TYPE.ERROR, \"Load bu fail\");\r\n            const bus = res.data;\r\n            setBus(bus);\r\n        }\r\n        fetchBus();\r\n    }, []);\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-12 col-xl-12\">\r\n                <button\r\n                    onClick={handleClickAddCar}\r\n                    className=\"btn btn-outline-primary btn-sm\"\r\n                >\r\n                    <i className=\"fas fa-plus mr-1\"></i>\r\n                    {t(\"themxemoi\")}\r\n                </button>\r\n                <div className=\"w-100\"></div>\r\n                <Modal\r\n                    open={isOpenModal}\r\n                    onClose={handleCloseModal}\r\n                    center\r\n                >\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <label className=\"d-flex align-items-center\">\r\n                                <strong>{t(\"tenbu\")}</strong>\r\n                                <i className=\"fas fa-asterisk fa-xs mr-1 asterisk ml-1\" />\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <label className=\"d-flex align-items-center\">\r\n                                <strong>{t(\"vitrihientai\")}</strong>\r\n                                <i className=\"fas fa-asterisk fa-xs mr-1 asterisk ml-1\" />\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"w-100\"></div>\r\n                        <div className=\"col-6\">\r\n                            <select className=\"custom-select custom-select-sm\" name=\"buName\" onChange={handleBuNameChange}>\r\n                                <option value=\"\">---{t(\"chonbu\")}---</option>\r\n                                {\r\n                                    bus && bus.map((bu, index) => {\r\n                                        return <option key={index} value={bu.id}>{bu.name}</option>\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <input autoComplete=\"off\" name=\"currentLocation\" className=\"form-control form-control-sm\" onChange={handleChange} />\r\n                        </div>\r\n                        <div className=\"w-100\"></div>\r\n                        <div className=\"col-6\">\r\n                            <label className=\"d-flex align-items-center\">\r\n                                <strong>{t(\"biensoxe\")}</strong>\r\n                                <i className=\"fas fa-asterisk fa-xs mr-1 asterisk ml-1\" />\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <label className=\"d-flex align-items-center\">\r\n                                <strong>{t(\"socho\")}</strong>\r\n                                <i className=\"fas fa-asterisk fa-xs mr-1 asterisk ml-1\" />\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"w-100\"></div>\r\n                        <div className=\"col-6\">\r\n                            <input autoComplete=\"off\" name=\"number\" className=\"form-control form-control-sm\" onChange={handleChange} />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <input autoComplete=\"off\" type=\"number\" name=\"totalSeat\" className=\"form-control form-control-sm\" onChange={handleChange} />\r\n                        </div>\r\n                        <div className=\"w-100\"></div>\r\n                        <div className=\"col-6\">\r\n                            <label className=\"d-flex align-items-center\">\r\n                                <strong>{t(\"hangxe\")}</strong>\r\n                                <i className=\"fas fa-asterisk fa-xs mr-1 asterisk ml-1\" />\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <label className=\"d-flex align-items-center\">\r\n                                <strong>{t(\"tenxe\")}</strong>\r\n                                <i className=\"fas fa-asterisk fa-xs mr-1 asterisk ml-1\" />\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"w-100\"></div>\r\n                        <div className=\"col-6\">\r\n                            <input autoComplete=\"off\" name=\"manufactured\" className=\"form-control form-control-sm\" onChange={handleChange} />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <input autoComplete=\"off\" name=\"name\" className=\"form-control form-control-sm\" onChange={handleChange} />\r\n                        </div>\r\n                        <div className=\"w-100\"></div>\r\n                        <div className=\"col-12 mt-2\">\r\n                            <div className=\"btn-group\">\r\n                                <button onClick={handleClickAccepted} className=\"btn btn-outline-primary btn-sm mr-1\">\r\n                                    <i className=\"fas fa-check-circle mr-1\"></i>\r\n                                    {t(\"xacnhan\")}\r\n                                </button>\r\n                                <button onClick={handleClickCancel} className=\"btn btn-outline-info btn-sm\">\r\n                                    <i className=\"fas fa-backspace mr-1\"></i>\r\n                                    {t(\"quaylai\")}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\Project\\bkc-frontend\\src\\Components\\CarManagement\\CarTable.js",[],"D:\\Project\\bkc-frontend\\src\\Components\\DriverManagement\\DriverTable.js",[],"D:\\Project\\bkc-frontend\\src\\Constants\\TicketConstants.js",[],"D:\\Project\\bkc-frontend\\src\\Constants\\bookingApprovalConstants.js",[],"D:\\Project\\bkc-frontend\\src\\Components\\BookingApproval\\LocationItemReadOnly.js",[],"D:\\Project\\bkc-frontend\\src\\Components\\BookingRequest\\LocationButton.js",[],"D:\\Project\\bkc-frontend\\src\\Components\\BookingApproval\\DriverItem.js",["354","355","356","357","358","359"],"D:\\Project\\bkc-frontend\\src\\Components\\BookingRequest\\LocationTable.js",["360","361","362","363","364","365"],"import { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { HTTP_METHOD, END_POINT } from \"../../Constants/CommonsConstants\";\r\nimport { callApi } from \"./../../Helpers/callApi\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\nimport { ModalAddLocation } from \"./ModalAddLocation\";\r\nimport { LocationItem } from \"./LocationItem\";\r\nimport { setLocations } from './../../ActionCreators/ticketActionCreator'\r\nimport { remove } from \"lodash\";\r\nimport { useParams } from \"react-router-dom\";\r\nexport const LocationTable = (props) => {\r\n    const { ticketId } = useParams();\r\n    const tickets = useSelector(state => state.bookingHistoryReducer.tickets);\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const [locationLocals, setLocationLocals] = useState([]);\r\n    const diplayLocation = locationLocals.map((location, index) => {\r\n        return <LocationItem\r\n            key={index}\r\n            no={index + 1}\r\n            location={location}\r\n            onSaveUpdate={handleUpdateLocation}\r\n            onDelete={handleDeleteLocation}\r\n        />\r\n    });\r\n    function handleModalSave(location) {\r\n        location.id = locationLocals.length;\r\n        setLocationLocals([...locationLocals, location]);\r\n    }\r\n    function handleUpdateLocation(location) {\r\n        const index = locationLocals.findIndex((item) => {\r\n            return item.id === location.id;\r\n        });\r\n        if (index > -1) {\r\n            const newLocationLocals = [...locationLocals];\r\n            newLocationLocals[index] = location;\r\n            setLocationLocals(newLocationLocals)\r\n        }\r\n    }\r\n    function handleDeleteLocation(location) {\r\n        const newLocationLocals = [...locationLocals];\r\n        remove(newLocationLocals, item => {\r\n            return item.id === location.id;\r\n        });\r\n        for (let i = 0; i < newLocationLocals.length; i++) {\r\n            newLocationLocals[i].id = i;\r\n        }\r\n        setLocationLocals(newLocationLocals);\r\n\r\n    }\r\n    useEffect(() => {\r\n        dispatch(setLocations(locationLocals))\r\n    }, [locationLocals]);\r\n    useEffect(() => {\r\n        const ticket = tickets.find(item => {\r\n            return item.id === +ticketId\r\n        })\r\n        if (ticket) {\r\n            const locations = ticket.locations.map((location, index) => {\r\n                return {\r\n                    ...location,\r\n                    id: index\r\n                }\r\n            });\r\n            setLocationLocals(locations);\r\n        }\r\n    }, [tickets]);\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-12 col-xl-12\">\r\n                <div className=\"table-custom location_table_responsive\">\r\n                    <table className=\"table-sm table-striped table-bordered table_detail\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\" className=\"w_4\" >{t(\"sothutu\")}</th>\r\n                                <th scope=\"col\" className=\"w_12\" >{t(\"noidon\")}</th>\r\n                                <th scope=\"col\" className=\"w_12\" >{t(\"giodon\")}</th>\r\n                                <th scope=\"col\" className=\"w_12\" >{t(\"nhanvien\")}</th>\r\n                                <th scope=\"col\" className=\"w_12\" >{t(\"khach\")}</th>\r\n                                <th scope=\"col\" className=\"w_12\" >{t(\"sodienthoai\")}</th>\r\n                                <th scope=\"col\" className=\"w_12\" >{t(\"ghichu\")}</th>\r\n                                <th scope=\"col\" className=\"w_12\" >{t(\"hanhdong\")}</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {diplayLocation}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <ModalAddLocation onSave={handleModalSave} />\r\n            </div>\r\n        </div>\r\n    );\r\n}","D:\\Project\\bkc-frontend\\src\\Helpers\\validation.js",["366"],"import moment from 'moment';\r\nexport function validation(value, rules) {\r\n    let result = \"\"\r\n    for (let i = 0; i < rules.length; i++) {\r\n        switch (rules[i]) {\r\n            case NOT_EMPTY: {\r\n                result = value ? \"\" : \"This field is not allow empty\";\r\n                break;\r\n            }\r\n            case ONLY_NUMBER: {\r\n                result = parseInt(value) ? \"\" : \"This field required number\";\r\n                break;\r\n            }\r\n            default: {\r\n                break;\r\n            }\r\n        }\r\n        if (result) break;\r\n    };\r\n    return result;\r\n}\r\nexport const NOT_EMPTY = \"NOT_EMPTY\";\r\nexport const ONLY_NUMBER = \"ONLY_NUMBER\"\r\nexport const NOT_IN_THE_PAST = \"NOT_IN_THE_PAST\";","D:\\Project\\bkc-frontend\\src\\Components\\Commons\\Tooltip.js",[],"D:\\Project\\bkc-frontend\\src\\Components\\BookingHistory\\BookingHistoryItem.js",[],"D:\\Project\\bkc-frontend\\src\\Components\\Admin\\TicketRequestItem.js",["367"],"D:\\Project\\bkc-frontend\\src\\Components\\Commons\\MultipleSelect.js",["368","369","370","371"],"import { Fragment, useState } from \"react\";\r\nimport remove from \"lodash/remove\"\r\nimport './MultipleSelect.scss';\r\nimport { useEffect } from \"react\";\r\n\r\nexport const MultipleSelect = (props) => {\r\n    const { onChange, className, name, onSelectedItem, onDeleteItem, isDisabled, icon, isMultipleSelected } = props;\r\n    const [isShowSuggestions, setIsShowSuggestions] = useState(false);\r\n    const [isShowSearch, setIsShowSearch] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n    const [activeIdItems, setActiveIdItems] = useState([]);\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const displayItems = items.map((item, index) => {\r\n        return (\r\n            <div key={index} className=\"item-container\">\r\n                <div className=\"item\">\r\n                    {item.content}\r\n                </div>\r\n                <i onClick={() => handleDeleteItem(item.id)} className=\"fas fa-times fa-sm ml-1 mt-1\"></i>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    const displaySuggestions =\r\n        <div className=\"suggestions-wrapper\">\r\n            <div className=\"multiple-selected\">\r\n                {suggestions.length !== 0 ?\r\n                    suggestions.map((suggestion, index) => {\r\n                        const isActive = activeIdItems.findIndex(activeIdItem => {\r\n                            return activeIdItem === suggestion.id;\r\n                        }) > -1 ? true : false;\r\n                        return (\r\n                            <div\r\n                                style={{ cursor: \"pointer\" }}\r\n                                key={index}\r\n                                className={isActive ? \"active-item\" : \"\"}\r\n                                onClick={() => handleSelectedItem(suggestion.id, suggestion.content)}\r\n                            >\r\n                                {suggestion.label}\r\n                            </div>\r\n                        )\r\n                    }) : <p>Not Found</p>}\r\n            </div>\r\n        </div>\r\n    function handleChangeSearch(e) {\r\n        onChange(e);\r\n        if (suggestions.length !== 0) {\r\n            setIsShowSuggestions(true);\r\n        }\r\n    }\r\n    function handleSelectedItem(suggestionId, suggestionContent) {\r\n        if (isMultipleSelected) {\r\n            const index = activeIdItems.findIndex(activeIdItem => {\r\n                return activeIdItem === suggestionId\r\n            });\r\n            if (index > -1) return;\r\n            const suggestion = {\r\n                id: suggestionId,\r\n                content: suggestionContent\r\n            }\r\n            onSelectedItem(suggestion)\r\n            setItems([...items, suggestion])\r\n            setActiveIdItems([...activeIdItems, suggestionId]);\r\n            return;\r\n        }\r\n        const suggestion = {\r\n            id: suggestionId,\r\n            content: suggestionContent\r\n        }\r\n        onSelectedItem(suggestion)\r\n        setItems([suggestion])\r\n        setActiveIdItems([suggestionId]);\r\n    }\r\n    function handleKeyDown(e) {\r\n        if (e.keyCode === 8) {\r\n            const temp = [...items];\r\n            temp.pop();\r\n            setItems(temp);\r\n        }\r\n    }\r\n    function handleClickSearch() {\r\n        if (isDisabled) return;\r\n        setIsShowSearch(true);\r\n        setIsShowSuggestions(true);\r\n    }\r\n    function handleDeleteItem(itemId) {\r\n        if (isMultipleSelected) {\r\n            onDeleteItem(itemId);\r\n            const cloneItems = [...items];\r\n            remove(cloneItems, (item) => {\r\n                return item.id === itemId;\r\n            });\r\n            setItems(cloneItems);\r\n            const cloneActiveIdItems = [...activeIdItems];\r\n            remove(cloneActiveIdItems, (activeIdItem) => {\r\n                return activeIdItem === itemId;\r\n            });\r\n            setActiveIdItems(cloneActiveIdItems);\r\n            return;\r\n        }\r\n        onDeleteItem(itemId);\r\n        setItems([]);\r\n        setActiveIdItems([]);\r\n    }\r\n    function handleExit() {\r\n        setIsShowSuggestions(false);\r\n        setIsShowSearch(false);\r\n        setSuggestions([]);\r\n    }\r\n    function handleBlur(e) {\r\n        if (e.currentTarget === e.target) {\r\n            console.log('focus left self');\r\n        } else {\r\n            console.log(\"unfocused child\", e.target);\r\n        }\r\n        if (!e.currentTarget.contains(e.relatedTarget)) {\r\n            // Not triggered when swapping focus between children\r\n            console.log(\"focus left self\");\r\n            console.log(\"unfocused self\");\r\n            setIsShowSuggestions(false);\r\n            setIsShowSearch(false);\r\n            setSuggestions([]);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setIsShowSuggestions(false);\r\n        setIsShowSearch(false);\r\n    }, [props.isDisabled]);\r\n    useEffect(() => {\r\n        if (props.initialValue !== undefined && props.initialValue.length !== 0) {\r\n            setItems([...props.initialValue]);\r\n            setActiveIdItems(props.initialValue.map(item => {\r\n                return item.id;\r\n            }))\r\n        }\r\n    }, [props.initialValue])\r\n    useEffect(() => {\r\n        setSuggestions(props.suggestions);\r\n    }, [props.suggestions])\r\n    return (\r\n        <div\r\n            className=\"wraper-all\"\r\n            tabIndex=\"1\"\r\n            onBlur={handleBlur}\r\n            onClick={handleClickSearch}\r\n        >\r\n            {\r\n                icon ?\r\n                    <div className=\"input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <img className=\"input-group-text\" src={icon} />\r\n                        </div>\r\n                        <div\r\n                            className={isDisabled ? `${className} multiple-items-container disabled` : `${className} multiple-items-container`}\r\n                            // className={isDisabled ? `multiple-items-container disabled` : `multiple-items-container`}\r\n                            onKeyDown={handleKeyDown}\r\n                            style={{ height: \"30.8px\" }}\r\n                        // onClick={handleClickSearch}\r\n                        >\r\n                            {displayItems}\r\n\r\n                        </div>\r\n                    </div> :\r\n                    <div\r\n                        // className={isDisabled ? \"form-control multiple-items-container disabled\" : \"form-control multiple-items-container\"}\r\n                        className={isDisabled ? `${className} multiple-items-container disabled` : `${className} multiple-items-container`}\r\n                        // className={isDisabled ? `multiple-items-container disabled` : `multiple-items-container`}\r\n                        onKeyDown={handleKeyDown}\r\n                        style={{ height: \"30.8px\" }}\r\n                    // onClick={handleClickSearch}\r\n                    >\r\n\r\n                        {displayItems}\r\n\r\n                    </div>\r\n            }\r\n\r\n            {\r\n                isShowSearch ?\r\n\r\n                    <div className=\"search-bar-and-suggestions\">\r\n                        <div className=\"search-bar\">\r\n                            <div className=\"input-group search-and-icon\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <i className=\"fas fa-search input-group-text icon-search\"></i>\r\n                                </div>\r\n                                <input\r\n                                    placeholder=\"Search name\"\r\n                                    name={name}\r\n                                    onChange={handleChangeSearch}\r\n                                    className=\"form-control form-control-sm\"\r\n                                    autoComplete=\"off\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <hr></hr>\r\n                        {/* <i onClick={handleExit} className=\"fas fa-times-circle fa-lg icon-exit\"></i> */}\r\n                        {displaySuggestions}\r\n                    </div> : \"\"\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}","D:\\Project\\bkc-frontend\\src\\Components\\Commons\\AutoComplete1.js",["372","373","374"],"import { Fragment, useEffect, useState } from \"react\";\r\nimport \"./AutoComplete1.scss\"\r\nexport const AutoComplete1 = (props) => {\r\n    const { suggestions, onChange, onClick, defaultValue, className, name } = props;\r\n    const [value, setValue] = useState(props.initialValue);\r\n    console.log(\"value\", value);\r\n    const [isShowSuggestions, setIsShowSuggestions] = useState(false);\r\n    let suggestionsList = null;\r\n    if (isShowSuggestions&&suggestions.length !== 0) {\r\n        suggestionsList = <div\r\n            className=\"list-group suggestions\">\r\n            {\r\n                suggestions.map((suggestion, index) => {\r\n                    return <button\r\n                        className=\"list-group-item list-group-item-action\"\r\n                        onClick={() => handleClick(suggestion)}\r\n                        key={index}\r\n                    >\r\n                        {suggestion.content}\r\n                    </button>\r\n                })\r\n            }\r\n        </div>\r\n    }\r\n    function handleChange(e) {\r\n        onChange(e);\r\n        setValue(e.target.value);\r\n        if (e.target.value.length >= 3) {\r\n            setIsShowSuggestions(true);\r\n        } else setIsShowSuggestions(false);\r\n    }\r\n    function handleClick(suggestion) {\r\n        setValue(suggestion.content);\r\n        setIsShowSuggestions(false);\r\n        onClick(suggestion);\r\n    }\r\n    function handleBlur() {\r\n        setIsShowSuggestions(false);\r\n    }\r\n    function handleClickInput() {\r\n        setIsShowSuggestions(true);\r\n    }\r\n    // useEffect(() => {\r\n    //     setValue(props.initialValue)\r\n    // }, [props]);\r\n    return (\r\n        <Fragment>\r\n            {\r\n                <input\r\n                    onChange={handleChange}\r\n                    onClick={handleClickInput}\r\n                    value={value}\r\n                    className={className}\r\n                    name={name}\r\n                    autoComplete=\"off\"\r\n                    // onBlur={handleBlur}\r\n                />\r\n            }\r\n            <div style={{ position: \"relative\" }}>\r\n                {suggestionsList}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}","D:\\Project\\bkc-frontend\\src\\Components\\CarManagement\\CarItem.js",["375","376"],"import { Fragment, useEffect, useState } from \"react\"\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteCarRequest, updateCarRequest } from \"../../ActionCreators/carManagementActionCreator\";\r\nimport { CAR_ADD_DEFAULT, END_POINT, HTTP_METHOD } from \"../../Constants/CommonsConstants\";\r\nimport { callApi } from \"../../Helpers/callApi\";\r\nimport { notification, NOTIFICATION_TYPE } from \"../../Helpers/notification\";\r\n\r\nexport const CarItem = props => {\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const { no } = props;\r\n    const [isUpdate, setIsUpdate] = useState(false);\r\n    const [carItemLocal, setCarItemLocal] = useState({ ...CAR_ADD_DEFAULT });\r\n    const [prevCarItemLocal, setPrevCarItemLocal] = useState({ ...CAR_ADD_DEFAULT });\r\n    const [bus, setBus] = useState([]);\r\n    console.log(\"carItem\", carItemLocal);\r\n    function handleClickUpdate() {\r\n        setIsUpdate(true);\r\n    }\r\n    function handleClickDelete() {\r\n        dispatch(deleteCarRequest(carItemLocal));\r\n        setIsUpdate(false);\r\n    }\r\n    function handleClickAccepted() {\r\n        dispatch(updateCarRequest(carItemLocal));\r\n        setIsUpdate(false);\r\n    }\r\n    function handleClickCancel() {\r\n        setCarItemLocal(prevCarItemLocal);\r\n        setIsUpdate(false);\r\n    }\r\n    async function handleChange(e) {\r\n\r\n        setCarItemLocal({\r\n            ...carItemLocal,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    function handleBuNameChange(e) {\r\n        const selectedBu = bus.find(bu => {\r\n            return bu.id == e.target.value\r\n        });\r\n        if (selectedBu === undefined) return;\r\n\r\n        setCarItemLocal({\r\n            ...carItemLocal,\r\n            buId: selectedBu.id,\r\n            buName: selectedBu.name\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        setCarItemLocal(props.car);\r\n        setPrevCarItemLocal(props.car);\r\n    }, [props.car]);\r\n    useEffect(() => {\r\n        async function fetchBus() {\r\n            const res = await callApi(`${END_POINT}/business-units`, HTTP_METHOD.GET, null);\r\n            if (res.status !== 200) return notification(NOTIFICATION_TYPE.ERROR, \"Load bu fail\");\r\n            const bus = res.data;\r\n            setBus(bus);\r\n        }\r\n        fetchBus();\r\n    }, []);\r\n    return (\r\n        <Fragment>\r\n            <tr>\r\n                <td data-label={t(\"stt\")}>{no}</td>\r\n                <td data-label={t(\"tenbu\")}>\r\n                    {\r\n                        isUpdate ?\r\n                            <select className=\"custom-select custom-select-sm\" name=\"buName\" onChange={handleBuNameChange}>\r\n                                <option value=\"\">---Chọn Bu---</option>\r\n                                {\r\n                                    bus && bus.map((bu, index) => {\r\n                                        return <option key={index} value={bu.id}>{bu.name}</option>\r\n                                    })\r\n                                }\r\n                            </select> :\r\n                            carItemLocal.buName\r\n                    }\r\n                </td>\r\n                <td data-label={t(\"vitrihientai\")}>{isUpdate ? <input autoComplete=\"off\" value={carItemLocal.currentLocation} onChange={handleChange} name=\"currentLocation\" type=\"text\" className=\"form-control form-control-sm\" /> : carItemLocal.currentLocation}</td>\r\n\r\n                <td data-label={t(\"biensoxe\")}>{isUpdate ? <input autoComplete=\"off\" value={carItemLocal.number} onChange={handleChange} name=\"number\" type=\"text\" className=\"form-control form-control-sm\" /> : carItemLocal.number}</td>\r\n                <td data-label={t(\"socho\")}>{isUpdate ? <input autoComplete=\"off\" type=\"number\" value={carItemLocal.totalSeat} onChange={handleChange} name=\"totalSeat\" type=\"text\" className=\"form-control form-control-sm\" /> : carItemLocal.totalSeat}</td>\r\n                <td data-label={t(\"hangxe\")}>{isUpdate ? <input autoComplete=\"off\" value={carItemLocal.manufactured} onChange={handleChange} name=\"manufactured\" type=\"text\" className=\"form-control form-control-sm\" /> : carItemLocal.manufactured}</td>\r\n                <td data-label={t(\"tenxe\")}>{isUpdate ? <input autoComplete=\"off\" value={carItemLocal.name} onChange={handleChange} name=\"name\" type=\"text\" className=\"form-control form-control-sm\" /> : carItemLocal.name}</td>\r\n                <td data-label={t(\"hanhdong\")}>\r\n                    {\r\n                        isUpdate ?\r\n                            <Fragment>\r\n                                <button onClick={handleClickAccepted} className=\"btn btn-outline-primary btn-sm mr-1\">\r\n                                    <i className=\"fas fa-check-circle mr-1\"></i>\r\n                                    {t(\"xacnhan\")}\r\n                                </button>\r\n                                <button onClick={handleClickCancel} className=\"btn btn-outline-info btn-sm\">\r\n                                    <i className=\"fas fa-backspace mr-1\"></i>\r\n                                    {t(\"quaylai\")}\r\n                                </button>\r\n                            </Fragment> :\r\n                            <Fragment>\r\n                                <button onClick={handleClickUpdate} className=\"btn btn-outline-primary btn-sm mr-1\">\r\n                                    <i className=\"fas fa-edit mr-1\"></i>\r\n                                    {t(\"suayeucau\")}\r\n                                </button>\r\n                                <button onClick={handleClickDelete} className=\"btn btn-outline-danger btn-sm\">\r\n                                    <i className=\"fas fa-trash-alt mr-1\"></i>\r\n                                    {t(\"xoayeucau\")}\r\n                                </button>\r\n                            </Fragment>\r\n                    }\r\n                </td>\r\n            </tr>\r\n        </Fragment>\r\n    )\r\n}","D:\\Project\\bkc-frontend\\src\\Components\\DriverManagement\\DriverItem.js",["377"],"import { Fragment, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteDriver, deleteDriverRequest, updateDriverRequest } from \"../../ActionCreators/driverManagementActionCreator\";\r\nimport { DRIVER_ADD_DEFAULT, END_POINT, HTTP_METHOD } from \"../../Constants/CommonsConstants\";\r\nimport { callApi } from \"../../Helpers/callApi\";\r\nimport formatPhoneNumber from \"../../Helpers/formatPhoneNumber\";\r\nimport { notification, NOTIFICATION_TYPE } from \"../../Helpers/notification\";\r\nimport { AutoComplete1 } from \"../Commons/AutoComplete1\";\r\n\r\nexport const DriverItem = props => {\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const { no } = props;\r\n    const [isUpdate, setIsUpdate] = useState(false);\r\n    const [employees, setEmployees] = useState([]);\r\n    const [suggestionDriverNames, setSuggestionDriverNames] = useState([]);\r\n    const [driverLocal, setDriverLocal] = useState({ ...DRIVER_ADD_DEFAULT })\r\n    const [prevDriverLocal, setPrevDriverLocal] = useState({ ...DRIVER_ADD_DEFAULT })\r\n    const [cars, setCars] = useState([])\r\n    console.log(\"driverLocal\", driverLocal);\r\n    async function handleChange(e) {\r\n        if (e.target.name === \"employeeName\") {\r\n            const employeeName = e.target.value;\r\n            const res = await callApi(`${END_POINT}/employees/${employeeName}`, HTTP_METHOD.GET, null);\r\n            const employees = res.data;\r\n            const suggestionDriverNames = employees && employees.map(e => {\r\n                return {\r\n                    id: e.id,\r\n                    content: e.name\r\n                }\r\n            });\r\n            setEmployees(employees);\r\n            setSuggestionDriverNames(suggestionDriverNames);\r\n        }\r\n        setDriverLocal({\r\n            ...driverLocal,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    function handleClick(suggestion) {\r\n        const employee = employees.find(e => {\r\n            return +e.id === +suggestion.id\r\n        });\r\n        setDriverLocal({\r\n            ...driverLocal,\r\n            employeeName: employee.name,\r\n            employeeId: employee.id,\r\n            employeePhone: employee.phone,\r\n            employeeBuName: employee.buName,\r\n            employeeBuId: employee.buId,\r\n            employeeEmail: employee.email\r\n        })\r\n    }\r\n    function handleClickAccepted() {\r\n        dispatch(updateDriverRequest(driverLocal));\r\n        setIsUpdate(false);\r\n    }\r\n    function handleClickCancel() {\r\n        setIsUpdate(false);\r\n        setDriverLocal(prevDriverLocal);\r\n    }\r\n    function handleClickUpdate() {\r\n        setIsUpdate(true);\r\n    }\r\n    function handleClickDelete() {\r\n        dispatch(deleteDriverRequest(driverLocal));\r\n        setIsUpdate(false);\r\n    }\r\n    function handleCarChange(e) {\r\n        const car = cars.find(car => {\r\n            return +car.id === +e.target.value\r\n        });\r\n        setDriverLocal({\r\n            ...driverLocal,\r\n            carId: e.target.value,\r\n            car: car\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        async function fetchCars() {\r\n            const res = await callApi(`${END_POINT}/cars`, HTTP_METHOD.GET, null);\r\n            if (res.status !== 200) return notification(NOTIFICATION_TYPE.ERROR, \"Load car fail\");\r\n            const cars = res.data;\r\n            setCars(cars);\r\n        }\r\n        fetchCars();\r\n    }, []);\r\n    useEffect(() => {\r\n        setDriverLocal(props.driver);\r\n        setPrevDriverLocal(props.driver);\r\n    }, [props.driver]);\r\n    return (\r\n        <Fragment>\r\n            <tr>\r\n                <td data-label={t(\"stt\")}>{no}</td>\r\n                <td data-label={t(\"tentaixe\")}>\r\n                    {\r\n                        isUpdate ?\r\n                            <AutoComplete1\r\n                                suggestions={suggestionDriverNames}\r\n                                onChange={handleChange}\r\n                                className=\"form-control form-control-sm\"\r\n                                onClick={handleClick}\r\n                                name=\"employeeName\"\r\n                                initialValue={driverLocal.employeeName}\r\n                            />\r\n                            : driverLocal.employeeName\r\n                    }\r\n                </td>\r\n                <td data-label={t(\"sodienthoaitaixe\")}>{isUpdate ? <input autoComplete=\"off\" value={formatPhoneNumber(driverLocal.employeePhone)} onChange={handleChange} type=\"text\" className=\"form-control form-control-sm\" name=\"employeePhone\" /> : formatPhoneNumber(driverLocal.employeePhone)}</td>\r\n                <td data-label={t(\"tenbu\")}>{isUpdate ? <input autoComplete=\"off\" value={driverLocal.employeeBuName} onChange={handleChange} type=\"text\" className=\"form-control form-control-sm\" name=\"employeeBuName\" /> : driverLocal.employeeBuName}</td>\r\n                <td data-label={t(\"xedanglai\")}>\r\n                    {\r\n                        isUpdate ?\r\n                            <select onChange={handleCarChange} value={driverLocal.carId} className=\"custom-select custom-select-sm\">\r\n                                <option value=\"\">---{t(\"chonxe\")}---</option>\r\n                                {\r\n                                    cars && cars.map((car, index) => {\r\n                                        return <option key={index} value={car.id}>{car.number}</option>\r\n                                    })\r\n                                }\r\n                            </select> :\r\n                            driverLocal && driverLocal.car && driverLocal.car.id\r\n                    }\r\n                </td>\r\n                <td data-label={t(\"hanhdong\")}>\r\n                    {\r\n                        isUpdate ?\r\n                            <Fragment>\r\n                                <button onClick={handleClickAccepted} className=\"btn btn-outline-primary btn-sm mr-1\">\r\n                                    <i className=\"fas fa-check-circle mr-1\"></i>\r\n                                    {t(\"xacnhan\")}\r\n                                </button>\r\n                                {/* <div className=\"col-12 col-xl-6\">\r\n                                </div>\r\n                                <div className=\"col-12 col-xl-6\">\r\n                                </div> */}\r\n                                <button onClick={handleClickCancel} className=\"btn btn-outline-info btn-sm\">\r\n                                    <i className=\"fas fa-backspace mr-1\"></i>\r\n                                    {t(\"quaylai\")}\r\n                                </button>\r\n                            </Fragment> :\r\n                            <Fragment>\r\n                                <button onClick={handleClickUpdate} className=\"btn btn-outline-primary btn-sm mr-1\">\r\n                                    <i className=\"fas fa-edit mr-1\"></i>\r\n                                    {t(\"suayeucau\")}\r\n                                </button>\r\n                                <button onClick={handleClickDelete} className=\"btn btn-outline-danger btn-sm\">\r\n                                    <i className=\"fas fa-trash-alt mr-1\"></i>\r\n                                    {t(\"xoayeucau\")}\r\n                                </button>\r\n                            </Fragment>\r\n                    }\r\n                </td>\r\n            </tr>\r\n        </Fragment>\r\n    );\r\n}","D:\\Project\\bkc-frontend\\src\\Components\\BookingRequest\\LocationItem.js",["378","379","380","381","382"],"import Datetime from 'react-datetime';\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport moment from 'moment';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NOT_EMPTY, ONLY_NUMBER, validation } from \"./../../Helpers/validation\";\r\nimport { Tooltip } from './../Commons/Tooltip';\r\nimport { MultipleSelect } from './../Commons/MultipleSelect';\r\nimport { callApi } from './../../Helpers/callApi';\r\nimport remove from 'lodash/remove';\r\nimport { HTTP_METHOD, END_POINT, LOCATION_DEFAULT } from '../../Constants/CommonsConstants';\r\nimport { isEmpty } from 'lodash';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport const LocationItem = (props) => {\r\n    const {t} = useTranslation();\r\n    const [location, setLocation] = useState({ ...LOCATION_DEFAULT });\r\n    const [prevLocation, setPrevLocation] = useState({ ...location });\r\n    const [isUpdate, setIsUpdate] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [prevError, setPrevError] = useState({ ...errors });\r\n    const [suggestionsEmployee, setSuggestionsEmployee] = useState([]);\r\n    const [isDisabledGuestNameInput, setIsDisabledGuestNameInput] = useState(false);\r\n    const [isDisabledEmployeeNameInput, setIsDisabledEmployeeNameInput] = useState(false);\r\n    const [employees, setEmployees] = useState([]);\r\n    const dispatch = useDispatch();\r\n    function handleClick(event) {\r\n        switch (event) {\r\n            case \"update\": {\r\n                setIsUpdate(true);\r\n                if (location.participants.length > 0) {\r\n                    setIsDisabledEmployeeNameInput(false);\r\n                    setIsDisabledGuestNameInput(true);\r\n                }\r\n                else if (location.guestName != undefined && location.guestName.length != 0) {\r\n                    setIsDisabledEmployeeNameInput(true);\r\n                    setIsDisabledGuestNameInput(false);\r\n                } else {\r\n                    setIsDisabledEmployeeNameInput(false);\r\n                    setIsDisabledGuestNameInput(false);\r\n                }\r\n                break;\r\n            }\r\n            case \"cancel\":\r\n                setIsUpdate(false);\r\n                setLocation({ ...prevLocation });\r\n                setErrors({ ...prevError });\r\n                break;\r\n            case \"save\":\r\n                props.onSaveUpdate(location);\r\n                setIsUpdate(false);\r\n                setPrevLocation({ ...location });\r\n                break;\r\n            case \"delete\":\r\n                props.onDelete(location);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    async function handleChange(e) {\r\n        let validateResult = null;\r\n        switch (e.target.name) {\r\n            case \"location\": {\r\n                validateResult = validation(e.target.value, [NOT_EMPTY]);\r\n                break;\r\n            }\r\n            case \"employeeName\": {\r\n                const employeeName = e.target.value;\r\n                if (employeeName.length >= 3) {\r\n                    const res = await callApi(`${END_POINT}/employees/${employeeName}`, HTTP_METHOD.GET, null);\r\n                    if (res.status !== 200) return;\r\n                    const employees = res.data\r\n                    const suggestionsEmployee = [];\r\n                    for (let i = 0; i < employees.length; i++) {\r\n                        suggestionsEmployee.push({\r\n                            id: employees[i].id,\r\n                            label: employees[i].name + \" \" + employees[i].buName,\r\n                            content: employees[i].name\r\n                        });\r\n                    }\r\n                    setEmployees(employees);\r\n                    setSuggestionsEmployee(suggestionsEmployee);\r\n                }\r\n                return;\r\n            }\r\n            case \"guestName\": {\r\n                if (isDisabledGuestNameInput) return;\r\n                const guestName = e.target.value;\r\n                if (guestName.length <= 0) {\r\n                    setIsDisabledEmployeeNameInput(false);\r\n                    setErrors({\r\n                        ...errors,\r\n                        participants: \"participant or guestName need to be fill\",\r\n                        guestName: \"participant or guestName need to be fill\"\r\n                    });\r\n                } else {\r\n                    const cloneError = { ...errors };\r\n                    const { guestName: gn, participants: emps, ...rest } = cloneError;\r\n                    setErrors(rest);\r\n                    setIsDisabledEmployeeNameInput(true);\r\n                }\r\n                setLocation({\r\n                    ...location,\r\n                    [e.target.name]: e.target.value\r\n                })\r\n                return;\r\n            }\r\n            case \"phone\": {\r\n                validateResult = validation(e.target.value, [NOT_EMPTY, ONLY_NUMBER]);\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n        if (!validateResult) {\r\n            let { [e.target.name]: a, ...rest } = errors;\r\n            setErrors(rest);\r\n        }\r\n        else {\r\n            setErrors({\r\n                ...errors,\r\n                [e.target.name]: validateResult\r\n            })\r\n        }\r\n        setLocation({\r\n            ...location,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    function handleChangeTime(momentObject) {\r\n        let time = null;\r\n        if (typeof momentObject === \"string\" || momentObject instanceof String) {\r\n            time = moment(momentObject, [\"H:m\", \"H:mm\"], true);\r\n            if (time.isValid()) {\r\n                let { time: x, ...rest } = errors;\r\n                setErrors(rest);\r\n            } else {\r\n                setErrors({\r\n                    ...errors,\r\n                    time: \"This field is not valid\"\r\n                })\r\n            }\r\n            setLocation({\r\n                ...location,\r\n                time: time\r\n            })\r\n        } else {\r\n            time = moment(momentObject, [\"H:m\", \"H:mm\"], true);\r\n            let { time: x, ...rest } = errors;\r\n            setErrors(rest);\r\n            setLocation({\r\n                ...location,\r\n                time: time.format(\"H:mm\")\r\n            })\r\n        }\r\n    }\r\n    function handleSelectedEmployee(item) {\r\n        const employee = employees && employees.find(e => +e.id === +item.id)\r\n        if (isEmpty(employee)) return;\r\n        const participant = {\r\n            employeeId: employee.id,\r\n            employeeName: employee.name,\r\n            employeeEmail: employee.email\r\n        }\r\n        const newParticipants = [...location.participants, participant];\r\n        setLocation({\r\n            ...location,\r\n            participants: newParticipants\r\n        })\r\n        const { participants: emp, guestName: gn, ...rest } = errors;\r\n        setErrors(rest);\r\n        setIsDisabledGuestNameInput(true);\r\n    }\r\n    function handleDeleteEmployee(employeeId) {\r\n        const cloneParticipants = [...location.participants];\r\n        if (cloneParticipants.length === 1) {\r\n            setIsDisabledGuestNameInput(false);\r\n        }\r\n        if (cloneParticipants.length === 1 && location.guestName.length === 0) {\r\n            setErrors({\r\n                ...errors,\r\n                participants: \"participant or guestName need to be fill\",\r\n                guestName: \"participant or guestName need to be fill\"\r\n            })\r\n        }\r\n        remove(cloneParticipants, (item) => {\r\n            return item.employeeId === employeeId;\r\n        });\r\n        setLocation({\r\n            ...location,\r\n            participants: cloneParticipants\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        setLocation(props.location);\r\n        setPrevLocation(props.location);\r\n    }, [props.location]);\r\n    return (\r\n        <tr>\r\n            <td data-label={t(\"stt\")}>\r\n                {props.no}\r\n            </td>\r\n            <td data-label={t(\"noidon\")}>\r\n                <Tooltip active={errors.place ? true : false} content={errors.place} direction=\"top\">\r\n                    {isUpdate ? <input onChange={handleChange} value={location.place} className=\"form-control form-control-sm\" name=\"place\" /> : location.place}\r\n\r\n                </Tooltip>\r\n            </td>\r\n            <td data-label={t(\"giodon\")}>\r\n                <Tooltip active={errors.time ? true : false} content={errors.time} direction=\"top\">\r\n                    {\r\n                        isUpdate ?\r\n                            <Datetime\r\n                                dateFormat={false}\r\n                                timeFormat=\"H:mm\"\r\n                                onChange={handleChangeTime}\r\n                                initialValue={location.time}\r\n                                inputProps={{ className: \"form-control form-control-sm\" }}\r\n                            />\r\n                            : location.time\r\n                    }\r\n                </Tooltip>\r\n            </td>\r\n            <td data-label={t(\"nhanvien\")}>\r\n                <Tooltip active={errors.participants ? true : false} content={errors.participants} direction=\"top\">\r\n                    {\r\n                        isUpdate ?\r\n                            <MultipleSelect\r\n                                suggestions={suggestionsEmployee}\r\n                                onChange={handleChange}\r\n                                className=\"form-control\"\r\n                                name=\"employeeName\"\r\n                                onSelectedItem={handleSelectedEmployee}\r\n                                onDeleteItem={handleDeleteEmployee}\r\n                                initialValue={location.participants && location.participants.map(participant => { return { id: participant.employeeId, content: participant.employeeName } })}\r\n                                isDisabled={isDisabledEmployeeNameInput}\r\n                                isMultipleSelected={true}\r\n                            />\r\n                            :\r\n                            location.participants && location.participants.map(participant => { return participant.employeeName }).join(\", \")\r\n                    }\r\n                </Tooltip>\r\n\r\n            </td>\r\n            <td data-label={t(\"khach\")}>\r\n                <Tooltip active={errors.guestName ? true : false} content={errors.guestName} direction=\"top\">\r\n                    {\r\n                        isUpdate ?\r\n                            <input disabled={isDisabledGuestNameInput}\r\n                                onChange={handleChange}\r\n                                value={location.guestName}\r\n                                className=\"form-control form-control-sm\" name=\"guestName\"\r\n                            />\r\n                            : location.guestName\r\n                    }\r\n                </Tooltip>\r\n\r\n            </td>\r\n            <td data-label={t(\"sodienthoai\")}>\r\n                <Tooltip active={errors.phone ? true : false} content={errors.phone} direction=\"top\">\r\n                    {isUpdate ? <input onChange={handleChange} value={location.phone} className=\"form-control form-control-sm\" name=\"phone\" /> : location.phone}\r\n                </Tooltip>\r\n\r\n            </td>\r\n            <td data-label={t(\"ghichu\")}>\r\n                {isUpdate ? <input onChange={handleChange} value={location.note} className=\"form-control form-control-sm\" name=\"note\" /> : location.note}\r\n\r\n            </td>\r\n            <td data-label={t(\"hanhdong\")}>\r\n                <button\r\n                    disabled={Object.keys(errors).length === 0 ? false : true}\r\n                    onClick={() => handleClick(isUpdate ? \"save\" : \"update\")}\r\n                    className=\"btn btn-outline-primary btn-sm mr-2\">\r\n                    <i className=\"fas fa-edit mr-1\"></i>\r\n                    {isUpdate ? t(\"luu\") : t(\"suayeucau\")}\r\n\r\n                </button>\r\n                <button\r\n                    onClick={() => handleClick(isUpdate ? \"cancel\" : \"delete\")}\r\n                    className=\"btn btn-outline-danger btn-sm\">\r\n                    <i className=\"fas fa-trash-alt mr-1\"></i>\r\n                    {isUpdate ? t(\"huybo\") : t(\"xoayeucau\")}\r\n\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    );\r\n}","D:\\Project\\bkc-frontend\\src\\ActionCreators\\bookingApprovalActionCreator.js",["383","384","385"],"import { history } from \"../App\"\r\nimport {\r\n    SET_NOTE_FOR_DRIVER,\r\n    SET_SELECTED_CAR,\r\n    SET_TICKET,\r\n    SET_TICKET_CARS\r\n} from \"../Constants/bookingApprovalConstants\"\r\nimport { END_POINT, HTTP_METHOD } from \"../Constants/CommonsConstants\"\r\nimport { callApi } from \"../Helpers/callApi\"\r\nimport { notification, NOTIFICATION_TYPE } from \"../Helpers/notification\"\r\n\r\n\r\nexport const setNoteForDriver = noteForDriver => {\r\n    return {\r\n        type: SET_NOTE_FOR_DRIVER,\r\n        noteForDriver\r\n    }\r\n}\r\nexport const setSelectedCar = selectedCar => {\r\n    return {\r\n        type: SET_SELECTED_CAR,\r\n        selectedCar\r\n    }\r\n}\r\nexport const setTickets = ticket => {\r\n    return {\r\n        type: SET_TICKET,\r\n        ticket\r\n    }\r\n}\r\nexport const setTicketCars = ticketCars => {\r\n    return {\r\n        type: SET_TICKET_CARS,\r\n        ticketCars\r\n    }\r\n}\r\n\r\n\r\nexport const fetchTicketsById = ticketId => {\r\n    return async dispatch => {\r\n        const res = await callApi(`${END_POINT}/tickets/?selector=TICKETID&id=${ticketId}`, HTTP_METHOD.GET, null);\r\n        if (res.status !== 200) {\r\n            return;\r\n        }\r\n        const ticket = res.data;\r\n        dispatch(setTickets(ticket));\r\n\r\n    }\r\n}\r\nexport const fetchTicketCarsByTicketId = ticketId => {\r\n    return async dispatch => {\r\n        const res = await callApi(`${END_POINT}/ticket-car/${ticketId}`, HTTP_METHOD.GET, null);\r\n        if (res.status !== 200) {\r\n            return;\r\n        }\r\n        const ticketCars = res.data;\r\n        dispatch(setTicketCars(ticketCars));\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\Project\\bkc-frontend\\src\\Components\\BookingRequest\\ModalAddLocation.js",["386"],"import 'react-responsive-modal/styles.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport Datetime from 'react-datetime';\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport moment from 'moment';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NOT_EMPTY, ONLY_NUMBER, validation } from './../../Helpers/validation';\r\nimport { callApi } from './../../Helpers/callApi';\r\nimport remove from 'lodash/remove';\r\nimport { HTTP_METHOD, END_POINT, LOCATION_DEFAULT } from '../../Constants/CommonsConstants';\r\nimport { MultipleSelect } from './../Commons/MultipleSelect';\r\nimport { Tooltip } from './../Commons/Tooltip';\r\nimport { toggleModalAddLocation } from '../../ActionCreators/ticketActionCreator';\r\nimport { isEmpty } from 'lodash';\r\nimport { useTranslation } from 'react-i18next';\r\nexport const ModalAddLocation = (props) => {\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const isOpenModal = useSelector(state => state.ticketReducer.isOpenModalAddLocation)\r\n    const [suggestionsEmployee, setSuggestionsEmployee] = useState([]);\r\n    const [employees, setEmployees] = useState([]);\r\n    const [location, setLocation] = useState({ ...LOCATION_DEFAULT })\r\n    const [errors, setErrors] = useState({\r\n        place: \"\",\r\n        time: \"\",\r\n        participants: \"\",\r\n        guestName: \"\",\r\n        phone: \"\"\r\n    });\r\n    const [isDisabledBtnSave, setIsDisabledBtnSave] = useState(true);\r\n    const [isDisabledGuestNameInput, setIsDisabledGuestNameInput] = useState(false);\r\n    const [isDisabledEmployeeNameInput, setIsDisabledEmployeeNameInput] = useState(false);\r\n    function handleClickSave() {\r\n        let arrayValue = Object.values(errors);\r\n        if (arrayValue.length === 0) {\r\n            props.onSave(location);\r\n            dispatch(toggleModalAddLocation())\r\n            setLocation({ ...LOCATION_DEFAULT })\r\n            setErrors({\r\n                place: \"\",\r\n                time: \"\",\r\n                participants: \"\",\r\n                guestName: \"\",\r\n                phone: \"\"\r\n            })\r\n            setSuggestionsEmployee([]);\r\n            setIsDisabledBtnSave(true);\r\n            setIsDisabledEmployeeNameInput(false);\r\n            setIsDisabledGuestNameInput(false);\r\n        }\r\n    }\r\n    function handleClickCancel() {\r\n        dispatch(toggleModalAddLocation())\r\n        setLocation({ ...LOCATION_DEFAULT })\r\n        setErrors({\r\n            place: \"\",\r\n            time: \"\",\r\n            participants: \"\",\r\n            guestName: \"\",\r\n            phone: \"\"\r\n        })\r\n        setSuggestionsEmployee([]);\r\n        setIsDisabledBtnSave(true);\r\n        setIsDisabledEmployeeNameInput(false);\r\n        setIsDisabledGuestNameInput(false);\r\n    }\r\n    async function handleChange(e) {\r\n        let validateResult = null;\r\n        switch (e.target.name) {\r\n            case \"place\": {\r\n                validateResult = validation(e.target.value, [NOT_EMPTY]);\r\n                break;\r\n            }\r\n            case \"time\": {\r\n                validateResult = validation(e.target.value, [NOT_EMPTY]);\r\n                break;\r\n            }\r\n            case \"employeeName\": {\r\n                const employeeName = e.target.value;\r\n                if (employeeName.length >= 3) {\r\n                    // const res = await callApi(`https://localhost:5001/api/bkc/employees/${employeeName}`, HTTP_METHOD.GET);\r\n                    const res = await callApi(`${END_POINT}/employees/${employeeName}`, HTTP_METHOD.GET, null);\r\n                    if (res.status !== 200) return;\r\n                    const employees = res.data\r\n                    const suggestionsEmployee = [];\r\n                    for (let i = 0; i < employees.length; i++) {\r\n                        suggestionsEmployee.push({\r\n                            id: employees[i].id,\r\n                            label: employees[i].name + \" \" + employees[i].buName,\r\n                            content: employees[i].name\r\n                        });\r\n                    }\r\n                    setEmployees(employees);\r\n                    setSuggestionsEmployee(suggestionsEmployee);\r\n                }\r\n                return;\r\n            }\r\n            case \"guestName\": {\r\n                if (isDisabledGuestNameInput) return;\r\n                const guestName = e.target.value;\r\n                if (guestName.length <= 0) {\r\n                    setIsDisabledEmployeeNameInput(false);\r\n                    setErrors({\r\n                        ...errors,\r\n                        participants: \"Employee or guestName need to be fill\",\r\n                        guestName: \"Employee or guestName need to be fill\"\r\n                    });\r\n                } else {\r\n                    const cloneError = { ...errors };\r\n                    const { guestName: gn, participants: emps, ...rest } = cloneError;\r\n                    setErrors(rest);\r\n                    setIsDisabledEmployeeNameInput(true);\r\n                }\r\n                setLocation({\r\n                    ...location,\r\n                    [e.target.name]: e.target.value\r\n                })\r\n                return;\r\n            }\r\n            case \"phone\": {\r\n                validateResult = validation(e.target.value, [NOT_EMPTY, ONLY_NUMBER]);\r\n                break;\r\n            }\r\n            case \"note\": {\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n        if (!validateResult) {\r\n            let { [e.target.name]: a, ...rest } = errors;\r\n            setErrors(rest);\r\n        }\r\n        else {\r\n            setErrors({\r\n                ...errors,\r\n                [e.target.name]: validateResult\r\n            })\r\n        }\r\n        setLocation({\r\n            ...location,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    function onCloseModal() {\r\n        dispatch(toggleModalAddLocation());\r\n        setLocation({ ...LOCATION_DEFAULT })\r\n        setErrors({\r\n            place: \"\",\r\n            time: \"\",\r\n            participants: \"\",\r\n            guestName: \"\",\r\n            phone: \"\"\r\n        })\r\n        setSuggestionsEmployee([]);\r\n        setIsDisabledBtnSave(true);\r\n        setIsDisabledEmployeeNameInput(false);\r\n        setIsDisabledGuestNameInput(false);\r\n\r\n    }\r\n    function handleChangeTime(momentObject) {\r\n        let time = null;\r\n        if (typeof momentObject === \"string\" || momentObject instanceof String) {\r\n            time = moment(momentObject, [\"H:m\", \"H:mm\"], true);\r\n            if (time.isValid()) {\r\n                let { time: x, ...rest } = errors;\r\n                setErrors(rest);\r\n            } else {\r\n                setErrors({\r\n                    ...errors,\r\n                    time: \"This field is not valid\"\r\n                })\r\n            }\r\n            setLocation({\r\n                ...location,\r\n                time: time.format(\"H:mm\")\r\n            })\r\n\r\n        } else {\r\n            time = moment(momentObject, [\"H:m\", \"H:mm\"], true);\r\n            let { time: x, ...rest } = errors;\r\n            setErrors(rest);\r\n            setLocation({\r\n                ...location,\r\n                time: time.format(\"H:mm\")\r\n            })\r\n        }\r\n    }\r\n    function handleSelectedEmployee(item) {\r\n        const employee = employees && employees.find(e => +e.id === +item.id);\r\n        if (isEmpty(employee)) return;\r\n        const participant = {\r\n            employeeId: employee.id,\r\n            employeeName: employee.name,\r\n            employeeEmail: employee.email\r\n        }\r\n        const newParticipants = [...location.participants, participant];\r\n        setLocation({\r\n            ...location,\r\n            participants: newParticipants\r\n        })\r\n        const { participants: emp, guestName: gn, ...rest } = errors;\r\n        setErrors(rest);\r\n        setIsDisabledGuestNameInput(true);\r\n    }\r\n    function handleDeleteEmployee(contentItem) {\r\n        const cloneEmployees = [...location.participants];\r\n        if (cloneEmployees.length === 1) {\r\n            setIsDisabledGuestNameInput(false);\r\n            setErrors({\r\n                ...errors,\r\n                participants: \"Employee or guestName need to be fill\",\r\n                guestName: \"Employee or guestName need to be fill\"\r\n            })\r\n        }\r\n        remove(cloneEmployees, (item) => {\r\n            return item.employeeId === contentItem;\r\n        });\r\n        setLocation({\r\n            ...location,\r\n            participants: cloneEmployees\r\n        })\r\n\r\n    }\r\n    useEffect(() => {\r\n        if (Object.keys(errors).length === 0) {\r\n            setIsDisabledBtnSave(false);\r\n        }\r\n        else {\r\n            setIsDisabledBtnSave(true);\r\n        }\r\n    });\r\n    return (\r\n        <Modal\r\n            open={isOpenModal}\r\n            center\r\n            onClose={onCloseModal}\r\n        >\r\n            <h5>{t(\"themchitiet\")}</h5>\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    <label className=\"d-flex align-items-center\">\r\n                        <strong>{t(\"noidon\")}</strong>\r\n                        <i className=\"fas fa-asterisk fa-xs ml-1 asterisk\" />\r\n                    </label>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <label className=\"d-flex align-items-center\">\r\n                        <strong>{t(\"giodon\")}</strong>\r\n                        <i className=\"fas fa-asterisk fa-xs ml-1 asterisk\" />\r\n                    </label>\r\n                </div>\r\n                <div className=\"w-100\" />\r\n                <div className=\"col-6\">\r\n                    <Tooltip active={errors.place ? true : false} content={errors.place} direction=\"top\">\r\n                        <input\r\n                            value={location.place}\r\n                            onChange={handleChange}\r\n                            name=\"place\"\r\n                            className=\"form-control form-control-sm\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                    </Tooltip>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <Tooltip active={errors.time ? true : false} content={errors.time} direction=\"top\">\r\n                        <Datetime\r\n                            dateFormat={false}\r\n                            timeFormat=\"H:mm\"\r\n                            onChange={handleChangeTime}\r\n                            initialValue={location.time}\r\n                            inputProps={{ className: \"form-control form-control-sm\" }}\r\n                        />\r\n                    </Tooltip>\r\n                </div>\r\n                <div className=\"w-100\" />\r\n                <div className=\"col-6\">\r\n                    <label className=\"d-flex align-items-center\">\r\n                        <strong>{t(\"nhanvien\")}</strong>\r\n                        <i className=\"fas fa-asterisk fa-xs ml-1 asterisk\" />\r\n                    </label>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <label><strong>{t(\"khach\")}</strong></label>\r\n                </div>\r\n                <div className=\"w-100\" />\r\n                <div className=\"col-6\">\r\n                    <Tooltip active={errors.participants ? true : false} content={errors.participants} direction=\"top\">\r\n                        <MultipleSelect\r\n                            suggestions={suggestionsEmployee}\r\n                            onChange={handleChange}\r\n                            className=\"form-control\"\r\n                            name=\"employeeName\"\r\n                            onSelectedItem={handleSelectedEmployee}\r\n                            onDeleteItem={handleDeleteEmployee}\r\n                            isDisabled={isDisabledEmployeeNameInput}\r\n                            isMultipleSelected={true}\r\n                        />\r\n                    </Tooltip>\r\n                </div>\r\n                <div className=\"col-6\">\r\n\r\n                    <Tooltip active={errors.guestName ? true : false} content={errors.guestName} direction=\"top\">\r\n                        <input\r\n                            value={location.guestName}\r\n                            onChange={handleChange}\r\n                            name=\"guestName\"\r\n                            className=\"form-control form-control-sm\"\r\n                            autoComplete=\"off\"\r\n                            disabled={isDisabledGuestNameInput}\r\n                        />\r\n                    </Tooltip>\r\n                </div>\r\n                <div className=\"w-100\" />\r\n                <div className=\"col-6\">\r\n                    <label className=\"d-flex align-items-center\">\r\n                        <strong>{t(\"sodienthoai\")}</strong>\r\n                        <i className=\"fas fa-asterisk fa-xs ml-1 asterisk\" />\r\n                    </label>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <label><strong>{t(\"ghichu\")}</strong></label>\r\n                </div>\r\n                <div className=\"w-100\" />\r\n                <div className=\"col-6\">\r\n\r\n                    <Tooltip active={errors.phone ? true : false} content={errors.phone} direction=\"top\">\r\n                        <input\r\n                            value={location.phone}\r\n                            onChange={handleChange}\r\n                            name=\"phone\"\r\n                            className=\"form-control form-control-sm\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                    </Tooltip>\r\n                </div>\r\n                <div className=\"col-6\">\r\n\r\n                    <Tooltip active={errors.note ? true : false} content={errors.note} direction=\"top\">\r\n                        <input\r\n                            value={location.note}\r\n                            onChange={handleChange}\r\n                            name=\"note\"\r\n                            className=\"form-control form-control-sm\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                    </Tooltip>\r\n                </div>\r\n                <div className=\"w-100\" />\r\n                <div className=\"col-6 mt-2\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <button\r\n                            disabled={isDisabledBtnSave}\r\n                            onClick={handleClickSave}\r\n                            className=\"btn btn-outline-primary btn-sm mr-2\"\r\n                        >\r\n                            <i className=\"fas fa-check-circle mr-1\"></i>\r\n                            {t(\"xacnhan\")}\r\n                        </button>\r\n                        <button\r\n                            onClick={handleClickCancel}\r\n                            className=\"btn btn-outline-info btn-sm\"\r\n                        >\r\n                            <i className=\"fas fa-backspace mr-1\"></i>\r\n                            {t(\"quaylai\")}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n}\r\n","D:\\Project\\bkc-frontend\\src\\Constants\\CommonsConstants.js",[],"D:\\Project\\bkc-frontend\\src\\Pages\\TicketManagement.js",[],"D:\\Project\\bkc-frontend\\src\\Helpers\\formatPhoneNumber.js",[],"D:\\Project\\bkc-frontend\\src\\Helpers\\login.js",[],{"ruleId":"387","replacedBy":"388"},{"ruleId":"389","replacedBy":"390"},{"ruleId":"391","severity":1,"message":"392","line":7,"column":7,"nodeType":"393","messageId":"394","endLine":7,"endColumn":16},{"ruleId":"391","severity":1,"message":"395","line":8,"column":10,"nodeType":"393","messageId":"394","endLine":8,"endColumn":21},{"ruleId":"391","severity":1,"message":"396","line":14,"column":10,"nodeType":"393","messageId":"394","endLine":14,"endColumn":19},{"ruleId":"397","severity":1,"message":"398","line":14,"column":8,"nodeType":"399","endLine":14,"endColumn":18,"suggestions":"400"},{"ruleId":"391","severity":1,"message":"401","line":7,"column":10,"nodeType":"393","messageId":"394","endLine":7,"endColumn":15},{"ruleId":"391","severity":1,"message":"402","line":8,"column":10,"nodeType":"393","messageId":"394","endLine":8,"endColumn":22},{"ruleId":"391","severity":1,"message":"403","line":8,"column":24,"nodeType":"393","messageId":"394","endLine":8,"endColumn":41},{"ruleId":"404","severity":1,"message":"405","line":82,"column":37,"nodeType":"406","endLine":82,"endColumn":194},{"ruleId":"407","severity":1,"message":"408","line":99,"column":37,"nodeType":"406","endLine":99,"endColumn":163},{"ruleId":"407","severity":1,"message":"408","line":100,"column":37,"nodeType":"406","endLine":100,"endColumn":147},{"ruleId":"391","severity":1,"message":"409","line":1,"column":44,"nodeType":"393","messageId":"394","endLine":1,"endColumn":53},{"ruleId":"391","severity":1,"message":"410","line":1,"column":55,"nodeType":"393","messageId":"394","endLine":1,"endColumn":76},{"ruleId":"391","severity":1,"message":"411","line":1,"column":10,"nodeType":"393","messageId":"394","endLine":1,"endColumn":17},{"ruleId":"391","severity":1,"message":"412","line":3,"column":22,"nodeType":"393","messageId":"394","endLine":3,"endColumn":31},{"ruleId":"391","severity":1,"message":"413","line":16,"column":11,"nodeType":"393","messageId":"394","endLine":16,"endColumn":19},{"ruleId":"391","severity":1,"message":"414","line":20,"column":11,"nodeType":"393","messageId":"394","endLine":20,"endColumn":24},{"ruleId":"391","severity":1,"message":"415","line":19,"column":11,"nodeType":"393","messageId":"394","endLine":19,"endColumn":19},{"ruleId":"416","severity":1,"message":"417","line":126,"column":21,"nodeType":"393","messageId":"418","endLine":126,"endColumn":37},{"ruleId":"397","severity":1,"message":"398","line":189,"column":8,"nodeType":"399","endLine":189,"endColumn":10,"suggestions":"419"},{"ruleId":"391","severity":1,"message":"420","line":1,"column":10,"nodeType":"393","messageId":"394","endLine":1,"endColumn":16},{"ruleId":"391","severity":1,"message":"413","line":10,"column":11,"nodeType":"393","messageId":"394","endLine":10,"endColumn":19},{"ruleId":"391","severity":1,"message":"421","line":1,"column":21,"nodeType":"393","messageId":"394","endLine":1,"endColumn":29},{"ruleId":"397","severity":1,"message":"398","line":24,"column":8,"nodeType":"399","endLine":24,"endColumn":18,"suggestions":"422"},{"ruleId":"391","severity":1,"message":"423","line":36,"column":23,"nodeType":"393","messageId":"394","endLine":36,"endColumn":29},{"ruleId":"397","severity":1,"message":"398","line":204,"column":8,"nodeType":"399","endLine":204,"endColumn":35,"suggestions":"424"},{"ruleId":"397","severity":1,"message":"425","line":230,"column":8,"nodeType":"399","endLine":230,"endColumn":17,"suggestions":"426"},{"ruleId":"427","severity":1,"message":"428","line":59,"column":13,"nodeType":"429","messageId":"430","endLine":60,"endColumn":23},{"ruleId":"391","severity":1,"message":"431","line":9,"column":10,"nodeType":"393","messageId":"394","endLine":9,"endColumn":23},{"ruleId":"391","severity":1,"message":"432","line":17,"column":12,"nodeType":"393","messageId":"394","endLine":17,"endColumn":18},{"ruleId":"391","severity":1,"message":"433","line":17,"column":20,"nodeType":"393","messageId":"394","endLine":17,"endColumn":29},{"ruleId":"434","severity":1,"message":"435","line":37,"column":26,"nodeType":"436","messageId":"437","endLine":37,"endColumn":28},{"ruleId":"391","severity":1,"message":"411","line":1,"column":10,"nodeType":"393","messageId":"394","endLine":1,"endColumn":17},{"ruleId":"391","severity":1,"message":"421","line":2,"column":31,"nodeType":"393","messageId":"394","endLine":2,"endColumn":39},{"ruleId":"391","severity":1,"message":"412","line":5,"column":10,"nodeType":"393","messageId":"394","endLine":5,"endColumn":19},{"ruleId":"391","severity":1,"message":"420","line":8,"column":8,"nodeType":"393","messageId":"394","endLine":8,"endColumn":14},{"ruleId":"391","severity":1,"message":"438","line":14,"column":11,"nodeType":"393","messageId":"394","endLine":14,"endColumn":17},{"ruleId":"439","severity":1,"message":"440","line":66,"column":46,"nodeType":"441","endLine":66,"endColumn":57},{"ruleId":"391","severity":1,"message":"442","line":5,"column":10,"nodeType":"393","messageId":"394","endLine":5,"endColumn":21},{"ruleId":"391","severity":1,"message":"443","line":5,"column":23,"nodeType":"393","messageId":"394","endLine":5,"endColumn":32},{"ruleId":"391","severity":1,"message":"444","line":6,"column":10,"nodeType":"393","messageId":"394","endLine":6,"endColumn":17},{"ruleId":"391","severity":1,"message":"411","line":7,"column":8,"nodeType":"393","messageId":"394","endLine":7,"endColumn":15},{"ruleId":"397","severity":1,"message":"398","line":55,"column":8,"nodeType":"399","endLine":55,"endColumn":24,"suggestions":"445"},{"ruleId":"397","severity":1,"message":"425","line":69,"column":8,"nodeType":"399","endLine":69,"endColumn":17,"suggestions":"446"},{"ruleId":"391","severity":1,"message":"447","line":1,"column":8,"nodeType":"393","messageId":"394","endLine":1,"endColumn":14},{"ruleId":"391","severity":1,"message":"413","line":9,"column":11,"nodeType":"393","messageId":"394","endLine":9,"endColumn":19},{"ruleId":"391","severity":1,"message":"448","line":1,"column":10,"nodeType":"393","messageId":"394","endLine":1,"endColumn":18},{"ruleId":"391","severity":1,"message":"449","line":8,"column":12,"nodeType":"393","messageId":"394","endLine":8,"endColumn":29},{"ruleId":"391","severity":1,"message":"450","line":105,"column":14,"nodeType":"393","messageId":"394","endLine":105,"endColumn":24},{"ruleId":"407","severity":1,"message":"408","line":154,"column":29,"nodeType":"406","endLine":154,"endColumn":76},{"ruleId":"391","severity":1,"message":"396","line":1,"column":20,"nodeType":"393","messageId":"394","endLine":1,"endColumn":29},{"ruleId":"391","severity":1,"message":"451","line":4,"column":45,"nodeType":"393","messageId":"394","endLine":4,"endColumn":57},{"ruleId":"391","severity":1,"message":"452","line":37,"column":14,"nodeType":"393","messageId":"394","endLine":37,"endColumn":24},{"ruleId":"434","severity":1,"message":"435","line":42,"column":26,"nodeType":"436","messageId":"437","endLine":42,"endColumn":28},{"ruleId":"439","severity":1,"message":"440","line":86,"column":169,"nodeType":"441","endLine":86,"endColumn":180},{"ruleId":"391","severity":1,"message":"453","line":4,"column":10,"nodeType":"393","messageId":"394","endLine":4,"endColumn":22},{"ruleId":"391","severity":1,"message":"454","line":21,"column":23,"nodeType":"393","messageId":"394","endLine":21,"endColumn":35},{"ruleId":"391","severity":1,"message":"413","line":26,"column":11,"nodeType":"393","messageId":"394","endLine":26,"endColumn":19},{"ruleId":"434","severity":1,"message":"455","line":35,"column":45,"nodeType":"436","messageId":"437","endLine":35,"endColumn":47},{"ruleId":"434","severity":1,"message":"455","line":35,"column":87,"nodeType":"436","messageId":"437","endLine":35,"endColumn":89},{"ruleId":"427","severity":1,"message":"428","line":112,"column":13,"nodeType":"429","messageId":"430","endLine":113,"endColumn":23},{"ruleId":"391","severity":1,"message":"456","line":1,"column":10,"nodeType":"393","messageId":"394","endLine":1,"endColumn":17},{"ruleId":"391","severity":1,"message":"402","line":10,"column":10,"nodeType":"393","messageId":"394","endLine":10,"endColumn":22},{"ruleId":"391","severity":1,"message":"403","line":10,"column":24,"nodeType":"393","messageId":"394","endLine":10,"endColumn":41},{"ruleId":"397","severity":1,"message":"457","line":226,"column":5,"nodeType":"393","endLine":226,"endColumn":14,"suggestions":"458"},"no-native-reassign",["459"],"no-negated-in-lhs",["460"],"no-unused-vars","'enhancers' is assigned a value but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["461"],"'login' is defined but never used.","'notification' is defined but never used.","'NOTIFICATION_TYPE' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'SET_TRIPS' is defined but never used.","'UPDATE_TICKET_REQUEST' is defined but never used.","'isEmpty' is defined but never used.","'useParams' is defined but never used.","'dispatch' is assigned a value but never used.","'noteForDriver' is assigned a value but never used.","'employee' is assigned a value but never used.","no-redeclare","'ticketAddRequest' is already defined.","redeclared",["462"],"'remove' is defined but never used.","'useState' is defined but never used.",["463"],"'action' is assigned a value but never used.",["464"],"React Hook useEffect has a missing dependency: 'ticketId'. Either include it or remove the dependency array.",["465"],"no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'AutoComplete1' is defined but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ticket' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'HTTP_METHOD' is defined but never used.","'END_POINT' is defined but never used.","'callApi' is defined but never used.",["466"],["467"],"'moment' is defined but never used.","'Fragment' is defined but never used.","'isShowSuggestions' is assigned a value but never used.","'handleExit' is defined but never used.","'defaultValue' is assigned a value but never used.","'handleBlur' is defined but never used.","'deleteDriver' is defined but never used.","'setPrevError' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'history' is defined but never used.","React Hook useEffect contains a call to 'setIsDisabledBtnSave'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [errors] as a second argument to the useEffect Hook.",["468"],"no-global-assign","no-unsafe-negation",{"desc":"469","fix":"470"},{"desc":"471","fix":"472"},{"desc":"473","fix":"474"},{"desc":"475","fix":"476"},{"desc":"477","fix":"478"},{"desc":"479","fix":"480"},{"desc":"477","fix":"481"},{"desc":"482","fix":"483"},"Update the dependencies array to be: [dispatch, ticketId]",{"range":"484","text":"485"},"Update the dependencies array to be: [dispatch]",{"range":"486","text":"487"},"Update the dependencies array to be: [dispatch, employee]",{"range":"488","text":"489"},"Update the dependencies array to be: [ticketDetailLocal, errors, dispatch]",{"range":"490","text":"491"},"Update the dependencies array to be: [ticketId, tickets]",{"range":"492","text":"493"},"Update the dependencies array to be: [dispatch, locationLocals]",{"range":"494","text":"495"},{"range":"496","text":"493"},"Add dependencies array: [errors]",{"range":"497","text":"498"},[623,633],"[dispatch, ticketId]",[10268,10270],"[dispatch]",[1098,1108],"[dispatch, employee]",[7825,7852],"[ticketDetailLocal, errors, dispatch]",[8799,8808],"[ticketId, tickets]",[2183,2199],"[dispatch, locationLocals]",[2613,2622],[8756,8756],", [errors]"]