[{"F:\\Project\\bkc-frontend\\src\\index.js":"1","F:\\Project\\bkc-frontend\\src\\reportWebVitals.js":"2","F:\\Project\\bkc-frontend\\src\\store.js":"3","F:\\Project\\bkc-frontend\\src\\i18n.js":"4","F:\\Project\\bkc-frontend\\src\\App.js":"5","F:\\Project\\bkc-frontend\\src\\Pages\\DriverManagement.js":"6","F:\\Project\\bkc-frontend\\src\\Pages\\TicketManagement.js":"7","F:\\Project\\bkc-frontend\\src\\Components\\Commons\\ErrorBoundary.js":"8","F:\\Project\\bkc-frontend\\src\\Pages\\CarManagement.js":"9","F:\\Project\\bkc-frontend\\src\\Components\\Commons\\NavBar.js":"10","F:\\Project\\bkc-frontend\\src\\Reducers\\index.js":"11","F:\\Project\\bkc-frontend\\src\\ActionCreators\\driverManagementActionCreator.js":"12","F:\\Project\\bkc-frontend\\src\\ActionCreators\\carManagementActionCreator.js":"13","F:\\Project\\bkc-frontend\\src\\Components\\DriverManagement\\DriverManagementContainer.js":"14","F:\\Project\\bkc-frontend\\src\\ActionCreators\\appActionCreator.js":"15","F:\\Project\\bkc-frontend\\src\\Components\\CarManagement\\CarManagementContainer.js":"16","F:\\Project\\bkc-frontend\\src\\Helpers\\notification.js":"17","F:\\Project\\bkc-frontend\\src\\Helpers\\login.js":"18","F:\\Project\\bkc-frontend\\src\\Reducers\\driverManagementReducer.js":"19","F:\\Project\\bkc-frontend\\src\\Reducers\\carManagementReducer.js":"20","F:\\Project\\bkc-frontend\\src\\Reducers\\ticketReducer.js":"21","F:\\Project\\bkc-frontend\\src\\Reducers\\appReducer.js":"22","F:\\Project\\bkc-frontend\\src\\Helpers\\callApi.js":"23","F:\\Project\\bkc-frontend\\src\\Constants\\DriverManagementConstants.js":"24","F:\\Project\\bkc-frontend\\src\\Constants\\CarManagementConstants.js":"25","F:\\Project\\bkc-frontend\\src\\Components\\DriverManagement\\DriverTable.js":"26","F:\\Project\\bkc-frontend\\src\\Components\\DriverManagement\\DriverAdd.js":"27","F:\\Project\\bkc-frontend\\src\\Components\\CarManagement\\CarTable.js":"28","F:\\Project\\bkc-frontend\\src\\Components\\CarManagement\\CarAdd.js":"29","F:\\Project\\bkc-frontend\\src\\ActionCreators\\ticketActionCreator.js":"30","F:\\Project\\bkc-frontend\\src\\Constants\\TicketConstants.js":"31","F:\\Project\\bkc-frontend\\src\\Components\\Commons\\Tooltip.js":"32","F:\\Project\\bkc-frontend\\src\\Components\\Commons\\AutoComplete1.js":"33","F:\\Project\\bkc-frontend\\src\\Components\\DriverManagement\\DriverItem.js":"34","F:\\Project\\bkc-frontend\\src\\Helpers\\validation.js":"35","F:\\Project\\bkc-frontend\\src\\Helpers\\formatPhoneNumber.js":"36","F:\\Project\\bkc-frontend\\src\\Components\\Commons\\MultipleSelect.js":"37","F:\\Project\\bkc-frontend\\src\\Components\\CarManagement\\CarItem.js":"38","F:\\Project\\bkc-frontend\\src\\Constants\\AppConstants.js":"39","F:\\Project\\bkc-frontend\\src\\Constants\\CommonsConstants.js":"40","F:\\Project\\bkc-frontend\\src\\Reducers\\ticketManagementReducer.js":"41","F:\\Project\\bkc-frontend\\src\\Components\\TicketManagement\\TicketRequestContainer.js":"42","F:\\Project\\bkc-frontend\\src\\Components\\TicketManagement\\TicketRequestTable.js":"43","F:\\Project\\bkc-frontend\\src\\Components\\TicketManagement\\TicketRequestItem.js":"44","F:\\Project\\bkc-frontend\\src\\Reducers\\ticketHandleReducer.js":"45","F:\\Project\\bkc-frontend\\src\\Reducers\\ticketHistoryReducer.js":"46","F:\\Project\\bkc-frontend\\src\\Components\\TicketHandle\\DriverTable.js":"47","F:\\Project\\bkc-frontend\\src\\Components\\TicketHandle\\TicketDetailReadOnly.js":"48","F:\\Project\\bkc-frontend\\src\\Components\\TicketHandle\\LocationTableReadOnly.js":"49","F:\\Project\\bkc-frontend\\src\\Components\\TicketHandle\\TicketInformationReadOnly.js":"50","F:\\Project\\bkc-frontend\\src\\Components\\TicketHandle\\DriverItem.js":"51","F:\\Project\\bkc-frontend\\src\\Components\\TicketHandle\\LocationItemReadOnly.js":"52","F:\\Project\\bkc-frontend\\src\\Pages\\TicketHandle.js":"53","F:\\Project\\bkc-frontend\\src\\Components\\TicketHandle\\TicketHandleButton.js":"54","F:\\Project\\bkc-frontend\\src\\Components\\TicketHandle\\TicketHandleContainer.js":"55","F:\\Project\\bkc-frontend\\src\\Pages\\TicketHistory.js":"56","F:\\Project\\bkc-frontend\\src\\Components\\TicketHistory\\TicketHistoryContainer.js":"57","F:\\Project\\bkc-frontend\\src\\Components\\TicketHistory\\TicketHistoryTable.js":"58","F:\\Project\\bkc-frontend\\src\\Components\\TicketHistory\\TicketHistoryItem.js":"59","F:\\Project\\bkc-frontend\\src\\Pages\\TicketRequest.js":"60","F:\\Project\\bkc-frontend\\src\\Components\\TicketRequest\\TicketContainer.js":"61","F:\\Project\\bkc-frontend\\src\\Components\\TicketRequest\\TicketDetail.js":"62","F:\\Project\\bkc-frontend\\src\\Components\\TicketRequest\\TicketContainerButton.js":"63","F:\\Project\\bkc-frontend\\src\\Components\\TicketRequest\\Location.js":"64","F:\\Project\\bkc-frontend\\src\\Components\\TicketRequest\\TicketInformation.js":"65","F:\\Project\\bkc-frontend\\src\\Components\\TicketRequest\\LocationButton.js":"66","F:\\Project\\bkc-frontend\\src\\Components\\TicketRequest\\LocationTable.js":"67","F:\\Project\\bkc-frontend\\src\\Components\\TicketRequest\\ModalAddLocation.js":"68","F:\\Project\\bkc-frontend\\src\\Components\\TicketRequest\\LocationItem.js":"69","F:\\Project\\bkc-frontend\\src\\ActionCreators\\ticketManagementActionCreator.js":"70","F:\\Project\\bkc-frontend\\src\\ActionCreators\\ticketHistoryActionCreator.js":"71","F:\\Project\\bkc-frontend\\src\\ActionCreators\\ticketHandleActionCreator.js":"72","F:\\Project\\bkc-frontend\\src\\Constants\\TicketManagementConstants.js":"73","F:\\Project\\bkc-frontend\\src\\Constants\\TicketHistoryConstants.js":"74","F:\\Project\\bkc-frontend\\src\\Constants\\TicketHandleConstants.js":"75"},{"size":655,"mtime":1609939868649,"results":"76","hashOfConfig":"77"},{"size":375,"mtime":1609422429922,"results":"78","hashOfConfig":"77"},{"size":544,"mtime":1611964973699,"results":"79","hashOfConfig":"77"},{"size":6244,"mtime":1611964973698,"results":"80","hashOfConfig":"77"},{"size":3935,"mtime":1611990087906,"results":"81","hashOfConfig":"77"},{"size":1003,"mtime":1612106058293,"results":"82","hashOfConfig":"77"},{"size":786,"mtime":1612001455777,"results":"83","hashOfConfig":"77"},{"size":745,"mtime":1611360685403,"results":"84","hashOfConfig":"77"},{"size":769,"mtime":1612104113444,"results":"85","hashOfConfig":"77"},{"size":8059,"mtime":1612098530190,"results":"86","hashOfConfig":"77"},{"size":685,"mtime":1611972968737,"results":"87","hashOfConfig":"77"},{"size":3517,"mtime":1612107956146,"results":"88","hashOfConfig":"77"},{"size":2066,"mtime":1612108002504,"results":"89","hashOfConfig":"77"},{"size":550,"mtime":1611964973675,"results":"90","hashOfConfig":"77"},{"size":1116,"mtime":1611964973637,"results":"91","hashOfConfig":"77"},{"size":529,"mtime":1611964973667,"results":"92","hashOfConfig":"77"},{"size":730,"mtime":1609685795319,"results":"93","hashOfConfig":"77"},{"size":3860,"mtime":1611360685412,"results":"94","hashOfConfig":"77"},{"size":1427,"mtime":1612107731735,"results":"95","hashOfConfig":"77"},{"size":1410,"mtime":1611378516812,"results":"96","hashOfConfig":"77"},{"size":1142,"mtime":1611360685423,"results":"97","hashOfConfig":"77"},{"size":812,"mtime":1611964973696,"results":"98","hashOfConfig":"77"},{"size":589,"mtime":1609938659955,"results":"99","hashOfConfig":"77"},{"size":213,"mtime":1612107739537,"results":"100","hashOfConfig":"77"},{"size":152,"mtime":1611378429562,"results":"101","hashOfConfig":"77"},{"size":2024,"mtime":1612103526480,"results":"102","hashOfConfig":"77"},{"size":8493,"mtime":1612107399138,"results":"103","hashOfConfig":"77"},{"size":2062,"mtime":1611964973668,"results":"104","hashOfConfig":"77"},{"size":7906,"mtime":1612099192019,"results":"105","hashOfConfig":"77"},{"size":1692,"mtime":1611964973639,"results":"106","hashOfConfig":"77"},{"size":234,"mtime":1611360685408,"results":"107","hashOfConfig":"77"},{"size":950,"mtime":1611360685407,"results":"108","hashOfConfig":"77"},{"size":2151,"mtime":1611964973669,"results":"109","hashOfConfig":"77"},{"size":7782,"mtime":1612106345123,"results":"110","hashOfConfig":"77"},{"size":726,"mtime":1611964973682,"results":"111","hashOfConfig":"77"},{"size":346,"mtime":1611964973681,"results":"112","hashOfConfig":"77"},{"size":8098,"mtime":1611964973670,"results":"113","hashOfConfig":"77"},{"size":5884,"mtime":1612099110877,"results":"114","hashOfConfig":"77"},{"size":143,"mtime":1611965454780,"results":"115","hashOfConfig":"77"},{"size":1406,"mtime":1612107004302,"results":"116","hashOfConfig":"77"},{"size":500,"mtime":1612001477935,"results":"117","hashOfConfig":"77"},{"size":433,"mtime":1611964973642,"results":"118","hashOfConfig":"77"},{"size":2507,"mtime":1612001686654,"results":"119","hashOfConfig":"77"},{"size":5373,"mtime":1612001684671,"results":"120","hashOfConfig":"77"},{"size":1948,"mtime":1612003937488,"results":"121","hashOfConfig":"77"},{"size":742,"mtime":1611990922004,"results":"122","hashOfConfig":"77"},{"size":2686,"mtime":1611991657107,"results":"123","hashOfConfig":"77"},{"size":2390,"mtime":1611972681475,"results":"124","hashOfConfig":"77"},{"size":2299,"mtime":1611972680888,"results":"125","hashOfConfig":"77"},{"size":2292,"mtime":1611972682128,"results":"126","hashOfConfig":"77"},{"size":6962,"mtime":1612004006972,"results":"127","hashOfConfig":"77"},{"size":901,"mtime":1611964973648,"results":"128","hashOfConfig":"77"},{"size":1341,"mtime":1611996305617,"results":"129","hashOfConfig":"77"},{"size":5185,"mtime":1612002697262,"results":"130","hashOfConfig":"77"},{"size":6730,"mtime":1612093430149,"results":"131","hashOfConfig":"77"},{"size":776,"mtime":1611990333773,"results":"132","hashOfConfig":"77"},{"size":441,"mtime":1611989878958,"results":"133","hashOfConfig":"77"},{"size":2295,"mtime":1612003579083,"results":"134","hashOfConfig":"77"},{"size":4495,"mtime":1612003457962,"results":"135","hashOfConfig":"77"},{"size":524,"mtime":1611990143419,"results":"136","hashOfConfig":"77"},{"size":10361,"mtime":1612083005022,"results":"137","hashOfConfig":"77"},{"size":20480,"mtime":1612098640404,"results":"138","hashOfConfig":"77"},{"size":2585,"mtime":1611964973663,"results":"139","hashOfConfig":"77"},{"size":890,"mtime":1611964973654,"results":"140","hashOfConfig":"77"},{"size":2823,"mtime":1611964973664,"results":"141","hashOfConfig":"77"},{"size":1347,"mtime":1611360685397,"results":"142","hashOfConfig":"77"},{"size":3987,"mtime":1611990162636,"results":"143","hashOfConfig":"77"},{"size":15148,"mtime":1611990161423,"results":"144","hashOfConfig":"77"},{"size":12296,"mtime":1611990162071,"results":"145","hashOfConfig":"77"},{"size":835,"mtime":1612001530539,"results":"146","hashOfConfig":"77"},{"size":1253,"mtime":1611990922509,"results":"147","hashOfConfig":"77"},{"size":2690,"mtime":1611996583476,"results":"148","hashOfConfig":"77"},{"size":120,"mtime":1612001494608,"results":"149","hashOfConfig":"77"},{"size":100,"mtime":1611990920824,"results":"150","hashOfConfig":"77"},{"size":308,"mtime":1611996198175,"results":"151","hashOfConfig":"77"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"fyhjil",{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"154"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"154"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"154"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"154"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"154"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"154"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"154"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"154"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"154"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"154"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"154"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"154"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"154"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"154"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"154"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"154"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"154"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"F:\\Project\\bkc-frontend\\src\\index.js",[],["320","321"],"F:\\Project\\bkc-frontend\\src\\reportWebVitals.js",[],"F:\\Project\\bkc-frontend\\src\\store.js",["322"],"import { applyMiddleware, createStore } from 'redux';\r\nimport ThunkMiddleware from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { rootReducer } from './Reducers';\r\nconst middleware = [ThunkMiddleware];\r\nconst middlewareEnhancer = applyMiddleware(...middleware);\r\nconst enhancers = [middlewareEnhancer];\r\nconst composedEnhancers = composeWithDevTools({trace: true});\r\nconst store = createStore(rootReducer, undefined, composedEnhancers(\r\n    applyMiddleware(ThunkMiddleware)\r\n));\r\nexport default store;","F:\\Project\\bkc-frontend\\src\\i18n.js",[],"F:\\Project\\bkc-frontend\\src\\App.js",["323","324"],"import ErrorBoundary from \"./Components/Commons/ErrorBoundary\";\r\nimport './App.scss'\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\n// import { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\r\nimport { Router, Switch, Route, Redirect } from 'react-router-dom'\r\nimport { NavBar } from \"./Components/Commons/NavBar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NotificationContainer } from 'react-notifications';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { TicketRequest } from \"./Pages/TicketRequest\";\r\nimport { useEffect } from \"react\";\r\nimport { TicketHistory } from \"./Pages/TicketHistory\";\r\nimport { TicketManagement } from \"./Pages/TicketManagement\";\r\nimport { TicketHandle } from \"./Pages/TicketHandle\";\r\nimport { CarManagement } from \"./Pages/CarManagement\";\r\nimport { DriverManagement } from \"./Pages/DriverManagement\";\r\nimport { ROLE } from \"./Constants/CommonsConstants\";\r\nexport const history = require(\"history\").createBrowserHistory();\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ErrorBoundary>\r\n        <NotificationContainer />\r\n        <ToastContainer\r\n          position=\"top-right\"\r\n          autoClose={4000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n        <Router history={history}>\r\n          {/* <div className=\"mt-5\"></div> */}\r\n          <NavBar />\r\n          <div className=\"mt-1 mb-1\"></div>\r\n          <Switch>\r\n            <PrivateRoute path=\"/ticket-request/:action?/:ticketId?\" roles={[ROLE.SUPER_ADMIN, ROLE.ADMIN, ROLE.MEMBER]}>\r\n              <TicketRequest />\r\n            </PrivateRoute>\r\n\r\n            <PrivateRoute path=\"/ticket-history\" roles={[ROLE.SUPER_ADMIN, ROLE.ADMIN, ROLE.MEMBER]}>\r\n              <TicketHistory />\r\n            </PrivateRoute>\r\n\r\n            <PrivateRoute path=\"/ticket-management\" roles={[ROLE.SUPER_ADMIN, ROLE.ADMIN]}>\r\n              <TicketManagement />\r\n            </PrivateRoute>\r\n\r\n            <PrivateRoute path=\"/booking-approval/:ticketId\" roles={[ROLE.SUPER_ADMIN, ROLE.ADMIN]}>\r\n              <TicketHandle />\r\n            </PrivateRoute>\r\n\r\n            <PrivateRoute path=\"/car-management\" roles={[ROLE.SUPER_ADMIN, ROLE.ADMIN]}>\r\n              <CarManagement />\r\n            </PrivateRoute>\r\n\r\n            <PrivateRoute path=\"/driver-management\" roles={[ROLE.SUPER_ADMIN, ROLE.ADMIN]}>\r\n              <DriverManagement />\r\n            </PrivateRoute>\r\n\r\n            {/* <PrivateRoute path=\"/history-booking\" roles={[ROLE.SUPER_ADMIN, ROLE.ADMIN, ROLE.MEMBER]}>\r\n\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/request-booking/:action?\" roles={[ROLE.SUPER_ADMIN, ROLE.ADMIN, ROLE.MEMBER]}>\r\n\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/admin\" roles={[ROLE.SUPER_ADMIN, ROLE.ADMIN]}>\r\n\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/:action/:bookingInforId\" roles={[ROLE.SUPER_ADMIN, ROLE.ADMIN]}>\r\n\r\n            </PrivateRoute> */}\r\n          </Switch>\r\n        </Router>\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n\r\nfunction PrivateRoute({ children, ...rest }) {\r\n  const employee = useSelector(state => state.appReducer.employee);\r\n  const { roles, path } = rest;\r\n  let isAuth = null;\r\n  if (!roles.length) {\r\n    isAuth = false;\r\n  }\r\n  else {\r\n    for (let r of roles) {\r\n      if (r === employee.role) {\r\n        isAuth = true;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  if (!isAuth) console.log(\"Not have permission\");\r\n  return (\r\n    <Route\r\n      path={path}\r\n      render={() => {\r\n        return isAuth ? (children) : (<Redirect to=\"/\" />)\r\n      }}\r\n    />\r\n  );\r\n}\r\n","F:\\Project\\bkc-frontend\\src\\Pages\\DriverManagement.js",["325"],"F:\\Project\\bkc-frontend\\src\\Pages\\TicketManagement.js",[],"F:\\Project\\bkc-frontend\\src\\Components\\Commons\\ErrorBoundary.js",[],"F:\\Project\\bkc-frontend\\src\\Pages\\CarManagement.js",[],"F:\\Project\\bkc-frontend\\src\\Components\\Commons\\NavBar.js",["326","327","328","329","330","331","332"],"F:\\Project\\bkc-frontend\\src\\Reducers\\index.js",[],"F:\\Project\\bkc-frontend\\src\\ActionCreators\\driverManagementActionCreator.js",[],"F:\\Project\\bkc-frontend\\src\\ActionCreators\\carManagementActionCreator.js",[],"F:\\Project\\bkc-frontend\\src\\Components\\DriverManagement\\DriverManagementContainer.js",[],"F:\\Project\\bkc-frontend\\src\\ActionCreators\\appActionCreator.js",[],"F:\\Project\\bkc-frontend\\src\\Components\\CarManagement\\CarManagementContainer.js",[],"F:\\Project\\bkc-frontend\\src\\Helpers\\notification.js",[],"F:\\Project\\bkc-frontend\\src\\Helpers\\login.js",[],"F:\\Project\\bkc-frontend\\src\\Reducers\\driverManagementReducer.js",[],"F:\\Project\\bkc-frontend\\src\\Reducers\\carManagementReducer.js",[],"F:\\Project\\bkc-frontend\\src\\Reducers\\ticketReducer.js",[],"F:\\Project\\bkc-frontend\\src\\Reducers\\appReducer.js",[],"F:\\Project\\bkc-frontend\\src\\Helpers\\callApi.js",[],"F:\\Project\\bkc-frontend\\src\\Constants\\DriverManagementConstants.js",[],"F:\\Project\\bkc-frontend\\src\\Constants\\CarManagementConstants.js",[],"F:\\Project\\bkc-frontend\\src\\Components\\DriverManagement\\DriverTable.js",[],"F:\\Project\\bkc-frontend\\src\\Components\\DriverManagement\\DriverAdd.js",["333","334","335","336"],"F:\\Project\\bkc-frontend\\src\\Components\\CarManagement\\CarTable.js",[],"F:\\Project\\bkc-frontend\\src\\Components\\CarManagement\\CarAdd.js",["337","338","339","340"],"F:\\Project\\bkc-frontend\\src\\ActionCreators\\ticketActionCreator.js",[],"F:\\Project\\bkc-frontend\\src\\Constants\\TicketConstants.js",[],"F:\\Project\\bkc-frontend\\src\\Components\\Commons\\Tooltip.js",[],"F:\\Project\\bkc-frontend\\src\\Components\\Commons\\AutoComplete1.js",["341","342","343"],"import { Fragment, useEffect, useState } from \"react\";\r\nimport \"./AutoComplete1.scss\"\r\nexport const AutoComplete1 = (props) => {\r\n    const { suggestions, onChange, onClick, defaultValue, className, name } = props;\r\n    const [value, setValue] = useState(props.initialValue);\r\n    console.log(\"value\", value);\r\n    const [isShowSuggestions, setIsShowSuggestions] = useState(false);\r\n    let suggestionsList = null;\r\n    if (isShowSuggestions&&suggestions.length !== 0) {\r\n        suggestionsList = <div\r\n            className=\"list-group suggestions\">\r\n            {\r\n                suggestions.map((suggestion, index) => {\r\n                    return <button\r\n                        className=\"list-group-item list-group-item-action\"\r\n                        onClick={() => handleClick(suggestion)}\r\n                        key={index}\r\n                    >\r\n                        {suggestion.content}\r\n                    </button>\r\n                })\r\n            }\r\n        </div>\r\n    }\r\n    function handleChange(e) {\r\n        onChange(e);\r\n        setValue(e.target.value);\r\n        if (e.target.value.length >= 3) {\r\n            setIsShowSuggestions(true);\r\n        } else setIsShowSuggestions(false);\r\n    }\r\n    function handleClick(suggestion) {\r\n        setValue(suggestion.content);\r\n        setIsShowSuggestions(false);\r\n        onClick(suggestion);\r\n    }\r\n    function handleBlur() {\r\n        setIsShowSuggestions(false);\r\n    }\r\n    function handleClickInput() {\r\n        setIsShowSuggestions(true);\r\n    }\r\n    // useEffect(() => {\r\n    //     setValue(props.initialValue)\r\n    // }, [props]);\r\n    return (\r\n        <Fragment>\r\n            {\r\n                <input\r\n                    onChange={handleChange}\r\n                    onClick={handleClickInput}\r\n                    value={value}\r\n                    className={className}\r\n                    name={name}\r\n                    autoComplete=\"off\"\r\n                    // onBlur={handleBlur}\r\n                />\r\n            }\r\n            <div style={{ position: \"relative\" }}>\r\n                {suggestionsList}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}","F:\\Project\\bkc-frontend\\src\\Components\\DriverManagement\\DriverItem.js",["344","345","346"],"F:\\Project\\bkc-frontend\\src\\Helpers\\validation.js",["347"],"import moment from 'moment';\r\nexport function validation(value, rules) {\r\n    let result = \"\"\r\n    for (let i = 0; i < rules.length; i++) {\r\n        switch (rules[i]) {\r\n            case NOT_EMPTY: {\r\n                result = value ? \"\" : \"This field is not allow empty\";\r\n                break;\r\n            }\r\n            case ONLY_NUMBER: {\r\n                result = parseInt(value) ? \"\" : \"This field required number\";\r\n                break;\r\n            }\r\n            default: {\r\n                break;\r\n            }\r\n        }\r\n        if (result) break;\r\n    };\r\n    return result;\r\n}\r\nexport const NOT_EMPTY = \"NOT_EMPTY\";\r\nexport const ONLY_NUMBER = \"ONLY_NUMBER\"\r\nexport const NOT_IN_THE_PAST = \"NOT_IN_THE_PAST\";","F:\\Project\\bkc-frontend\\src\\Helpers\\formatPhoneNumber.js",[],"F:\\Project\\bkc-frontend\\src\\Components\\Commons\\MultipleSelect.js",["348","349","350","351"],"import { Fragment, useState } from \"react\";\r\nimport remove from \"lodash/remove\"\r\nimport './MultipleSelect.scss';\r\nimport { useEffect } from \"react\";\r\n\r\nexport const MultipleSelect = (props) => {\r\n    const { onChange, className, name, onSelectedItem, onDeleteItem, isDisabled, icon, isMultipleSelected } = props;\r\n    const [isShowSuggestions, setIsShowSuggestions] = useState(false);\r\n    const [isShowSearch, setIsShowSearch] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n    const [activeIdItems, setActiveIdItems] = useState([]);\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const displayItems = items.map((item, index) => {\r\n        return (\r\n            <div key={index} className=\"item-container\">\r\n                <div className=\"item\">\r\n                    {item.content}\r\n                </div>\r\n                <i onClick={() => handleDeleteItem(item.id)} className=\"fas fa-times fa-sm ml-1 mt-1\"></i>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    const displaySuggestions =\r\n        <div className=\"suggestions-wrapper\">\r\n            <div className=\"multiple-selected\">\r\n                {suggestions.length !== 0 ?\r\n                    suggestions.map((suggestion, index) => {\r\n                        const isActive = activeIdItems.findIndex(activeIdItem => {\r\n                            return activeIdItem === suggestion.id;\r\n                        }) > -1 ? true : false;\r\n                        return (\r\n                            <div\r\n                                style={{ cursor: \"pointer\" }}\r\n                                key={index}\r\n                                className={isActive ? \"active-item\" : \"\"}\r\n                                onClick={() => handleSelectedItem(suggestion.id, suggestion.content)}\r\n                            >\r\n                                {suggestion.label}\r\n                            </div>\r\n                        )\r\n                    }) : <p>Not Found</p>}\r\n            </div>\r\n        </div>\r\n    function handleChangeSearch(e) {\r\n        onChange(e);\r\n        if (suggestions.length !== 0) {\r\n            setIsShowSuggestions(true);\r\n        }\r\n    }\r\n    function handleSelectedItem(suggestionId, suggestionContent) {\r\n        if (isMultipleSelected) {\r\n            const index = activeIdItems.findIndex(activeIdItem => {\r\n                return activeIdItem === suggestionId\r\n            });\r\n            if (index > -1) return;\r\n            const suggestion = {\r\n                id: suggestionId,\r\n                content: suggestionContent\r\n            }\r\n            onSelectedItem(suggestion)\r\n            setItems([...items, suggestion])\r\n            setActiveIdItems([...activeIdItems, suggestionId]);\r\n            return;\r\n        }\r\n        const suggestion = {\r\n            id: suggestionId,\r\n            content: suggestionContent\r\n        }\r\n        onSelectedItem(suggestion)\r\n        setItems([suggestion])\r\n        setActiveIdItems([suggestionId]);\r\n    }\r\n    function handleKeyDown(e) {\r\n        if (e.keyCode === 8) {\r\n            const temp = [...items];\r\n            temp.pop();\r\n            setItems(temp);\r\n        }\r\n    }\r\n    function handleClickSearch() {\r\n        if (isDisabled) return;\r\n        setIsShowSearch(true);\r\n        setIsShowSuggestions(true);\r\n    }\r\n    function handleDeleteItem(itemId) {\r\n        if (isMultipleSelected) {\r\n            onDeleteItem(itemId);\r\n            const cloneItems = [...items];\r\n            remove(cloneItems, (item) => {\r\n                return item.id === itemId;\r\n            });\r\n            setItems(cloneItems);\r\n            const cloneActiveIdItems = [...activeIdItems];\r\n            remove(cloneActiveIdItems, (activeIdItem) => {\r\n                return activeIdItem === itemId;\r\n            });\r\n            setActiveIdItems(cloneActiveIdItems);\r\n            return;\r\n        }\r\n        onDeleteItem(itemId);\r\n        setItems([]);\r\n        setActiveIdItems([]);\r\n    }\r\n    function handleExit() {\r\n        setIsShowSuggestions(false);\r\n        setIsShowSearch(false);\r\n        setSuggestions([]);\r\n    }\r\n    function handleBlur(e) {\r\n        if (e.currentTarget === e.target) {\r\n            console.log('focus left self');\r\n        } else {\r\n            console.log(\"unfocused child\", e.target);\r\n        }\r\n        if (!e.currentTarget.contains(e.relatedTarget)) {\r\n            // Not triggered when swapping focus between children\r\n            console.log(\"focus left self\");\r\n            console.log(\"unfocused self\");\r\n            setIsShowSuggestions(false);\r\n            setIsShowSearch(false);\r\n            setSuggestions([]);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setIsShowSuggestions(false);\r\n        setIsShowSearch(false);\r\n    }, [props.isDisabled]);\r\n    useEffect(() => {\r\n        if (props.initialValue !== undefined && props.initialValue.length !== 0) {\r\n            setItems([...props.initialValue]);\r\n            setActiveIdItems(props.initialValue.map(item => {\r\n                return item.id;\r\n            }))\r\n        }\r\n    }, [props.initialValue])\r\n    useEffect(() => {\r\n        setSuggestions(props.suggestions);\r\n    }, [props.suggestions])\r\n    return (\r\n        <div\r\n            className=\"wraper-all\"\r\n            tabIndex=\"1\"\r\n            onBlur={handleBlur}\r\n            onClick={handleClickSearch}\r\n        >\r\n            {\r\n                icon ?\r\n                    <div className=\"input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <img className=\"input-group-text\" src={icon} />\r\n                        </div>\r\n                        <div\r\n                            className={isDisabled ? `${className} multiple-items-container disabled` : `${className} multiple-items-container`}\r\n                            // className={isDisabled ? `multiple-items-container disabled` : `multiple-items-container`}\r\n                            onKeyDown={handleKeyDown}\r\n                            style={{ height: \"30.8px\" }}\r\n                        // onClick={handleClickSearch}\r\n                        >\r\n                            {displayItems}\r\n\r\n                        </div>\r\n                    </div> :\r\n                    <div\r\n                        // className={isDisabled ? \"form-control multiple-items-container disabled\" : \"form-control multiple-items-container\"}\r\n                        className={isDisabled ? `${className} multiple-items-container disabled` : `${className} multiple-items-container`}\r\n                        // className={isDisabled ? `multiple-items-container disabled` : `multiple-items-container`}\r\n                        onKeyDown={handleKeyDown}\r\n                        style={{ height: \"30.8px\" }}\r\n                    // onClick={handleClickSearch}\r\n                    >\r\n\r\n                        {displayItems}\r\n\r\n                    </div>\r\n            }\r\n\r\n            {\r\n                isShowSearch ?\r\n\r\n                    <div className=\"search-bar-and-suggestions\">\r\n                        <div className=\"search-bar\">\r\n                            <div className=\"input-group search-and-icon\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <i className=\"fas fa-search input-group-text icon-search\"></i>\r\n                                </div>\r\n                                <input\r\n                                    placeholder=\"Search name\"\r\n                                    name={name}\r\n                                    onChange={handleChangeSearch}\r\n                                    className=\"form-control form-control-sm\"\r\n                                    autoComplete=\"off\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <hr></hr>\r\n                        {/* <i onClick={handleExit} className=\"fas fa-times-circle fa-lg icon-exit\"></i> */}\r\n                        {displaySuggestions}\r\n                    </div> : \"\"\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}","F:\\Project\\bkc-frontend\\src\\Components\\CarManagement\\CarItem.js",["352","353","354"],"F:\\Project\\bkc-frontend\\src\\Constants\\AppConstants.js",[],"F:\\Project\\bkc-frontend\\src\\Constants\\CommonsConstants.js",[],"F:\\Project\\bkc-frontend\\src\\Reducers\\ticketManagementReducer.js",[],"F:\\Project\\bkc-frontend\\src\\Components\\TicketManagement\\TicketRequestContainer.js",[],"F:\\Project\\bkc-frontend\\src\\Components\\TicketManagement\\TicketRequestTable.js",[],"F:\\Project\\bkc-frontend\\src\\Components\\TicketManagement\\TicketRequestItem.js",["355"],"import { Fragment, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { TICKET_STATUS } from \"../../Constants/CommonsConstants\";\r\nimport Modal from 'react-responsive-modal';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport const TicketRequestItem = (props) => {\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const history = useHistory();\r\n    const { ticketRequestItem, no } = props;\r\n    const [status, setStatus] = useState(\"\");\r\n    const [classNameForStatus, setClassNameForStatus] = useState(\"\");\r\n    const [isOpenModal, setIsOpenModal] = useState(false);\r\n    const [reasonReject, setReasonReject] = useState(\"\");\r\n    const [isDisabledButtonReject, setIsDisabledButtonReject] = useState(false);\r\n    function handleClickDetail() {\r\n        history.push(`/booking-approval/${ticketRequestItem.id}`)\r\n    }\r\n    function handleCloseModal() {\r\n        setIsOpenModal(false);\r\n    }\r\n    function handleReject() {\r\n        setIsOpenModal(true);\r\n    }\r\n    function handleCancelTicket() {\r\n        \r\n    }\r\n    function handleClickBack() {\r\n        setIsOpenModal(false);\r\n    }\r\n    function handleChange(e) {\r\n        setReasonReject(e.target.value)\r\n    }\r\n    useEffect(() => {\r\n        switch (ticketRequestItem.status) {\r\n            case TICKET_STATUS.APPROVED: {\r\n                setClassNameForStatus(\"label-custom label-success\");\r\n                setStatus(t(\"duocduyet\"));\r\n                break;\r\n            }\r\n            case TICKET_STATUS.WAITING: {\r\n                setClassNameForStatus(\"label-custom label-info\");\r\n                setStatus(t(\"doiduyet\"));\r\n                break;\r\n            }\r\n            case TICKET_STATUS.DRAFT: {\r\n                setClassNameForStatus(\"label-custom label-warning\");\r\n                setStatus(t(\"nhap\"));\r\n                break;\r\n            }\r\n            case TICKET_STATUS.REJECTED: {\r\n                setClassNameForStatus(\"label-custom label-danger\");\r\n                setStatus(t(\"tuchoi\"));\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }, [t, ticketRequestItem])\r\n    useEffect(() => {\r\n        if (ticketRequestItem && ticketRequestItem.status === TICKET_STATUS.REJECTED) {\r\n            setIsDisabledButtonReject(true);\r\n        } else {\r\n            setIsDisabledButtonReject(false);\r\n        }\r\n    }, [ticketRequestItem])\r\n    return (\r\n        <Fragment>\r\n            <tr>\r\n                <td data-label={t(\"stt\")}>{no}</td>\r\n                <td data-label={t(\"hovaten\")}>{ticketRequestItem.employeeName}</td>\r\n                <td data-label={t(\"ngaydi\")}>{ticketRequestItem.startDate}</td>\r\n                <td data-label={t(\"ngayve\")}>{ticketRequestItem.endDate}</td>\r\n                <td data-label=\"\">{ticketRequestItem.fromLocation}</td>\r\n                <td data-label=\"\">{ticketRequestItem.toLocation}</td>\r\n                <td data-label={t(\"songuoidi\")}>{ticketRequestItem.totalParticipant}</td>\r\n                <td data-label={t(\"trangthai\")}><label className={classNameForStatus}>{status}</label></td>\r\n                <td data-label={t(\"hanhdong\")}>\r\n                    <button\r\n                        onClick={handleClickDetail}\r\n                        className=\"btn btn-outline-primary btn-sm mr-1\"\r\n                    >\r\n                        <i className=\"fas fa-info-circle mr-1\"></i>\r\n                        {t(\"chitiet\")}\r\n                    </button>\r\n                    <button disabled={isDisabledButtonReject} onClick={handleReject} className=\"btn btn-outline-danger btn-sm\">\r\n                        <i className=\"fas fa-times-circle mr-1\"></i>\r\n                        {t(\"huybo\")}\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n            <Modal\r\n                open={isOpenModal}\r\n                center\r\n                onClose={handleCloseModal}\r\n            >\r\n                <h4>{t(\"lido\")}</h4>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <textarea\r\n                            value={reasonReject}\r\n                            name=\"reasonReject\"\r\n                            className=\"form-control\"\r\n                            rows=\"5\"\r\n                            onChange={handleChange}\r\n                        >\r\n                        </textarea>\r\n                    </div>\r\n                    <div className=\"w-100\" />\r\n                    <div className=\"col-12 mt-2\">\r\n                        <button\r\n                            onClick={handleCancelTicket}\r\n                            className=\"btn btn-outline-primary btn-sm mr-2\"\r\n                        >\r\n                            <i className=\"fas fa-check-circle mr-1\"></i>\r\n                            {t(\"xacnhan\")}\r\n                        </button>\r\n                        <button\r\n                            onClick={handleClickBack}\r\n                            className=\"btn btn-outline-danger btn-sm\"\r\n                        >\r\n                            <i className=\"fas fa-backspace mr-1\"></i>\r\n                            {t(\"quaylai\")}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </Fragment>\r\n    );\r\n}","F:\\Project\\bkc-frontend\\src\\Reducers\\ticketHandleReducer.js",["356","357"],"import { remove } from \"lodash\";\r\nimport {\r\n    SET_NOTE_FOR_DRIVER, \r\n    SET_SELECTED_CAR, \r\n    SET_TICKET,\r\n    SET_TICKET_CARS,\r\n    SET_DRIVERS,\r\n    SET_DRIVER_WAS_BOOKED\r\n\r\n} from \"../Constants/TicketHandleConstants\";\r\n\r\nconst initialState = {\r\n    noteForDrivers: [],\r\n    selectedCars: [],\r\n    ticket: {},\r\n    ticketCars: [],\r\n    drivers: [],\r\n    driversWasBooked: []\r\n}\r\nexport const ticketHandleReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TICKET: {\r\n            return {\r\n                ...state,\r\n                ticket: action.ticket\r\n            }\r\n        }\r\n        case SET_TICKET_CARS: {\r\n            return {\r\n                ...state,\r\n                ticketCars: action.ticketCars\r\n            }\r\n        }\r\n        case SET_SELECTED_CAR: {\r\n            let cloneSelectedCars = [...state.selectedCars];\r\n            if(action.selectedCar.type === \"MOVE_CAR\"){\r\n                cloneSelectedCars[0] = action.selectedCar\r\n            }else if(action.selectedCar.type === \"RETURN_CAR\"){\r\n                cloneSelectedCars[1] = action.selectedCar\r\n            }else{\r\n                cloneSelectedCars = [];\r\n            }\r\n            return {\r\n                ...state,\r\n                selectedCars: cloneSelectedCars\r\n            }\r\n        }\r\n        case SET_NOTE_FOR_DRIVER: {\r\n            const noteForDriver = action.noteForDriver;\r\n            return {\r\n                ...state,\r\n                noteForDriver: action.noteForDriver\r\n            }\r\n        }\r\n        case SET_DRIVERS: {\r\n            return {\r\n                ...state,\r\n                drivers: action.drivers\r\n            }\r\n        }\r\n        case SET_DRIVER_WAS_BOOKED: {\r\n            return {\r\n                ...state,\r\n                driversWasBooked: action.driversWasBooked\r\n            }\r\n        }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}","F:\\Project\\bkc-frontend\\src\\Reducers\\ticketHistoryReducer.js",[],"F:\\Project\\bkc-frontend\\src\\Components\\TicketHandle\\DriverTable.js",[],"F:\\Project\\bkc-frontend\\src\\Components\\TicketHandle\\TicketDetailReadOnly.js",[],"F:\\Project\\bkc-frontend\\src\\Components\\TicketHandle\\LocationTableReadOnly.js",[],"F:\\Project\\bkc-frontend\\src\\Components\\TicketHandle\\TicketInformationReadOnly.js",[],"F:\\Project\\bkc-frontend\\src\\Components\\TicketHandle\\DriverItem.js",["358","359","360"],"import 'react-responsive-modal/styles.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport { Fragment, useEffect, useState } from \"react\"\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setNoteForDriver, setSelectedCar } from \"../../ActionCreators/ticketHandleActionCreator\";\r\nimport formatPhoneNumber from \"../../Helpers/formatPhoneNumber\";\r\nimport { CAR_STATUS, END_POINT, HTTP_METHOD } from \"../../Constants/CommonsConstants\";\r\nimport { callApi } from '../../Helpers/callApi';\r\nimport { notification, NOTIFICATION_TYPE } from '../../Helpers/notification';\r\nimport { isEmpty } from 'lodash';\r\n\r\nexport const DriverItem = (props) => {\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const { driver, no } = props;\r\n    const [carStatus, setCarStatus] = useState(\"\");\r\n    const driversWasBooked = useSelector(state => state.ticketHandleReducer.driversWasBooked);\r\n    const ticketCars = useSelector(state => state.ticketHandleReducer.ticketCars);\r\n    const [ticketByCarIds, setTicketByCarIds] = useState([]);\r\n    const [isDisabledSelectedReturnCar, setIsDisabledSelectedReturnCar] = useState(false);\r\n    const ticket = useSelector(state => state.ticketHandleReducer.ticket);\r\n    const displayTicketByCaIds = ticketByCarIds && ticketByCarIds.map((ticket, index) => {\r\n        return <tr\r\n            key={index}\r\n        >\r\n            <td>{index + 1}</td>\r\n            <td>{ticket.employeeName}</td>\r\n            <td>{ticket.employeePhone}</td>\r\n            <td>{ticket.startDate}</td>\r\n            <td>{ticket.endDate}</td>\r\n            <td>{ticket.fromLocation}</td>\r\n            <td>{ticket.toLocation}</td>\r\n        </tr>\r\n    })\r\n    const noteForDriver = useSelector(state => state.ticketHandleReducer.noteForDriver);\r\n    const [isOpenModal, setIsOpenModal] = useState(false);\r\n    function handleCheckedCar(e) {\r\n        if (e.target.name === \"MOVE_CAR\") {\r\n            props.onHandleCheckedMoveCar(driver.car.id);\r\n        } else {\r\n            props.onHandleCheckReturnCar(driver.car.id);\r\n        }\r\n        const car = {\r\n            type: e.target.name,\r\n            ...driver.car\r\n        }\r\n        dispatch(setSelectedCar(car));\r\n    }\r\n    function handleChangeNoteForDriverchange(e) {\r\n        const data = {\r\n            driverId: driver.id,\r\n            message: e.target.value\r\n        }\r\n        dispatch(setNoteForDriver(data));\r\n    }\r\n    async function handleCheckStatus() {\r\n        const res = await callApi(`${END_POINT}/cars/${driver.car.id}/tickets`, HTTP_METHOD.GET, null);\r\n        if (res.status !== 200) {\r\n            return notification(NOTIFICATION_TYPE.ERROR, \"Load ticket by car id fail\");\r\n        }\r\n        const ticketByCarIds = res.data;\r\n        setTicketByCarIds(ticketByCarIds);\r\n        setIsOpenModal(!isOpenModal);\r\n    }\r\n    function handleCloseModal() {\r\n        setIsOpenModal(!isOpenModal);\r\n    }\r\n    useEffect(() => {\r\n        const index1 = ticketCars.findIndex(ticketCar => {\r\n            if (ticketCar.type === \"MOVE_CAR\" && +ticketCar.carId === +driver.car.id) return true;\r\n            return false;\r\n        });\r\n        const index2 = ticketCars.findIndex(ticketCar => {\r\n            if (ticketCar.type === \"RETURN_CAR\" && +ticketCar.carId === +driver.car.id) return true;\r\n            return false;\r\n        });\r\n        if (index1 >= 0) props.onHandleCheckedMoveCar(driver.car.id);\r\n        if (index2 >= 0) props.onHandleCheckReturnCar(driver.car.id);\r\n    }, [ticketCars])\r\n    useEffect(() => {\r\n        const isBooked = driversWasBooked.some(item => {\r\n            return +item.car.id === +driver.car.id;\r\n        });\r\n        if (isBooked) {\r\n            setCarStatus(CAR_STATUS.BOOKED);\r\n        } else {\r\n            setCarStatus(CAR_STATUS.FREE);\r\n        }\r\n    }, [driversWasBooked])\r\n    useEffect(() => {\r\n        if (isEmpty(ticket && ticket.endDate)) {\r\n            setIsDisabledSelectedReturnCar(true);\r\n        } else {\r\n            setIsDisabledSelectedReturnCar(false);\r\n        }\r\n    }, [ticket])\r\n    return (\r\n        <Fragment>\r\n            <tr>\r\n                <td data-label={t(\"stt\")}>{no}</td>\r\n                <td data-label={t(\"tentaixe\")}>{driver.employeeName}</td>\r\n                <td data-label={t(\"sodienthoaitaixe\")}>{formatPhoneNumber(driver.employeePhone)}</td>\r\n                <td data-label={t(\"biensoxe\")}>{driver.car.number}</td>\r\n                <td data-label={t(\"socho\")}>{driver.car.totalSeat}</td>\r\n                <td onClick={handleCheckStatus} data-label={t(\"trangthai\")}>{carStatus}</td>\r\n                <td data-label={t(\"chonxengaydi\")}>\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"MOVE_CAR\"\r\n                        onChange={handleCheckedCar}\r\n                        value={driver.car.id}\r\n                        checked={props.moveCarId === driver.car.id}\r\n                    />\r\n                </td>\r\n                <td data-label={t(\"chonxengayve\")}>\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"RETURN_CAR\"\r\n                        onChange={handleCheckedCar}\r\n                        value={driver.car.id}\r\n                        checked={props.returnCarId === driver.car.id}\r\n                        disabled={isDisabledSelectedReturnCar}\r\n                    />\r\n                </td>\r\n                <td data-label={t(\"ghichuchotaixe\")}>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"noteForDriver\" type=\"text\"\r\n                        onChange={handleChangeNoteForDriverchange}\r\n                        value={noteForDriver}\r\n                        className=\"form-control form-control-sm\"\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </td>\r\n            </tr>\r\n            <Modal\r\n                open={isOpenModal}\r\n                onClose={handleCloseModal}\r\n                center\r\n            >\r\n                <div>\r\n                    <h5>DANH SÁCH NGƯỜI ĐÃ ĐẶT XE</h5>\r\n                    <table className=\"table-bordered table-striped table-sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>STT</th>\r\n                                <th>Tên</th>\r\n                                <th>Số Điện Thoại</th>\r\n                                <th>Ngày Đi</th>\r\n                                <th>Ngày Về</th>\r\n                                <th>Địa Điểm Đón</th>\r\n                                <th>Địa Điểm Đến</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {displayTicketByCaIds}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </Modal>\r\n        </Fragment>\r\n    );\r\n}","F:\\Project\\bkc-frontend\\src\\Components\\TicketHandle\\LocationItemReadOnly.js",[],"F:\\Project\\bkc-frontend\\src\\Pages\\TicketHandle.js",["361"],"import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { TicketHandleContainer } from \"../Components/TicketHandle/TicketHandleContainer\";\r\nimport {\r\n    fetchDriversByBuId,\r\n    fetchDriversWasBooked,\r\n    fetchTicketCarsByTicketId,\r\n    fetchTicketsById,\r\n    setDrivers,\r\n    setDriversWasBooked,\r\n    setSelectedCar,\r\n    setTicketCars,\r\n    setTickets\r\n} from '../ActionCreators/ticketHandleActionCreator'\r\nimport \"./TicketHandle.scss\";\r\n\r\nexport const TicketHandle = () => {\r\n    const { ticketId } = useParams();\r\n    const employee = useSelector(state => state.appReducer.employee);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(fetchTicketsById(ticketId))\r\n        dispatch(fetchTicketCarsByTicketId(ticketId));\r\n        dispatch(fetchDriversByBuId(employee.buId))\r\n        dispatch(fetchDriversWasBooked(employee.buId))\r\n        return () => {\r\n            dispatch(setSelectedCar([]));\r\n            dispatch(setTickets({}));\r\n            dispatch(setTicketCars([]));\r\n            dispatch(setDrivers([]));\r\n            dispatch(setDriversWasBooked([]));\r\n        }\r\n    }, [ticketId])\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <TicketHandleContainer />\r\n        </div>\r\n    );\r\n}","F:\\Project\\bkc-frontend\\src\\Components\\TicketHandle\\TicketHandleButton.js",["362"],"import { useHistory } from \"react-router-dom\";\r\nimport Modal from 'react-responsive-modal';\r\nimport { useEffect, useState } from \"react\";\r\nimport { TICKET_STATUS } from \"../../Constants/CommonsConstants\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { isEmpty } from \"lodash\";\r\nexport const TicketHandleButton = (props) => {\r\n    const { t } = useTranslation();\r\n    const { ticket } = props;\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [isOpenModal, setIsOpenModal] = useState(false);\r\n    const [reasonReject, setReasonReject] = useState(\"\");\r\n    const [isUpdate, setIsUpdate] = useState(false);\r\n    const selectedCars = useSelector(state => state.ticketHandleReducer.selectedCars);\r\n    const [isDisabledButtonAccepted, setIsDisabledButtonAccepted] = useState(false);\r\n    const [isDisabledButtonRejected, setIsDisabledButtonRejected] = useState(false);\r\n    function handleClickBack() {\r\n        history.push(\"/ticket-management\");\r\n    }\r\n    function handleCloseModal() {\r\n        setIsOpenModal(false);\r\n    }\r\n    function handleReject() {\r\n        setIsOpenModal(true);\r\n    }\r\n    function handleChange(e) {\r\n        setReasonReject(e.target.value)\r\n    }\r\n    function handleClickBackModal() {\r\n        setIsOpenModal(false);\r\n    }\r\n    function handleUpdate() {\r\n        props.onHandleUpdateTicket();\r\n        setIsOpenModal(false);\r\n        history.push(\"/ticket-management\");\r\n    }\r\n    useEffect(() => {\r\n        if (ticket && ticket.status === TICKET_STATUS.APPROVED) {\r\n            setIsUpdate(true);\r\n        } else {\r\n            setIsUpdate(false);\r\n        }\r\n    }, [ticket])\r\n    useEffect(() => {\r\n        if (isEmpty(selectedCars)) {\r\n            setIsDisabledButtonAccepted(true);\r\n        } else {\r\n            setIsDisabledButtonAccepted(false);\r\n        }\r\n    }, [selectedCars]);\r\n    useEffect(() => {\r\n        if(ticket&&ticket.status === TICKET_STATUS.REJECTED){\r\n            setIsDisabledButtonRejected(true)\r\n        }else{\r\n            setIsDisabledButtonRejected(false);\r\n        }\r\n    }, [ticket])\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-12 col-xl-12\">\r\n                {\r\n                    isUpdate ?\r\n                        <button\r\n                            className=\"btn btn-outline-primary btn-sm mr-1\"\r\n                            onClick={handleUpdate}\r\n                        >\r\n                            <i className=\"fas fa-check-circle mr-1\"></i>\r\n                            {t(\"suayeucau\")}\r\n                        </button> :\r\n                        <button\r\n                            onClick={props.onHandleClickApprove}\r\n                            className=\"btn btn-outline-primary btn-sm mr-1\"\r\n                            disabled={isDisabledButtonAccepted}\r\n                        >\r\n                            <i className=\"fas fa-check-circle mr-1\"></i>\r\n                            {t(\"xacnhan\")}\r\n                        </button>\r\n                }\r\n\r\n                <button\r\n                    onClick={handleReject}\r\n                    className=\"btn btn-outline-danger btn-sm mr-1\"\r\n                    disabled={isDisabledButtonRejected}\r\n                >\r\n                    <i className=\"fas fa-times-circle mr-1\"></i>\r\n                    {t(\"huybo\")}\r\n                </button>\r\n                <button onClick={handleClickBack} className=\"btn btn-outline-info btn-sm\">\r\n                    <i className=\"fas fa-backspace mr-1\"></i>\r\n                    {t(\"quaylai\")}\r\n                </button>\r\n            </div>\r\n            <Modal\r\n                open={isOpenModal}\r\n                center\r\n                onClose={handleCloseModal}\r\n            >\r\n                <h4>{t(\"lido\")}</h4>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <textarea\r\n                            value={reasonReject}\r\n                            name=\"reasonReject\"\r\n                            className=\"form-control\"\r\n                            rows=\"5\"\r\n                            onChange={handleChange}\r\n                        >\r\n                        </textarea>\r\n                    </div>\r\n                    <div className=\"w-100\" />\r\n                    <div className=\"col-12 mt-2\">\r\n                        <button\r\n                            onClick={props.onHandleDeleteTicket}\r\n                            className=\"btn btn-outline-primary btn-sm mr-1\"\r\n                        >\r\n                            <i className=\"fas fa-check-circle mr-1\"></i>\r\n                            {t(\"xacnhan\")}\r\n                        </button>\r\n                        <button\r\n                            onClick={handleClickBackModal}\r\n                            className=\"btn btn-outline-info btn-sm\"\r\n                        >\r\n                            <i className=\"fas fa-backspace mr-1\"></i>\r\n                            {t(\"quaylai\")}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","F:\\Project\\bkc-frontend\\src\\Components\\TicketHandle\\TicketHandleContainer.js",["363","364","365"],"import { isEmpty } from \"lodash\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { TicketHandleButton } from \"./TicketHandleButton\";\r\nimport { DriverTable } from \"./DriverTable\";\r\nimport { LocationTableReadOnly } from \"./LocationTableReadOnly\"\r\nimport { TicketDetailReadOnly } from \"./TicketDetailReadOnly\"\r\nimport { TicketInformationReadOnly } from \"./TicketInformationReadOnly\"\r\nimport moment from 'moment';\r\nimport { END_POINT, HTTP_METHOD, TICKET_STATUS } from \"../../Constants/CommonsConstants\";\r\nimport { notification, NOTIFICATION_TYPE } from \"../../Helpers/notification\";\r\nimport { callApi } from \"../../Helpers/callApi\";\r\n\r\nexport const TicketHandleContainer = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const employee = useSelector(state => state.appReducer.employee);\r\n    const ticket = useSelector(state => state.ticketHandleReducer.ticket)\r\n    const ticketCars = useSelector(state => state.ticketHandleReducer.ticketCars);\r\n    const noteForDriver = useSelector(state => state.ticketHandleReducer.noteForDriver)\r\n    const selectedCars = useSelector(state => state.ticketHandleReducer.selectedCars);\r\n    async function handleClickApprove() {\r\n        selectedCars && selectedCars.forEach(async selectedCar => {\r\n            let ticketCar = null;\r\n            if (selectedCar.type === \"MOVE_CAR\") {\r\n                ticketCar = {\r\n                    startDate: ticket.startDate,\r\n                }\r\n            }else{\r\n                ticketCar = {\r\n                    startDate: ticket.endDate,\r\n                } \r\n            }\r\n            const ticketUpdate = {\r\n                ...ticket,\r\n                handlerId: employee.id,\r\n                handlerName: employee.name,\r\n                handledDate: moment().format(\"DD/MM/YYYY\"),\r\n                status: TICKET_STATUS.APPROVED\r\n            }\r\n            const ticketUpdateResponse = await callApi(`${END_POINT}/tickets`, HTTP_METHOD.PUT, ticketUpdate);\r\n            if (ticketUpdateResponse.status !== 200) {\r\n                notification(NOTIFICATION_TYPE.ERROR, \"Update ticket fail\");\r\n                return;\r\n            }\r\n            const car = {\r\n                ...selectedCar,\r\n            }\r\n            const ticketId = ticketUpdateResponse.data.id;\r\n            const carUpdateResponse = await callApi(`${END_POINT}/cars/`, HTTP_METHOD.PUT, car)\r\n            if (carUpdateResponse.status !== 200) {\r\n                return;\r\n            }\r\n            ticketCar = {\r\n                ...ticketCar,\r\n                type: selectedCar.type,\r\n                ticketId: ticketId,\r\n                carId: selectedCar.id,\r\n                noteForDriver: noteForDriver,\r\n            }\r\n            const ticketCarUpdateResponse = await callApi(`${END_POINT}/ticket-car`, HTTP_METHOD.POST, ticketCar)\r\n            if (ticketCarUpdateResponse.status !== 200) {\r\n                return\r\n            }\r\n\r\n        });\r\n        notification(NOTIFICATION_TYPE.SUCCESS, \"Thành Công\");\r\n        history.push(\"/ticket-management\");\r\n\r\n    }\r\n    async function handleUpdateTicket() {\r\n        for (let i = 0; i < selectedCars.length; i++) {\r\n            let ticketCarUpdate = null;\r\n            if (selectedCars[i].type === \"MOVE_CAR\") {\r\n                ticketCarUpdate = {\r\n                    id: ticketCars && ticketCars.find(ticketCar => {\r\n                        return ticketCar.type === selectedCars[i].type\r\n                    }).id,\r\n                    ticketId: ticket.id,\r\n                    carId: selectedCars[i].id,\r\n                    type: selectedCars[i].type,\r\n                    startDate: ticket.startDate,\r\n                }\r\n            } else if (selectedCars[i].type === \"RETURN_CAR\") {\r\n                ticketCarUpdate = {\r\n                    id: ticketCars && ticketCars.find(ticketCar => {\r\n                        return ticketCar.type === selectedCars[i].type\r\n                    }).id,\r\n                    ticketId: ticket.id,\r\n                    carId: selectedCars[i].id,\r\n                    type: selectedCars[i].type,\r\n                    startDate: ticket.endDate,\r\n                }\r\n            }\r\n            const ticketCarUpdateResponse = await callApi(`${END_POINT}/ticket-car`, HTTP_METHOD.PUT, ticketCarUpdate);\r\n            if (ticketCarUpdateResponse.status !== 200) {\r\n                return notification(NOTIFICATION_TYPE.ERROR, \"Cập Nhật Thất Bại\");\r\n            }\r\n        }\r\n        notification(NOTIFICATION_TYPE.SUCCESS, \"Cập Nhật Thành Công\");\r\n        history.push(\"/ticket-management\");\r\n    }\r\n    async function handleCancelTicket() {\r\n        const ticketUpdate = {\r\n            ...ticket,\r\n            handlerId: employee.id,\r\n            handlerName: employee.name,\r\n            handledDate: moment().format(\"DD/MM/YYYY\"),\r\n            status: TICKET_STATUS.REJECTED\r\n        }\r\n        const ticketUpdateResponse = await callApi(`${END_POINT}/tickets`, HTTP_METHOD.PUT, ticketUpdate);\r\n        if (ticketUpdateResponse.status !== 200) {\r\n            notification(NOTIFICATION_TYPE.ERROR, \"Update ticket fail\");\r\n            return;\r\n        }\r\n        ticketCars.forEach(async ticketCar => {\r\n            const ticketCarDeleteResponse = await callApi(`${END_POINT}/ticket-car`, HTTP_METHOD.DELETE, ticketCar);\r\n            if (ticketCarDeleteResponse.status !== 200) {\r\n                notification(NOTIFICATION_TYPE.ERROR, \"Delete ticket car fail\");\r\n                return;\r\n            }\r\n        });\r\n        notification(NOTIFICATION_TYPE.SUCCESS, \"Thành Công\");\r\n        history.push(\"/ticket-management\");\r\n    }\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-12 col-xl-12\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <TicketInformationReadOnly />\r\n                        <div className=\"mb-1\"></div>\r\n                        <TicketDetailReadOnly />\r\n                        <div className=\"mb-1\"></div>\r\n                        <LocationTableReadOnly />\r\n                        <div className=\"mb-1\"></div>\r\n                        <DriverTable />\r\n                        <div className=\"mb-1\"></div>\r\n                        <TicketHandleButton\r\n                            onHandleClickApprove={handleClickApprove}\r\n                            onHandleUpdateTicket={handleUpdateTicket}\r\n                            onHandleDeleteTicket={handleCancelTicket}\r\n                            ticket={ticket}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","F:\\Project\\bkc-frontend\\src\\Pages\\TicketHistory.js",[],"F:\\Project\\bkc-frontend\\src\\Components\\TicketHistory\\TicketHistoryContainer.js",[],"F:\\Project\\bkc-frontend\\src\\Components\\TicketHistory\\TicketHistoryTable.js",[],"F:\\Project\\bkc-frontend\\src\\Components\\TicketHistory\\TicketHistoryItem.js",[],"F:\\Project\\bkc-frontend\\src\\Pages\\TicketRequest.js",[],"F:\\Project\\bkc-frontend\\src\\Components\\TicketRequest\\TicketContainer.js",["366","367","368"],"import { TicketDetail } from \"./TicketDetail\"\r\nimport { TicketInformation } from \"./TicketInformation\"\r\nimport { Location } from './Location'\r\nimport { TicketContainerButton } from \"./TicketContainerButton\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { TICKET_STATUS } from \"../../Constants/CommonsConstants\"\r\nimport { addTicketRequest, setLocations, setTicketDetail, updateTicketRequest } from \"../../ActionCreators/ticketActionCreator\"\r\nimport moment from 'moment';\r\nimport { useParams } from \"react-router-dom\"\r\nimport { isEmpty } from \"lodash\"\r\nimport { useEffect } from \"react\"\r\n\r\nexport const TicketContainer = (props) => {\r\n    const dispatch = useDispatch();\r\n    const { ticketId, action } = useParams();\r\n    const ticketInformation = useSelector(state => state.ticketReducer.ticketInformation);\r\n    const ticketDetail = useSelector(state => state.ticketReducer.ticketDetail);\r\n    const locations = useSelector(state => state.ticketReducer.locations);\r\n    const employee = useSelector(state => state.appReducer.employee);\r\n    function handleSaveAndSend() {\r\n        if (isEmpty(action)) {\r\n            const ticketAddRequest = {\r\n                employeeId: ticketInformation.employeeId,\r\n                employeeName: ticketInformation.employeeName,\r\n                employeeLineManagerId: ticketInformation.employeeLineManagerId,\r\n                employeeLineManagerName: ticketInformation.employeeLineManagerName,\r\n                employeePhone: ticketInformation.employeePhone,\r\n                employeeBuId: ticketInformation.employeeBuId,\r\n                employeeBuName: ticketInformation.employeeBuName,\r\n                employeeDepartment: ticketInformation.employeeDepartment,\r\n                employeeEmail: ticketInformation.employeeEmail,\r\n                createDate: moment().format(\"DD/MM/YYYY\"),\r\n                startDate: ticketDetail.startDate,\r\n                endDate: ticketDetail.endDate,\r\n                fromLocation: ticketDetail.fromLocation,\r\n                toLocation: ticketDetail.toLocation,\r\n                totalParticipant: ticketDetail.totalParticipant,\r\n                reasonBooking: ticketDetail.reasonBooking,\r\n                Status: TICKET_STATUS.WAITING,\r\n                locations: locations,\r\n                relatedPeoples: ticketDetail.relatedPeoples,\r\n            }\r\n            dispatch(addTicketRequest(ticketAddRequest));\r\n        }\r\n        else {\r\n            if (action === \"duplicate\") {\r\n                const ticketAddRequest = {\r\n                    employeeId: ticketInformation.employeeId,\r\n                    employeeName: ticketInformation.employeeName,\r\n                    employeeLineManagerId: ticketInformation.employeeLineManagerId,\r\n                    employeeLineManagerName: ticketInformation.employeeLineManagerName,\r\n                    employeePhone: ticketInformation.employeePhone,\r\n                    employeeBuId: ticketInformation.employeeBuId,\r\n                    employeeBuName: ticketInformation.employeeBuName,\r\n                    employeeDepartment: ticketInformation.employeeDepartment,\r\n                    employeeEmail: ticketInformation.employeeEmail,\r\n                    createDate: moment().format(\"DD/MM/YYYY\"),\r\n                    startDate: ticketDetail.startDate,\r\n                    endDate: ticketDetail.endDate,\r\n                    fromLocation: ticketDetail.fromLocation,\r\n                    toLocation: ticketDetail.toLocation,\r\n                    totalParticipant: ticketDetail.totalParticipant,\r\n                    reasonBooking: ticketDetail.reasonBooking,\r\n                    Status: TICKET_STATUS.WAITING,\r\n                    locations: locations,\r\n                    relatedPeoples: ticketDetail.relatedPeoples\r\n                }\r\n                dispatch(addTicketRequest(ticketAddRequest));\r\n            } else if (action === \"update\") {\r\n                const ticketUpdate = {\r\n                    id: ticketId,\r\n                    employeeId: ticketInformation.employeeId,\r\n                    employeeName: ticketInformation.employeeName,\r\n                    employeeLineManagerId: ticketInformation.employeeLineManagerId,\r\n                    employeeLineManagerName: ticketInformation.employeeLineManagerName,\r\n                    employeePhone: ticketInformation.employeePhone,\r\n                    employeeBuId: ticketInformation.employeeBuId,\r\n                    employeeBuName: ticketInformation.employeeBuName,\r\n                    employeeDepartment: ticketInformation.employeeDepartment,\r\n                    employeeEmail: ticketInformation.employeeEmail,\r\n                    // createDate: moment().format(\"DD/MM/YYYY\"),\r\n                    startDate: ticketDetail.startDate,\r\n                    endDate: ticketDetail.endDate,\r\n                    fromLocation: ticketDetail.fromLocation,\r\n                    toLocation: ticketDetail.toLocation,\r\n                    totalParticipant: ticketDetail.totalParticipant,\r\n                    reasonBooking: ticketDetail.reasonBooking,\r\n                    Status: TICKET_STATUS.WAITING,\r\n                    locations: locations,\r\n                    relatedPeoples: ticketDetail.relatedPeoples\r\n                }\r\n                dispatch(updateTicketRequest(ticketUpdate))\r\n            }\r\n        }\r\n\r\n    }\r\n    function handleTempSave() {\r\n        if (isEmpty(action)) {\r\n            var ticketAddRequest = {\r\n                employeeId: ticketInformation.employeeId,\r\n                employeeName: ticketInformation.employeeName,\r\n                employeeLineManagerId: ticketInformation.employeeLineManagerId,\r\n                employeeLineManagerName: ticketInformation.employeeLineManagerName,\r\n                employeePhone: ticketInformation.employeePhone,\r\n                employeeBuId: ticketInformation.employeeBuId,\r\n                employeeBuName: ticketInformation.employeeBuName,\r\n                employeeDepartment: ticketInformation.employeeDepartment,\r\n                employeeEmail: ticketInformation.employeeEmail,\r\n                createDate: moment().format(\"DD/MM/YYYY\"),\r\n                startDate: ticketDetail.startDate,\r\n                endDate: ticketDetail.endDate,\r\n                fromLocation: ticketDetail.fromLocation,\r\n                toLocation: ticketDetail.toLocation,\r\n                totalParticipant: ticketDetail.totalParticipant,\r\n                reasonBooking: ticketDetail.reasonBooking,\r\n                Status: TICKET_STATUS.DRAFT,\r\n                locations: locations,\r\n            }\r\n            dispatch(addTicketRequest(ticketAddRequest));\r\n        }\r\n        else {\r\n            if (action === \"duplicate\") {\r\n                var ticketAddRequest = {\r\n                    employeeId: ticketInformation.employeeId,\r\n                    employeeName: ticketInformation.employeeName,\r\n                    employeeLineManagerId: ticketInformation.employeeLineManagerId,\r\n                    employeeLineManagerName: ticketInformation.employeeLineManagerName,\r\n                    employeePhone: ticketInformation.employeePhone,\r\n                    employeeBuId: ticketInformation.employeeBuId,\r\n                    employeeBuName: ticketInformation.employeeBuName,\r\n                    employeeDepartment: ticketInformation.employeeDepartment,\r\n                    employeeEmail: ticketInformation.employeeEmail,\r\n                    createDate: moment().format(\"DD/MM/YYYY\"),\r\n                    startDate: ticketDetail.startDate,\r\n                    endDate: ticketDetail.endDate,\r\n                    fromLocation: ticketDetail.fromLocation,\r\n                    toLocation: ticketDetail.toLocation,\r\n                    totalParticipant: ticketDetail.totalParticipant,\r\n                    reasonBooking: ticketDetail.reasonBooking,\r\n                    Status: TICKET_STATUS.DRAFT,\r\n                    locations: locations,\r\n                }\r\n                dispatch(addTicketRequest(ticketAddRequest));\r\n            } else if (action === \"update\") {\r\n                var ticketUpdate = {\r\n                    id: ticketId,\r\n                    employeeId: ticketInformation.employeeId,\r\n                    employeeName: ticketInformation.employeeName,\r\n                    employeeLineManagerId: ticketInformation.employeeLineManagerId,\r\n                    employeeLineManagerName: ticketInformation.employeeLineManagerName,\r\n                    employeePhone: ticketInformation.employeePhone,\r\n                    employeeBuId: ticketInformation.employeeBuId,\r\n                    employeeBuName: ticketInformation.employeeBuName,\r\n                    employeeDepartment: ticketInformation.employeeDepartment,\r\n                    employeeEmail: ticketInformation.employeeEmail,\r\n                    // createDate: moment().format(\"DD/MM/YYYY\"),\r\n                    startDate: ticketDetail.startDate,\r\n                    endDate: ticketDetail.endDate,\r\n                    fromLocation: ticketDetail.fromLocation,\r\n                    toLocation: ticketDetail.toLocation,\r\n                    totalParticipant: ticketDetail.totalParticipant,\r\n                    reasonBooking: ticketDetail.reasonBooking,\r\n                    Status: TICKET_STATUS.DRAFT,\r\n                    locations: locations,\r\n                    relatedPeoples: ticketDetail.relatedPeoples,\r\n                }\r\n                dispatch(updateTicketRequest(ticketUpdate));\r\n            }\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        dispatch(setTicketDetail({}));\r\n        dispatch(setLocations([]));\r\n    }, []);\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-12 col-xl-12\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <TicketInformation />\r\n                        <div className=\"mb-2\"></div>\r\n                        <TicketDetail />\r\n                        <div className=\"mb-2\"></div>\r\n                        <Location />\r\n                        <div className=\"mb-2\"></div>\r\n                        <TicketContainerButton\r\n                            onHandleSaveAndSend={handleSaveAndSend}\r\n                            onHandleTempSave={handleTempSave}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","F:\\Project\\bkc-frontend\\src\\Components\\TicketRequest\\TicketDetail.js",["369","370","371"],"F:\\Project\\bkc-frontend\\src\\Components\\TicketRequest\\TicketContainerButton.js",[],"F:\\Project\\bkc-frontend\\src\\Components\\TicketRequest\\Location.js",[],"F:\\Project\\bkc-frontend\\src\\Components\\TicketRequest\\TicketInformation.js",["372","373"],"import { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setTicketInformation } from \"../../ActionCreators/ticketActionCreator\";\r\nimport formatPhoneNumber from \"../../Helpers/formatPhoneNumber\";\r\n\r\nexport const TicketInformation = (props) => {\r\n    const dispatch = useDispatch();\r\n    const employee = useSelector(state => state.appReducer.employee);\r\n    const { name, phone, buName, lineManagerName, department } = employee;\r\n    const { t } = useTranslation();\r\n    useEffect(() => {\r\n        const ticketInformation = {\r\n            employeeId: employee.id,\r\n            employeeName: employee.name,\r\n            employeeLineManagerId: employee.lineManagerId,\r\n            employeeLineManagerName: employee.lineManagerName,\r\n            employeePhone: employee.phone,\r\n            employeeBuId: employee.buId,\r\n            employeeBuName: employee.buName,\r\n            employeeDepartment: employee.department,\r\n        }\r\n        dispatch(setTicketInformation(ticketInformation));\r\n    }, [employee]);\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-12 col-xl-12\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-xl-3\">\r\n                                <h5>{t(\"thongtinnguoidat\")}</h5>\r\n                            </div>\r\n                            <div className=\"w-100\"></div>\r\n                            \r\n                            <div className=\"col-6 col-xl-3\">\r\n                                <label><strong>{t(\"hovaten\")}: </strong> {name}</label>\r\n                            </div>\r\n                            <div className=\"col-6 col-xl-6\">\r\n                                <label><strong>{t(\"sodienthoai\")}: </strong> {formatPhoneNumber(phone)}</label>\r\n                            </div>\r\n                            <div className=\"w-100\"></div>\r\n                            <div className=\"col-6 col-xl-3\">\r\n                                <label><strong>{t(\"tenbu\")}: </strong> {buName}</label>\r\n                            </div>\r\n                            <div className=\"col-6 col-xl-6\">\r\n                                <label><strong>{t(\"phongban\")}: </strong> {department}</label>\r\n                            </div>\r\n                            <div className=\"w-100\"></div>\r\n                            <div className=\"col-6 col-xl-6\">\r\n                                <label><strong>{t(\"nguoiquanli\")}: </strong> {lineManagerName}</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","F:\\Project\\bkc-frontend\\src\\Components\\TicketRequest\\LocationButton.js",[],"F:\\Project\\bkc-frontend\\src\\Components\\TicketRequest\\LocationTable.js",["374","375","376","377","378","379"],"import { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { HTTP_METHOD, END_POINT } from \"../../Constants/CommonsConstants\";\r\nimport { callApi } from \"../../Helpers/callApi\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\nimport { ModalAddLocation } from \"./ModalAddLocation\";\r\nimport { LocationItem } from \"./LocationItem\";\r\nimport { setLocations } from '../../ActionCreators/ticketActionCreator'\r\nimport { remove } from \"lodash\";\r\nimport { useParams } from \"react-router-dom\";\r\nexport const LocationTable = (props) => {\r\n    const { ticketId } = useParams();\r\n    const tickets = useSelector(state => state.ticketHistoryReducer.tickets);\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const [locationLocals, setLocationLocals] = useState([]);\r\n    const diplayLocation = locationLocals.map((location, index) => {\r\n        return <LocationItem\r\n            key={index}\r\n            no={index + 1}\r\n            location={location}\r\n            onSaveUpdate={handleUpdateLocation}\r\n            onDelete={handleDeleteLocation}\r\n        />\r\n    });\r\n    function handleModalSave(location) {\r\n        location.id = locationLocals.length;\r\n        setLocationLocals([...locationLocals, location]);\r\n    }\r\n    function handleUpdateLocation(location) {\r\n        const index = locationLocals.findIndex((item) => {\r\n            return item.id === location.id;\r\n        });\r\n        if (index > -1) {\r\n            const newLocationLocals = [...locationLocals];\r\n            newLocationLocals[index] = location;\r\n            setLocationLocals(newLocationLocals)\r\n        }\r\n    }\r\n    function handleDeleteLocation(location) {\r\n        const newLocationLocals = [...locationLocals];\r\n        remove(newLocationLocals, item => {\r\n            return item.id === location.id;\r\n        });\r\n        for (let i = 0; i < newLocationLocals.length; i++) {\r\n            newLocationLocals[i].id = i;\r\n        }\r\n        setLocationLocals(newLocationLocals);\r\n\r\n    }\r\n    useEffect(() => {\r\n        dispatch(setLocations(locationLocals))\r\n    }, [locationLocals]);\r\n    useEffect(() => {\r\n        const ticket = tickets.find(item => {\r\n            return item.id === +ticketId\r\n        })\r\n        if (ticket) {\r\n            const locations = ticket.locations.map((location, index) => {\r\n                return {\r\n                    ...location,\r\n                    id: index\r\n                }\r\n            });\r\n            setLocationLocals(locations);\r\n        }\r\n    }, [tickets]);\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-12 col-xl-12\">\r\n                <div className=\"table-custom location_table_responsive\">\r\n                    <table className=\"table-sm table-striped table-bordered table_detail\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\" className=\"w_4\" >{t(\"sothutu\")}</th>\r\n                                <th scope=\"col\" className=\"w_12\" >{t(\"noidon\")}</th>\r\n                                <th scope=\"col\" className=\"w_12\" >{t(\"giodon\")}</th>\r\n                                <th scope=\"col\" className=\"w_12\" >{t(\"nhanvien\")}</th>\r\n                                <th scope=\"col\" className=\"w_12\" >{t(\"khach\")}</th>\r\n                                <th scope=\"col\" className=\"w_12\" >{t(\"sodienthoai\")}</th>\r\n                                <th scope=\"col\" className=\"w_12\" >{t(\"ghichu\")}</th>\r\n                                <th scope=\"col\" className=\"w_12\" >{t(\"hanhdong\")}</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {diplayLocation}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <ModalAddLocation onSave={handleModalSave} />\r\n            </div>\r\n        </div>\r\n    );\r\n}","F:\\Project\\bkc-frontend\\src\\Components\\TicketRequest\\ModalAddLocation.js",["380"],"import 'react-responsive-modal/styles.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport Datetime from 'react-datetime';\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport moment from 'moment';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NOT_EMPTY, ONLY_NUMBER, validation } from '../../Helpers/validation';\r\nimport { callApi } from '../../Helpers/callApi';\r\nimport remove from 'lodash/remove';\r\nimport { HTTP_METHOD, END_POINT, LOCATION_DEFAULT } from '../../Constants/CommonsConstants';\r\nimport { MultipleSelect } from '../Commons/MultipleSelect';\r\nimport { Tooltip } from '../Commons/Tooltip';\r\nimport { toggleModalAddLocation } from '../../ActionCreators/ticketActionCreator';\r\nimport { isEmpty } from 'lodash';\r\nimport { useTranslation } from 'react-i18next';\r\nexport const ModalAddLocation = (props) => {\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const isOpenModal = useSelector(state => state.ticketReducer.isOpenModalAddLocation)\r\n    const [suggestionsEmployee, setSuggestionsEmployee] = useState([]);\r\n    const [employees, setEmployees] = useState([]);\r\n    const [location, setLocation] = useState({ ...LOCATION_DEFAULT })\r\n    const [errors, setErrors] = useState({\r\n        place: \"\",\r\n        time: \"\",\r\n        participants: \"\",\r\n        guestName: \"\",\r\n        phone: \"\"\r\n    });\r\n    const [isDisabledBtnSave, setIsDisabledBtnSave] = useState(true);\r\n    const [isDisabledGuestNameInput, setIsDisabledGuestNameInput] = useState(false);\r\n    const [isDisabledEmployeeNameInput, setIsDisabledEmployeeNameInput] = useState(false);\r\n    function handleClickSave() {\r\n        let arrayValue = Object.values(errors);\r\n        if (arrayValue.length === 0) {\r\n            props.onSave(location);\r\n            dispatch(toggleModalAddLocation())\r\n            setLocation({ ...LOCATION_DEFAULT })\r\n            setErrors({\r\n                place: \"\",\r\n                time: \"\",\r\n                participants: \"\",\r\n                guestName: \"\",\r\n                phone: \"\"\r\n            })\r\n            setSuggestionsEmployee([]);\r\n            setIsDisabledBtnSave(true);\r\n            setIsDisabledEmployeeNameInput(false);\r\n            setIsDisabledGuestNameInput(false);\r\n        }\r\n    }\r\n    function handleClickCancel() {\r\n        dispatch(toggleModalAddLocation())\r\n        setLocation({ ...LOCATION_DEFAULT })\r\n        setErrors({\r\n            place: \"\",\r\n            time: \"\",\r\n            participants: \"\",\r\n            guestName: \"\",\r\n            phone: \"\"\r\n        })\r\n        setSuggestionsEmployee([]);\r\n        setIsDisabledBtnSave(true);\r\n        setIsDisabledEmployeeNameInput(false);\r\n        setIsDisabledGuestNameInput(false);\r\n    }\r\n    async function handleChange(e) {\r\n        let validateResult = null;\r\n        switch (e.target.name) {\r\n            case \"place\": {\r\n                validateResult = validation(e.target.value, [NOT_EMPTY]);\r\n                break;\r\n            }\r\n            case \"time\": {\r\n                validateResult = validation(e.target.value, [NOT_EMPTY]);\r\n                break;\r\n            }\r\n            case \"employeeName\": {\r\n                const employeeName = e.target.value;\r\n                if (employeeName.length >= 3) {\r\n                    // const res = await callApi(`https://localhost:5001/api/bkc/employees/${employeeName}`, HTTP_METHOD.GET);\r\n                    const res = await callApi(`${END_POINT}/employees/${employeeName}`, HTTP_METHOD.GET, null);\r\n                    if (res.status !== 200) return;\r\n                    const employees = res.data\r\n                    const suggestionsEmployee = [];\r\n                    for (let i = 0; i < employees.length; i++) {\r\n                        suggestionsEmployee.push({\r\n                            id: employees[i].id,\r\n                            label: employees[i].name + \" \" + employees[i].buName,\r\n                            content: employees[i].name\r\n                        });\r\n                    }\r\n                    setEmployees(employees);\r\n                    setSuggestionsEmployee(suggestionsEmployee);\r\n                }\r\n                return;\r\n            }\r\n            case \"guestName\": {\r\n                if (isDisabledGuestNameInput) return;\r\n                const guestName = e.target.value;\r\n                if (guestName.length <= 0) {\r\n                    setIsDisabledEmployeeNameInput(false);\r\n                    setErrors({\r\n                        ...errors,\r\n                        participants: \"Employee or guestName need to be fill\",\r\n                        guestName: \"Employee or guestName need to be fill\"\r\n                    });\r\n                } else {\r\n                    const cloneError = { ...errors };\r\n                    const { guestName: gn, participants: emps, ...rest } = cloneError;\r\n                    setErrors(rest);\r\n                    setIsDisabledEmployeeNameInput(true);\r\n                }\r\n                setLocation({\r\n                    ...location,\r\n                    [e.target.name]: e.target.value\r\n                })\r\n                return;\r\n            }\r\n            case \"phone\": {\r\n                validateResult = validation(e.target.value, [NOT_EMPTY, ONLY_NUMBER]);\r\n                break;\r\n            }\r\n            case \"note\": {\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n        if (!validateResult) {\r\n            let { [e.target.name]: a, ...rest } = errors;\r\n            setErrors(rest);\r\n        }\r\n        else {\r\n            setErrors({\r\n                ...errors,\r\n                [e.target.name]: validateResult\r\n            })\r\n        }\r\n        setLocation({\r\n            ...location,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    function onCloseModal() {\r\n        dispatch(toggleModalAddLocation());\r\n        setLocation({ ...LOCATION_DEFAULT })\r\n        setErrors({\r\n            place: \"\",\r\n            time: \"\",\r\n            participants: \"\",\r\n            guestName: \"\",\r\n            phone: \"\"\r\n        })\r\n        setSuggestionsEmployee([]);\r\n        setIsDisabledBtnSave(true);\r\n        setIsDisabledEmployeeNameInput(false);\r\n        setIsDisabledGuestNameInput(false);\r\n\r\n    }\r\n    function handleChangeTime(momentObject) {\r\n        let time = null;\r\n        if (typeof momentObject === \"string\" || momentObject instanceof String) {\r\n            time = moment(momentObject, [\"H:m\", \"H:mm\"], true);\r\n            if (time.isValid()) {\r\n                let { time: x, ...rest } = errors;\r\n                setErrors(rest);\r\n            } else {\r\n                setErrors({\r\n                    ...errors,\r\n                    time: \"This field is not valid\"\r\n                })\r\n            }\r\n            setLocation({\r\n                ...location,\r\n                time: time.format(\"H:mm\")\r\n            })\r\n\r\n        } else {\r\n            time = moment(momentObject, [\"H:m\", \"H:mm\"], true);\r\n            let { time: x, ...rest } = errors;\r\n            setErrors(rest);\r\n            setLocation({\r\n                ...location,\r\n                time: time.format(\"H:mm\")\r\n            })\r\n        }\r\n    }\r\n    function handleSelectedEmployee(item) {\r\n        const employee = employees && employees.find(e => +e.id === +item.id);\r\n        if (isEmpty(employee)) return;\r\n        const participant = {\r\n            employeeId: employee.id,\r\n            employeeName: employee.name,\r\n            employeeEmail: employee.email\r\n        }\r\n        const newParticipants = [...location.participants, participant];\r\n        setLocation({\r\n            ...location,\r\n            participants: newParticipants\r\n        })\r\n        const { participants: emp, guestName: gn, ...rest } = errors;\r\n        setErrors(rest);\r\n        setIsDisabledGuestNameInput(true);\r\n    }\r\n    function handleDeleteEmployee(contentItem) {\r\n        const cloneEmployees = [...location.participants];\r\n        if (cloneEmployees.length === 1) {\r\n            setIsDisabledGuestNameInput(false);\r\n            setErrors({\r\n                ...errors,\r\n                participants: \"Employee or guestName need to be fill\",\r\n                guestName: \"Employee or guestName need to be fill\"\r\n            })\r\n        }\r\n        remove(cloneEmployees, (item) => {\r\n            return item.employeeId === contentItem;\r\n        });\r\n        setLocation({\r\n            ...location,\r\n            participants: cloneEmployees\r\n        })\r\n\r\n    }\r\n    useEffect(() => {\r\n        if (Object.keys(errors).length === 0) {\r\n            setIsDisabledBtnSave(false);\r\n        }\r\n        else {\r\n            setIsDisabledBtnSave(true);\r\n        }\r\n    });\r\n    return (\r\n        <Modal\r\n            open={isOpenModal}\r\n            center\r\n            onClose={onCloseModal}\r\n        >\r\n            <h5>{t(\"themchitiet\")}</h5>\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    <label className=\"d-flex align-items-center\">\r\n                        <strong>{t(\"noidon\")}</strong>\r\n                        <i className=\"fas fa-asterisk fa-xs ml-1 asterisk\" />\r\n                    </label>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <label className=\"d-flex align-items-center\">\r\n                        <strong>{t(\"giodon\")}</strong>\r\n                        <i className=\"fas fa-asterisk fa-xs ml-1 asterisk\" />\r\n                    </label>\r\n                </div>\r\n                <div className=\"w-100\" />\r\n                <div className=\"col-6\">\r\n                    <Tooltip active={errors.place ? true : false} content={errors.place} direction=\"top\">\r\n                        <input\r\n                            value={location.place}\r\n                            onChange={handleChange}\r\n                            name=\"place\"\r\n                            className=\"form-control form-control-sm\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                    </Tooltip>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <Tooltip active={errors.time ? true : false} content={errors.time} direction=\"top\">\r\n                        <Datetime\r\n                            dateFormat={false}\r\n                            timeFormat=\"H:mm\"\r\n                            onChange={handleChangeTime}\r\n                            initialValue={location.time}\r\n                            inputProps={{ className: \"form-control form-control-sm\" }}\r\n                        />\r\n                    </Tooltip>\r\n                </div>\r\n                <div className=\"w-100\" />\r\n                <div className=\"col-6\">\r\n                    <label className=\"d-flex align-items-center\">\r\n                        <strong>{t(\"nhanvien\")}</strong>\r\n                        <i className=\"fas fa-asterisk fa-xs ml-1 asterisk\" />\r\n                    </label>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <label><strong>{t(\"khach\")}</strong></label>\r\n                </div>\r\n                <div className=\"w-100\" />\r\n                <div className=\"col-6\">\r\n                    <Tooltip active={errors.participants ? true : false} content={errors.participants} direction=\"top\">\r\n                        <MultipleSelect\r\n                            suggestions={suggestionsEmployee}\r\n                            onChange={handleChange}\r\n                            className=\"form-control\"\r\n                            name=\"employeeName\"\r\n                            onSelectedItem={handleSelectedEmployee}\r\n                            onDeleteItem={handleDeleteEmployee}\r\n                            isDisabled={isDisabledEmployeeNameInput}\r\n                            isMultipleSelected={true}\r\n                        />\r\n                    </Tooltip>\r\n                </div>\r\n                <div className=\"col-6\">\r\n\r\n                    <Tooltip active={errors.guestName ? true : false} content={errors.guestName} direction=\"top\">\r\n                        <input\r\n                            value={location.guestName}\r\n                            onChange={handleChange}\r\n                            name=\"guestName\"\r\n                            className=\"form-control form-control-sm\"\r\n                            autoComplete=\"off\"\r\n                            disabled={isDisabledGuestNameInput}\r\n                        />\r\n                    </Tooltip>\r\n                </div>\r\n                <div className=\"w-100\" />\r\n                <div className=\"col-6\">\r\n                    <label className=\"d-flex align-items-center\">\r\n                        <strong>{t(\"sodienthoai\")}</strong>\r\n                        <i className=\"fas fa-asterisk fa-xs ml-1 asterisk\" />\r\n                    </label>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <label><strong>{t(\"ghichu\")}</strong></label>\r\n                </div>\r\n                <div className=\"w-100\" />\r\n                <div className=\"col-6\">\r\n\r\n                    <Tooltip active={errors.phone ? true : false} content={errors.phone} direction=\"top\">\r\n                        <input\r\n                            value={location.phone}\r\n                            onChange={handleChange}\r\n                            name=\"phone\"\r\n                            className=\"form-control form-control-sm\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                    </Tooltip>\r\n                </div>\r\n                <div className=\"col-6\">\r\n\r\n                    <Tooltip active={errors.note ? true : false} content={errors.note} direction=\"top\">\r\n                        <input\r\n                            value={location.note}\r\n                            onChange={handleChange}\r\n                            name=\"note\"\r\n                            className=\"form-control form-control-sm\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                    </Tooltip>\r\n                </div>\r\n                <div className=\"w-100\" />\r\n                <div className=\"col-6 mt-2\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <button\r\n                            disabled={isDisabledBtnSave}\r\n                            onClick={handleClickSave}\r\n                            className=\"btn btn-outline-primary btn-sm mr-2\"\r\n                        >\r\n                            <i className=\"fas fa-check-circle mr-1\"></i>\r\n                            {t(\"xacnhan\")}\r\n                        </button>\r\n                        <button\r\n                            onClick={handleClickCancel}\r\n                            className=\"btn btn-outline-info btn-sm\"\r\n                        >\r\n                            <i className=\"fas fa-backspace mr-1\"></i>\r\n                            {t(\"quaylai\")}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n}\r\n","F:\\Project\\bkc-frontend\\src\\Components\\TicketRequest\\LocationItem.js",["381","382","383","384","385"],"import Datetime from 'react-datetime';\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport moment from 'moment';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NOT_EMPTY, ONLY_NUMBER, validation } from \"../../Helpers/validation\";\r\nimport { Tooltip } from '../Commons/Tooltip';\r\nimport { MultipleSelect } from '../Commons/MultipleSelect';\r\nimport { callApi } from '../../Helpers/callApi';\r\nimport remove from 'lodash/remove';\r\nimport { HTTP_METHOD, END_POINT, LOCATION_DEFAULT } from '../../Constants/CommonsConstants';\r\nimport { isEmpty } from 'lodash';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport const LocationItem = (props) => {\r\n    const {t} = useTranslation();\r\n    const [location, setLocation] = useState({ ...LOCATION_DEFAULT });\r\n    const [prevLocation, setPrevLocation] = useState({ ...location });\r\n    const [isUpdate, setIsUpdate] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [prevError, setPrevError] = useState({ ...errors });\r\n    const [suggestionsEmployee, setSuggestionsEmployee] = useState([]);\r\n    const [isDisabledGuestNameInput, setIsDisabledGuestNameInput] = useState(false);\r\n    const [isDisabledEmployeeNameInput, setIsDisabledEmployeeNameInput] = useState(false);\r\n    const [employees, setEmployees] = useState([]);\r\n    const dispatch = useDispatch();\r\n    function handleClick(event) {\r\n        switch (event) {\r\n            case \"update\": {\r\n                setIsUpdate(true);\r\n                if (location.participants.length > 0) {\r\n                    setIsDisabledEmployeeNameInput(false);\r\n                    setIsDisabledGuestNameInput(true);\r\n                }\r\n                else if (location.guestName != undefined && location.guestName.length != 0) {\r\n                    setIsDisabledEmployeeNameInput(true);\r\n                    setIsDisabledGuestNameInput(false);\r\n                } else {\r\n                    setIsDisabledEmployeeNameInput(false);\r\n                    setIsDisabledGuestNameInput(false);\r\n                }\r\n                break;\r\n            }\r\n            case \"cancel\":\r\n                setIsUpdate(false);\r\n                setLocation({ ...prevLocation });\r\n                setErrors({ ...prevError });\r\n                break;\r\n            case \"save\":\r\n                props.onSaveUpdate(location);\r\n                setIsUpdate(false);\r\n                setPrevLocation({ ...location });\r\n                break;\r\n            case \"delete\":\r\n                props.onDelete(location);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    async function handleChange(e) {\r\n        let validateResult = null;\r\n        switch (e.target.name) {\r\n            case \"location\": {\r\n                validateResult = validation(e.target.value, [NOT_EMPTY]);\r\n                break;\r\n            }\r\n            case \"employeeName\": {\r\n                const employeeName = e.target.value;\r\n                if (employeeName.length >= 3) {\r\n                    const res = await callApi(`${END_POINT}/employees/${employeeName}`, HTTP_METHOD.GET, null);\r\n                    if (res.status !== 200) return;\r\n                    const employees = res.data\r\n                    const suggestionsEmployee = [];\r\n                    for (let i = 0; i < employees.length; i++) {\r\n                        suggestionsEmployee.push({\r\n                            id: employees[i].id,\r\n                            label: employees[i].name + \" \" + employees[i].buName,\r\n                            content: employees[i].name\r\n                        });\r\n                    }\r\n                    setEmployees(employees);\r\n                    setSuggestionsEmployee(suggestionsEmployee);\r\n                }\r\n                return;\r\n            }\r\n            case \"guestName\": {\r\n                if (isDisabledGuestNameInput) return;\r\n                const guestName = e.target.value;\r\n                if (guestName.length <= 0) {\r\n                    setIsDisabledEmployeeNameInput(false);\r\n                    setErrors({\r\n                        ...errors,\r\n                        participants: \"participant or guestName need to be fill\",\r\n                        guestName: \"participant or guestName need to be fill\"\r\n                    });\r\n                } else {\r\n                    const cloneError = { ...errors };\r\n                    const { guestName: gn, participants: emps, ...rest } = cloneError;\r\n                    setErrors(rest);\r\n                    setIsDisabledEmployeeNameInput(true);\r\n                }\r\n                setLocation({\r\n                    ...location,\r\n                    [e.target.name]: e.target.value\r\n                })\r\n                return;\r\n            }\r\n            case \"phone\": {\r\n                validateResult = validation(e.target.value, [NOT_EMPTY, ONLY_NUMBER]);\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n        if (!validateResult) {\r\n            let { [e.target.name]: a, ...rest } = errors;\r\n            setErrors(rest);\r\n        }\r\n        else {\r\n            setErrors({\r\n                ...errors,\r\n                [e.target.name]: validateResult\r\n            })\r\n        }\r\n        setLocation({\r\n            ...location,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    function handleChangeTime(momentObject) {\r\n        let time = null;\r\n        if (typeof momentObject === \"string\" || momentObject instanceof String) {\r\n            time = moment(momentObject, [\"H:m\", \"H:mm\"], true);\r\n            if (time.isValid()) {\r\n                let { time: x, ...rest } = errors;\r\n                setErrors(rest);\r\n            } else {\r\n                setErrors({\r\n                    ...errors,\r\n                    time: \"This field is not valid\"\r\n                })\r\n            }\r\n            setLocation({\r\n                ...location,\r\n                time: time\r\n            })\r\n        } else {\r\n            time = moment(momentObject, [\"H:m\", \"H:mm\"], true);\r\n            let { time: x, ...rest } = errors;\r\n            setErrors(rest);\r\n            setLocation({\r\n                ...location,\r\n                time: time.format(\"H:mm\")\r\n            })\r\n        }\r\n    }\r\n    function handleSelectedEmployee(item) {\r\n        const employee = employees && employees.find(e => +e.id === +item.id)\r\n        if (isEmpty(employee)) return;\r\n        const participant = {\r\n            employeeId: employee.id,\r\n            employeeName: employee.name,\r\n            employeeEmail: employee.email\r\n        }\r\n        const newParticipants = [...location.participants, participant];\r\n        setLocation({\r\n            ...location,\r\n            participants: newParticipants\r\n        })\r\n        const { participants: emp, guestName: gn, ...rest } = errors;\r\n        setErrors(rest);\r\n        setIsDisabledGuestNameInput(true);\r\n    }\r\n    function handleDeleteEmployee(employeeId) {\r\n        const cloneParticipants = [...location.participants];\r\n        if (cloneParticipants.length === 1) {\r\n            setIsDisabledGuestNameInput(false);\r\n        }\r\n        if (cloneParticipants.length === 1 && location.guestName.length === 0) {\r\n            setErrors({\r\n                ...errors,\r\n                participants: \"participant or guestName need to be fill\",\r\n                guestName: \"participant or guestName need to be fill\"\r\n            })\r\n        }\r\n        remove(cloneParticipants, (item) => {\r\n            return item.employeeId === employeeId;\r\n        });\r\n        setLocation({\r\n            ...location,\r\n            participants: cloneParticipants\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        setLocation(props.location);\r\n        setPrevLocation(props.location);\r\n    }, [props.location]);\r\n    return (\r\n        <tr>\r\n            <td data-label={t(\"stt\")}>\r\n                {props.no}\r\n            </td>\r\n            <td data-label={t(\"noidon\")}>\r\n                <Tooltip active={errors.place ? true : false} content={errors.place} direction=\"top\">\r\n                    {isUpdate ? <input onChange={handleChange} value={location.place} className=\"form-control form-control-sm\" name=\"place\" /> : location.place}\r\n\r\n                </Tooltip>\r\n            </td>\r\n            <td data-label={t(\"giodon\")}>\r\n                <Tooltip active={errors.time ? true : false} content={errors.time} direction=\"top\">\r\n                    {\r\n                        isUpdate ?\r\n                            <Datetime\r\n                                dateFormat={false}\r\n                                timeFormat=\"H:mm\"\r\n                                onChange={handleChangeTime}\r\n                                initialValue={location.time}\r\n                                inputProps={{ className: \"form-control form-control-sm\" }}\r\n                            />\r\n                            : location.time\r\n                    }\r\n                </Tooltip>\r\n            </td>\r\n            <td data-label={t(\"nhanvien\")}>\r\n                <Tooltip active={errors.participants ? true : false} content={errors.participants} direction=\"top\">\r\n                    {\r\n                        isUpdate ?\r\n                            <MultipleSelect\r\n                                suggestions={suggestionsEmployee}\r\n                                onChange={handleChange}\r\n                                className=\"form-control\"\r\n                                name=\"employeeName\"\r\n                                onSelectedItem={handleSelectedEmployee}\r\n                                onDeleteItem={handleDeleteEmployee}\r\n                                initialValue={location.participants && location.participants.map(participant => { return { id: participant.employeeId, content: participant.employeeName } })}\r\n                                isDisabled={isDisabledEmployeeNameInput}\r\n                                isMultipleSelected={true}\r\n                            />\r\n                            :\r\n                            location.participants && location.participants.map(participant => { return participant.employeeName }).join(\", \")\r\n                    }\r\n                </Tooltip>\r\n\r\n            </td>\r\n            <td data-label={t(\"khach\")}>\r\n                <Tooltip active={errors.guestName ? true : false} content={errors.guestName} direction=\"top\">\r\n                    {\r\n                        isUpdate ?\r\n                            <input disabled={isDisabledGuestNameInput}\r\n                                onChange={handleChange}\r\n                                value={location.guestName}\r\n                                className=\"form-control form-control-sm\" name=\"guestName\"\r\n                            />\r\n                            : location.guestName\r\n                    }\r\n                </Tooltip>\r\n\r\n            </td>\r\n            <td data-label={t(\"sodienthoai\")}>\r\n                <Tooltip active={errors.phone ? true : false} content={errors.phone} direction=\"top\">\r\n                    {isUpdate ? <input onChange={handleChange} value={location.phone} className=\"form-control form-control-sm\" name=\"phone\" /> : location.phone}\r\n                </Tooltip>\r\n\r\n            </td>\r\n            <td data-label={t(\"ghichu\")}>\r\n                {isUpdate ? <input onChange={handleChange} value={location.note} className=\"form-control form-control-sm\" name=\"note\" /> : location.note}\r\n\r\n            </td>\r\n            <td data-label={t(\"hanhdong\")}>\r\n                <button\r\n                    disabled={Object.keys(errors).length === 0 ? false : true}\r\n                    onClick={() => handleClick(isUpdate ? \"save\" : \"update\")}\r\n                    className=\"btn btn-outline-primary btn-sm mr-2\">\r\n                    <i className=\"fas fa-edit mr-1\"></i>\r\n                    {isUpdate ? t(\"luu\") : t(\"suayeucau\")}\r\n\r\n                </button>\r\n                <button\r\n                    onClick={() => handleClick(isUpdate ? \"cancel\" : \"delete\")}\r\n                    className=\"btn btn-outline-danger btn-sm\">\r\n                    <i className=\"fas fa-trash-alt mr-1\"></i>\r\n                    {isUpdate ? t(\"huybo\") : t(\"xoayeucau\")}\r\n\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    );\r\n}","F:\\Project\\bkc-frontend\\src\\ActionCreators\\ticketManagementActionCreator.js",[],"F:\\Project\\bkc-frontend\\src\\ActionCreators\\ticketHistoryActionCreator.js",[],"F:\\Project\\bkc-frontend\\src\\ActionCreators\\ticketHandleActionCreator.js",["386"],"import { history } from \"../App\"\r\nimport {\r\n    SET_DRIVERS,\r\n    SET_NOTE_FOR_DRIVER,\r\n    SET_SELECTED_CAR,\r\n    SET_TICKET,\r\n    SET_TICKET_CARS,\r\n    SET_DRIVER_WAS_BOOKED\r\n} from \"../Constants/TicketHandleConstants\"\r\nimport { END_POINT, HTTP_METHOD } from \"../Constants/CommonsConstants\"\r\nimport { callApi } from \"../Helpers/callApi\"\r\nimport { notification, NOTIFICATION_TYPE } from \"../Helpers/notification\"\r\n\r\n\r\nexport const setNoteForDriver = noteForDriver => {\r\n    return {\r\n        type: SET_NOTE_FOR_DRIVER,\r\n        noteForDriver\r\n    }\r\n}\r\nexport const setSelectedCar = selectedCar => {\r\n    return {\r\n        type: SET_SELECTED_CAR,\r\n        selectedCar\r\n    }\r\n}\r\nexport const setTickets = ticket => {\r\n    return {\r\n        type: SET_TICKET,\r\n        ticket\r\n    }\r\n}\r\nexport const setTicketCars = ticketCars => {\r\n    return {\r\n        type: SET_TICKET_CARS,\r\n        ticketCars\r\n    }\r\n}\r\nexport const setDrivers = drivers => {\r\n    return{\r\n        type: SET_DRIVERS,\r\n        drivers\r\n    }\r\n}\r\nexport const setDriversWasBooked = driversWasBooked => {\r\n    return {\r\n        type: SET_DRIVER_WAS_BOOKED,\r\n        driversWasBooked\r\n    }\r\n}\r\n\r\n\r\nexport const fetchTicketsById = ticketId => {\r\n    return async dispatch => {\r\n        const res = await callApi(`${END_POINT}/tickets/?selector=TICKETID&id=${ticketId}`, HTTP_METHOD.GET, null);\r\n        if (res.status !== 200) {\r\n            return;\r\n        }\r\n        const ticket = res.data;\r\n        dispatch(setTickets(ticket));\r\n\r\n    }\r\n}\r\nexport const fetchTicketCarsByTicketId = ticketId => {\r\n    return async dispatch => {\r\n        const res = await callApi(`${END_POINT}/ticket-car/${ticketId}`, HTTP_METHOD.GET, null);\r\n        if (res.status !== 200) {\r\n            return;\r\n        }\r\n        const ticketCars = res.data;\r\n        dispatch(setTicketCars(ticketCars));\r\n    }\r\n}\r\nexport const fetchDriversWasBooked = buId => {\r\n    return async dispatch => {\r\n        const res = await callApi(`${END_POINT}/drivers/?buId=${buId}&&isFinish=${false}`, HTTP_METHOD.GET, null)\r\n        if(res.status !== 200){\r\n            return notification(NOTIFICATION_TYPE.ERROR, \"Load drivers fail\");\r\n        }\r\n        const driversWasBooked = res.data;\r\n        dispatch(setDriversWasBooked(driversWasBooked));\r\n    }\r\n}\r\n\r\nexport const fetchDriversByBuId = buId => {\r\n    return async dispatch => {\r\n        const res = await callApi(`${END_POINT}/drivers/${buId}`, HTTP_METHOD.GET, null)\r\n        if(res.status !== 200){\r\n            return notification(NOTIFICATION_TYPE.ERROR, \"Load drivers fail\");\r\n        }\r\n        const drivers = res.data;\r\n        dispatch(setDrivers(drivers));\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","F:\\Project\\bkc-frontend\\src\\Constants\\TicketManagementConstants.js",[],"F:\\Project\\bkc-frontend\\src\\Constants\\TicketHistoryConstants.js",[],"F:\\Project\\bkc-frontend\\src\\Constants\\TicketHandleConstants.js",[],{"ruleId":"387","replacedBy":"388"},{"ruleId":"389","replacedBy":"390"},{"ruleId":"391","severity":1,"message":"392","line":7,"column":7,"nodeType":"393","messageId":"394","endLine":7,"endColumn":16},{"ruleId":"391","severity":1,"message":"395","line":8,"column":10,"nodeType":"393","messageId":"394","endLine":8,"endColumn":21},{"ruleId":"391","severity":1,"message":"396","line":14,"column":10,"nodeType":"393","messageId":"394","endLine":14,"endColumn":19},{"ruleId":"397","severity":1,"message":"398","line":19,"column":8,"nodeType":"399","endLine":19,"endColumn":10,"suggestions":"400"},{"ruleId":"391","severity":1,"message":"401","line":7,"column":10,"nodeType":"393","messageId":"394","endLine":7,"endColumn":15},{"ruleId":"391","severity":1,"message":"402","line":7,"column":17,"nodeType":"393","messageId":"394","endLine":7,"endColumn":23},{"ruleId":"391","severity":1,"message":"403","line":8,"column":10,"nodeType":"393","messageId":"394","endLine":8,"endColumn":22},{"ruleId":"391","severity":1,"message":"404","line":8,"column":24,"nodeType":"393","messageId":"394","endLine":8,"endColumn":41},{"ruleId":"405","severity":1,"message":"406","line":88,"column":37,"nodeType":"407","endLine":88,"endColumn":194},{"ruleId":"408","severity":1,"message":"409","line":99,"column":37,"nodeType":"407","endLine":99,"endColumn":163},{"ruleId":"408","severity":1,"message":"409","line":100,"column":37,"nodeType":"407","endLine":100,"endColumn":147},{"ruleId":"391","severity":1,"message":"396","line":3,"column":10,"nodeType":"393","messageId":"394","endLine":3,"endColumn":19},{"ruleId":"391","severity":1,"message":"403","line":7,"column":10,"nodeType":"393","messageId":"394","endLine":7,"endColumn":22},{"ruleId":"391","severity":1,"message":"404","line":7,"column":24,"nodeType":"393","messageId":"394","endLine":7,"endColumn":41},{"ruleId":"410","severity":1,"message":"411","line":59,"column":13,"nodeType":"412","messageId":"413","endLine":60,"endColumn":23},{"ruleId":"391","severity":1,"message":"414","line":9,"column":10,"nodeType":"393","messageId":"394","endLine":9,"endColumn":23},{"ruleId":"391","severity":1,"message":"415","line":17,"column":12,"nodeType":"393","messageId":"394","endLine":17,"endColumn":18},{"ruleId":"391","severity":1,"message":"416","line":17,"column":20,"nodeType":"393","messageId":"394","endLine":17,"endColumn":29},{"ruleId":"417","severity":1,"message":"418","line":35,"column":26,"nodeType":"419","messageId":"420","endLine":35,"endColumn":28},{"ruleId":"391","severity":1,"message":"396","line":1,"column":20,"nodeType":"393","messageId":"394","endLine":1,"endColumn":29},{"ruleId":"391","severity":1,"message":"421","line":4,"column":45,"nodeType":"393","messageId":"394","endLine":4,"endColumn":57},{"ruleId":"391","severity":1,"message":"422","line":37,"column":14,"nodeType":"393","messageId":"394","endLine":37,"endColumn":24},{"ruleId":"391","severity":1,"message":"423","line":4,"column":10,"nodeType":"393","messageId":"394","endLine":4,"endColumn":22},{"ruleId":"391","severity":1,"message":"403","line":8,"column":10,"nodeType":"393","messageId":"394","endLine":8,"endColumn":22},{"ruleId":"391","severity":1,"message":"404","line":8,"column":24,"nodeType":"393","messageId":"394","endLine":8,"endColumn":41},{"ruleId":"391","severity":1,"message":"424","line":1,"column":8,"nodeType":"393","messageId":"394","endLine":1,"endColumn":14},{"ruleId":"391","severity":1,"message":"425","line":1,"column":10,"nodeType":"393","messageId":"394","endLine":1,"endColumn":18},{"ruleId":"391","severity":1,"message":"426","line":8,"column":12,"nodeType":"393","messageId":"394","endLine":8,"endColumn":29},{"ruleId":"391","severity":1,"message":"427","line":105,"column":14,"nodeType":"393","messageId":"394","endLine":105,"endColumn":24},{"ruleId":"408","severity":1,"message":"409","line":154,"column":29,"nodeType":"407","endLine":154,"endColumn":76},{"ruleId":"391","severity":1,"message":"428","line":20,"column":14,"nodeType":"393","messageId":"394","endLine":20,"endColumn":31},{"ruleId":"417","severity":1,"message":"418","line":41,"column":26,"nodeType":"419","messageId":"420","endLine":41,"endColumn":28},{"ruleId":"429","severity":1,"message":"430","line":85,"column":169,"nodeType":"431","endLine":85,"endColumn":180},{"ruleId":"391","severity":1,"message":"432","line":9,"column":11,"nodeType":"393","messageId":"394","endLine":9,"endColumn":19},{"ruleId":"391","severity":1,"message":"433","line":1,"column":10,"nodeType":"393","messageId":"394","endLine":1,"endColumn":16},{"ruleId":"391","severity":1,"message":"434","line":49,"column":19,"nodeType":"393","messageId":"394","endLine":49,"endColumn":32},{"ruleId":"397","severity":1,"message":"435","line":80,"column":8,"nodeType":"399","endLine":80,"endColumn":20,"suggestions":"436"},{"ruleId":"397","severity":1,"message":"437","line":90,"column":8,"nodeType":"399","endLine":90,"endColumn":26,"suggestions":"438"},{"ruleId":"429","severity":1,"message":"430","line":129,"column":46,"nodeType":"431","endLine":129,"endColumn":57},{"ruleId":"397","severity":1,"message":"398","line":34,"column":8,"nodeType":"399","endLine":34,"endColumn":18,"suggestions":"439"},{"ruleId":"391","severity":1,"message":"432","line":11,"column":11,"nodeType":"393","messageId":"394","endLine":11,"endColumn":19},{"ruleId":"391","severity":1,"message":"440","line":1,"column":10,"nodeType":"393","messageId":"394","endLine":1,"endColumn":17},{"ruleId":"391","severity":1,"message":"441","line":3,"column":22,"nodeType":"393","messageId":"394","endLine":3,"endColumn":31},{"ruleId":"391","severity":1,"message":"432","line":16,"column":11,"nodeType":"393","messageId":"394","endLine":16,"endColumn":19},{"ruleId":"391","severity":1,"message":"442","line":19,"column":11,"nodeType":"393","messageId":"394","endLine":19,"endColumn":19},{"ruleId":"443","severity":1,"message":"444","line":123,"column":21,"nodeType":"393","messageId":"445","endLine":123,"endColumn":37},{"ruleId":"397","severity":1,"message":"446","line":175,"column":8,"nodeType":"399","endLine":175,"endColumn":10,"suggestions":"447"},{"ruleId":"397","severity":1,"message":"446","line":200,"column":8,"nodeType":"399","endLine":200,"endColumn":35,"suggestions":"448"},{"ruleId":"397","severity":1,"message":"449","line":226,"column":8,"nodeType":"399","endLine":226,"endColumn":17,"suggestions":"450"},{"ruleId":"397","severity":1,"message":"451","line":262,"column":8,"nodeType":"399","endLine":262,"endColumn":64,"suggestions":"452"},{"ruleId":"391","severity":1,"message":"453","line":1,"column":21,"nodeType":"393","messageId":"394","endLine":1,"endColumn":29},{"ruleId":"397","severity":1,"message":"446","line":24,"column":8,"nodeType":"399","endLine":24,"endColumn":18,"suggestions":"454"},{"ruleId":"391","severity":1,"message":"455","line":5,"column":10,"nodeType":"393","messageId":"394","endLine":5,"endColumn":21},{"ruleId":"391","severity":1,"message":"456","line":5,"column":23,"nodeType":"393","messageId":"394","endLine":5,"endColumn":32},{"ruleId":"391","severity":1,"message":"457","line":6,"column":10,"nodeType":"393","messageId":"394","endLine":6,"endColumn":17},{"ruleId":"391","severity":1,"message":"440","line":7,"column":8,"nodeType":"393","messageId":"394","endLine":7,"endColumn":15},{"ruleId":"397","severity":1,"message":"446","line":55,"column":8,"nodeType":"399","endLine":55,"endColumn":24,"suggestions":"458"},{"ruleId":"397","severity":1,"message":"449","line":69,"column":8,"nodeType":"399","endLine":69,"endColumn":17,"suggestions":"459"},{"ruleId":"397","severity":1,"message":"460","line":226,"column":5,"nodeType":"393","endLine":226,"endColumn":14,"suggestions":"461"},{"ruleId":"391","severity":1,"message":"462","line":21,"column":23,"nodeType":"393","messageId":"394","endLine":21,"endColumn":35},{"ruleId":"391","severity":1,"message":"432","line":26,"column":11,"nodeType":"393","messageId":"394","endLine":26,"endColumn":19},{"ruleId":"417","severity":1,"message":"463","line":35,"column":45,"nodeType":"419","messageId":"420","endLine":35,"endColumn":47},{"ruleId":"417","severity":1,"message":"463","line":35,"column":87,"nodeType":"419","messageId":"420","endLine":35,"endColumn":89},{"ruleId":"410","severity":1,"message":"411","line":112,"column":13,"nodeType":"412","messageId":"413","endLine":113,"endColumn":23},{"ruleId":"391","severity":1,"message":"464","line":1,"column":10,"nodeType":"393","messageId":"394","endLine":1,"endColumn":17},"no-native-reassign",["465"],"no-negated-in-lhs",["466"],"no-unused-vars","'enhancers' is assigned a value but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'employee.buId'. Either include them or remove the dependency array.","ArrayExpression",["467"],"'login' is defined but never used.","'logout' is defined but never used.","'notification' is defined but never used.","'NOTIFICATION_TYPE' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'AutoComplete1' is defined but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'defaultValue' is assigned a value but never used.","'handleBlur' is defined but never used.","'deleteDriver' is defined but never used.","'moment' is defined but never used.","'Fragment' is defined but never used.","'isShowSuggestions' is assigned a value but never used.","'handleExit' is defined but never used.","'handleClickDelete' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'dispatch' is assigned a value but never used.","'remove' is defined but never used.","'noteForDriver' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'driver.car.id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["468"],"React Hook useEffect has a missing dependency: 'driver.car.id'. Either include it or remove the dependency array.",["469"],["470"],"'isEmpty' is defined but never used.","'useParams' is defined but never used.","'employee' is assigned a value but never used.","no-redeclare","'ticketAddRequest' is already defined.","redeclared","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["471"],["472"],"React Hook useEffect has a missing dependency: 'ticketId'. Either include it or remove the dependency array.",["473"],"React Hook useEffect has missing dependencies: 'errors' and 'ticketDetailLocal'. Either include them or remove the dependency array.",["474"],"'useState' is defined but never used.",["475"],"'HTTP_METHOD' is defined but never used.","'END_POINT' is defined but never used.","'callApi' is defined but never used.",["476"],["477"],"React Hook useEffect contains a call to 'setIsDisabledBtnSave'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [errors] as a second argument to the useEffect Hook.",["478"],"'setPrevError' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'history' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"479","fix":"480"},{"desc":"481","fix":"482"},{"desc":"483","fix":"484"},{"desc":"485","fix":"486"},{"desc":"487","fix":"488"},{"desc":"489","fix":"490"},{"desc":"491","fix":"492"},{"desc":"493","fix":"494"},{"desc":"495","fix":"496"},{"desc":"497","fix":"498"},{"desc":"491","fix":"499"},{"desc":"500","fix":"501"},"Update the dependencies array to be: [dispatch, employee.buId]",{"range":"502","text":"503"},"Update the dependencies array to be: [driver.car.id, props, ticketCars]",{"range":"504","text":"505"},"Update the dependencies array to be: [driver.car.id, driversWasBooked]",{"range":"506","text":"507"},"Update the dependencies array to be: [dispatch, employee.buId, ticketId]",{"range":"508","text":"509"},"Update the dependencies array to be: [dispatch]",{"range":"510","text":"511"},"Update the dependencies array to be: [ticketDetailLocal, errors, dispatch]",{"range":"512","text":"513"},"Update the dependencies array to be: [ticketId, tickets]",{"range":"514","text":"515"},"Update the dependencies array to be: [ticketDetailLocal.startDate, ticketDetailLocal.endDate, ticketDetailLocal, errors]",{"range":"516","text":"517"},"Update the dependencies array to be: [dispatch, employee]",{"range":"518","text":"519"},"Update the dependencies array to be: [dispatch, locationLocals]",{"range":"520","text":"521"},{"range":"522","text":"515"},"Add dependencies array: [errors]",{"range":"523","text":"524"},[872,874],"[dispatch, employee.buId]",[3538,3550],"[driver.car.id, props, ticketCars]",[3851,3869],"[driver.car.id, driversWasBooked]",[1207,1217],"[dispatch, employee.buId, ticketId]",[9579,9581],"[dispatch]",[7718,7745],"[ticketDetailLocal, errors, dispatch]",[8692,8701],"[ticketId, tickets]",[9958,10014],"[ticketDetailLocal.startDate, ticketDetailLocal.endDate, ticketDetailLocal, errors]",[1098,1108],"[dispatch, employee]",[2178,2194],"[dispatch, locationLocals]",[2608,2617],[8748,8748],", [errors]"]